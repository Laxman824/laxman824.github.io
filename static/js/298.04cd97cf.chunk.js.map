{"version":3,"file":"static/js/298.04cd97cf.chunk.js","mappings":"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","sources":["components/chatbot/ChatBot.js"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport Lottie from \"lottie-react\";\nimport chatbotLottie from './chatbot_lottie.json';\nimport ChatBot from 'react-simple-chatbot';\nimport { ThemeProvider } from 'styled-components';\nimport styled, { keyframes } from 'styled-components';\n\n\n// --- Animations for a \"Wow Experience\" ---\nconst slideInUp = keyframes`\n  from {\n    transform: translateY(20px);\n    opacity: 0;\n  }\n  to {\n    transform: translateY(0);\n    opacity: 1;\n  }\n`;\n\n// --- MODIFIED ---: A more subtle, breathing shadow effect for the idle state\nconst pulse = keyframes`\n  0% { box-shadow: 0 6px 16px rgba(79, 70, 229, 0.3); }\n  50% { box-shadow: 0 8px 24px rgba(79, 70, 229, 0.5); }\n  100% { box-shadow: 0 6px 16px rgba(79, 70, 229, 0.3); }\n`;\n\n// --- MODIFIED ---: A slower, more graceful floating animation for the idle state\nconst float = keyframes`\n  0% { transform: translateY(0); }\n  50% { transform: translateY(-8px); }\n  100% { transform: translateY(0); }\n`;\n\n// --- NEW ---: A more energetic bounce animation for the hover state\nconst bounce = keyframes`\n  0%, 100% {\n    transform: translateY(0);\n  }\n  50% {\n    transform: translateY(-15px);\n  }\n`;\n\n// Adding new animations\nconst ripple = keyframes`\n  0% { transform: scale(0.8); opacity: 0.6; }\n  50% { transform: scale(1.5); opacity: 0.2; }\n  100% { transform: scale(0.8); opacity: 0.6; }\n`;\n\n// Adding Welcome Screen Components\nconst WelcomeScreen = styled.div`\n  position: fixed;\n  top: 0; left: 0;\n  width: 100vw; height: 100vh;\n  background: linear-gradient(to bottom right, #fdfbfb, #ebedee);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  z-index: 2000;\n  animation: ${slideInUp} 0.6s ease;\n`;\n\nconst WelcomeText = styled.h2`\n  font-size: 24px;\n  margin-top: 20px;\n  color: #333;\n  text-align: center;\n`;\n\nconst StartButton = styled.button`\n  margin-top: 30px;\n  padding: 12px 24px;\n  font-size: 16px;\n  background: linear-gradient(135deg, #4F46E5, #7C3AED);\n  color: white;\n  border: none;\n  border-radius: 30px;\n  cursor: pointer;\n  box-shadow: 0 6px 16px rgba(0, 0, 0, 0.2);\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: scale(1.05);\n    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.3);\n  }\n`;\n\nconst RippleEffect = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  background: ${props => props.theme.accentBright || '#4F46E5'};\n  opacity: 0.1;\n`;\n\nconst ButtonContent = styled.div`\n  position: relative;\n  z-index: 2;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  font-size: 28px;\n  \n  ${props => props.isOpen && `\n    animation: none;\n    transform: rotate(0);\n  `}\n`;\n\n// --- MODIFIED ---: Updated FloatingButton for the best experience\nconst FloatingButton = styled.button`\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  width: 65px;\n  height: 65px;\n  border-radius: 50%;\n  background: linear-gradient(135deg, #4F46E5, #7C3AED);\n  color: white;\n  border: none;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.3s ease;\n  overflow: visible; /* Allows the shadow to be seen outside the button bounds */\n\n  /* Default idle animation */\n  animation: ${float} 4s ease-in-out infinite;\n\n  /* The shadow is now the primary pulsing element */\n  box-shadow: 0 6px 16px rgba(79, 70, 229, 0.3);\n  animation: ${pulse} 2.5s ease-in-out infinite, ${float} 4s ease-in-out infinite;\n\n\n  /* On hover, override the idle animation with the bounce */\n  &:hover {\n    /* Use 'none' to stop the default animations and apply the bounce */\n    animation: ${bounce} 0.8s ease;\n    /* Enhance the shadow even more on hover for a lifting effect */\n    box-shadow: 0 12px 28px rgba(79, 70, 229, 0.6);\n  }\n\n  &:active {\n    transform: scale(0.95);\n    transition: transform 0.1s ease;\n  }\n`;\n\n// --- MODIFIED FOR GLASSMORPHISM ---\nconst ChatbotContainer = styled.div`\n  position: fixed;\n  bottom: 100px;\n  right: 20px;\n  z-index: 1000;\n  width: 400px;\n  min-height: 500px;\n  animation: ${slideInUp} 0.5s ease-in-out;\n  \n  /* Key properties for the glass effect */\n  background: rgba(255, 255, 255, 0.6); /* Semi-transparent background */\n  backdrop-filter: blur(15px); /* The essential blur effect */\n  -webkit-backdrop-filter: blur(15px); /* For Safari compatibility */\n  \n  border-radius: 15px;\n  border: 1px solid rgba(255, 255, 255, 0.18); /* A subtle border to \"catch the light\" */\n  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37); /* Shadow to lift it off the page */\n  overflow: hidden; /* Ensures content stays within the rounded corners */\n`;\n\n// Add WelcomeContainer for the full-screen welcome message\nconst WelcomeContainer = styled.div`\n  width: 100%;\n  height: 500px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background: linear-gradient(135deg, rgba(255,255,255,0.1), rgba(255,255,255,0.05));\n  padding: 20px;\n`;\n\n// Theme with Gradient Header\nconst botTheme = {\n  background: 'transparent', // Important: The chatbot's own background must be transparent\n  fontFamily: 'inherit',\n  headerBgColor: 'linear-gradient(90deg, #00529B, #00284D)',\n  headerFontColor: '#fff',\n  headerFontSize: '16px',\n  botBubbleColor: '#00529B',\n  botFontColor: '#fff',\n  userBubbleColor: '#fff',\n  userFontColor: '#4a4a4a',\n};\n\n// Animated SVG Avatars\nconst botEmojiSVG = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\">\n  <defs>\n    <linearGradient id=\"botGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n      <stop offset=\"0%\" style=\"stop-color:#4F46E5;stop-opacity:1\" />\n      <stop offset=\"100%\" style=\"stop-color:#7C3AED;stop-opacity:1\" />\n    </linearGradient>\n    <filter id=\"glow\">\n      <feGaussianBlur stdDeviation=\"1\" result=\"coloredBlur\"/>\n      <feMerge>\n        <feMergeNode in=\"coloredBlur\"/>\n        <feMergeNode in=\"SourceGraphic\"/>\n      </feMerge>\n    </filter>\n  </defs>\n  <style>\n    .bot-head { animation: float 3s ease-in-out infinite; }\n    .bot-eye { animation: blink 4s infinite; }\n    .bot-antenna { animation: antenna 2s ease-in-out infinite; }\n    @keyframes float {\n      0%, 100% { transform: translateY(0); }\n      50% { transform: translateY(-2px); }\n    }\n    @keyframes blink {\n      0%, 45%, 55%, 100% { transform: scaleY(1); }\n      50% { transform: scaleY(0.1); }\n    }\n    @keyframes antenna {\n      0%, 100% { transform: rotate(-5deg); }\n      50% { transform: rotate(5deg); }\n    }\n  </style>\n  <g class=\"bot-head\" fill=\"url(#botGradient)\" filter=\"url(#glow)\">\n    <rect x=\"8\" y=\"15\" width=\"24\" height=\"20\" rx=\"8\"/>\n    <circle cx=\"20\" cy=\"13\" r=\"8\"/>\n    <line class=\"bot-antenna\" x1=\"20\" y1=\"5\" x2=\"20\" y2=\"2\" stroke=\"url(#botGradient)\" stroke-width=\"2\" stroke-linecap=\"round\"/>\n  </g>\n  <g class=\"bot-eye\" fill=\"#FFFFFF\">\n    <circle cx=\"15\" cy=\"18\" r=\"2\"/>\n    <circle cx=\"25\" cy=\"18\" r=\"2\"/>\n  </g>\n  <path class=\"bot-mouth\" d=\"M14 26 Q20 30 26 26\" stroke=\"#FFFFFF\" stroke-width=\"1.5\" fill=\"none\"/>\n</svg>`;\nconst botAvatarUrl = `data:image/svg+xml;charset=utf-8,${encodeURIComponent(botEmojiSVG)}`;\nconst userEmojiSVG = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\"><text x=\"5\" y=\"30\" font-family=\"sans-serif\" font-size=\"28\">👤</text></svg>`;\nconst userAvatarUrl = `data:image/svg+xml;charset=utf-8,${encodeURIComponent(userEmojiSVG)}`;\n\n\n// --- Custom Interactive Components ---\nconst Typing = () => (\n  <div style={{ display: 'flex', alignItems: 'center', marginLeft: '6px' }}>\n    <div className=\"typing-indicator\">\n      <span></span>\n      <span></span>\n      <span></span>\n    </div>\n  </div>\n);\n\nconst ProjectCard = ({ name, description, imageUrl, link }) => (\n  <div style={{ width: '100%', padding: '10px', fontFamily: 'inherit' }}>\n    {imageUrl && <img src={imageUrl} alt={name} style={{ width: '100%', borderRadius: '8px' }} />}\n    <h4 style={{ margin: '10px 0 5px 0', color: '#00284D' }}>{name}</h4>\n    <p style={{ margin: '0 0 10px 0', fontSize: '14px' }}>{description}</p>\n    <a href={link} target=\"_blank\" rel=\"noopener noreferrer\" style={{\n      display: 'block', textAlign: 'center', padding: '8px',\n      backgroundColor: '#00529B', color: 'white', borderRadius: '5px',\n      textDecoration: 'none', fontWeight: 'bold'\n    }}>View Project</a>\n  </div>\n);\n\n// --- Chatbot Steps Logic ---\n// UPDATED KEYWORD RECOGNITION\nconst checkUserInput = ({ value }) => {\n  const lowerCaseValue = value.toLowerCase();\n  if (lowerCaseValue.includes('project')) return 'project_options';\n  if (lowerCaseValue.includes('skill') || lowerCaseValue.includes('tech')) return 'skills';\n  if (lowerCaseValue.includes('contact') || lowerCaseValue.includes('email')) return 'contact';\n  if (lowerCaseValue.includes('education') || lowerCaseValue.includes('degree') || lowerCaseValue.includes('iit')) return 'education';\n  if (lowerCaseValue.includes('work') || lowerCaseValue.includes('experience') || lowerCaseValue.includes('job') || lowerCaseValue.includes('intern')) return 'experience_intro';\n  if (lowerCaseValue.includes('certification') || lowerCaseValue.includes('certificate')) return 'certifications_info';\n  if (lowerCaseValue.includes('creator') || lowerCaseValue.includes('who made you')) return 'creator_info';\n  return 'unrecognized';\n};\n\n// UPDATED CONVERSATION STEPS WITH NEW DETAILS\nconst steps = [\n  {\n    id: 'welcome',\n    message: 'Hi there! I\\'m Laxman\\'s portfolio assistant.',\n    trigger: 'intro'\n  },\n  { id: 'intro', message: \"I can tell you about his skills, projects, and professional experience. What's on your mind?\", trigger: 'options', delay: 1500 },\n  {\n    id: 'options',\n    options: [\n      { value: 'background', label: 'Tell me about Laxman', trigger: 'typing_background' },\n      { value: 'experience', label: 'Experience & Certifications', trigger: 'experience_intro' },\n      { value: 'skills', label: 'What are his skills?', trigger: 'typing_skills' },\n      { value: 'projects', label: 'Show me his projects', trigger: 'project_options' },\n      { value: 'contact', label: 'How can I contact him?', trigger: 'typing_contact' },\n      { value: 'creator', label: 'Who made you?', trigger: 'creator_info' },\n    ],\n  },\n  // Typing indicators\n  { id: 'typing_background', component: <Typing />, asMessage: true, trigger: 'background' },\n  { id: 'typing_skills', component: <Typing />, asMessage: true, trigger: 'skills' },\n  { id: 'typing_contact', component: <Typing />, asMessage: true, trigger: 'contact' },\n\n  // --- UPDATED: Background & Education Path ---\n  { id: 'background', message: \"Laxman  is a skilled Software Developer and AI Enthusiast, currently working at CAMS Mutual Funds. He's a proud alumnus of IIT Delhi, holding both a Bachelor's and a Master's degree in Computer Science and Engineering.\", trigger: 'education', delay: 3000 },\n  { id: 'education', message: \"His education at IIT Delhi (2018-2023) provided a strong foundation in Data Structures, AI/ML, and Security. He complemented this with hands-on NLP projects and numerous certifications.\", trigger: 'ask-more' },\n\n  // --- UPDATED: Skills Path ---\n  { id: 'skills', message: 'Laxman has expertise across three main domains: Full Stack Development (using the MERN stack), Data Science & AI (with a focus on Computer Vision & NLP), and Cloud Infrastructure (AWS, Docker, and CI/CD).', trigger: 'skill_details', delay: 3200 },\n  { id: 'skill_details', options: [ { value: 'ai_experience', label: 'More on his AI/ML work', trigger: 'ai_experience' }, { value: 'fullstack_details', label: 'Details on Full Stack', trigger: 'fullstack_details' }, { value: 'main_menu', label: 'Back to main menu', trigger: 'options' }, ] },\n  { id: 'ai_experience', message: \"Absolutely. He has developed over 17 AI projects. Key examples include a Driver Drowsiness Detector using OpenCV and the RAVI project at IIT Delhi, which used MS Azure for image analysis. He's proficient with TensorFlow and Keras.\", trigger: 'ask-more' },\n  { id: 'fullstack_details', message: \"He excels at building end-to-end applications. For example, he built 'NexGenGaming,' a full-stack e-commerce site with React, Node.js, and MongoDB. He's also developed mobile apps with React Native.\", trigger: 'ask-more' },\n  \n  // --- NEW: Experience & Certifications Path ---\n  { id: 'experience_intro', message: \"Laxman has a solid mix of professional experience. What would you like to know about?\", trigger: 'experience_options' },\n  { \n    id: 'experience_options', \n    options: [\n      { value: 'current_role', label: 'Current Role (CAMS)', trigger: 'current_role_info' },\n      { value: 'past_work', label: 'Past Work (RAVI)', trigger: 'past_work_info' },\n      { value: 'internships', label: 'Internships', trigger: 'internships_info' },\n      { value: 'certifications', label: 'Certifications', trigger: 'certifications_info'},\n      { value: 'main_menu', label: 'Back to main menu', trigger: 'options' },\n    ]\n  },\n  { id: 'current_role_info', message: \"He is currently a full-time Software Developer at CAMS Mutual Funds in Chennai, a role he started in June 2024.\", trigger: 'ask-more' },\n  { id: 'past_work_info', message: \"He worked for a year as a Software Engineer on the RAVI project at IIT Delhi, creating a 'Reading Assistant for the Visually Impaired.'\", trigger: 'ask-more'},\n  { id: 'internships_info', message: \"He has completed several prestigious virtual internships with companies like Walmart, Goldman Sachs, and JP Morgan Chase, focusing on advanced software engineering and front-end development.\", trigger: 'ask-more' },\n  { id: 'certifications_info', message: \"He holds key certifications including 'AWS Certificate' from Amazon, 'Complete Data Science & Machine Learning Bootcamp' from TheAppBrewery, and an LMS development certificate from Startup India.\", trigger: 'ask-more' },\n\n  // --- UPDATED: Projects Path ---\n  { id: 'project_options', message: \"He has over 34 projects! Here are a few highlights. Which one interests you?\", trigger: 'project_list' },\n  {\n    id: 'project_list',\n    options: [\n      { value: 'p1_details', label: 'NexGenGaming E-Commerce', trigger: 'typing_p1' },\n      { value: 'p2_details', label: 'IPO Monitoring System', trigger: 'typing_p2' },\n      { value: 'p3_details', label: 'MSG-to-PDF Converter', trigger: 'typing_p3' },\n      { value: 'main_menu', label: 'Back to main menu', trigger: 'options' },\n    ],\n  },\n  { id: 'typing_p1', component: <Typing />, asMessage: true, trigger: 'p1_card' },\n  { \n    id: 'p1_card', \n    component: ( <ProjectCard name=\"NexGenGaming - E-Commerce Platform\" description=\"A full-stack gaming store built with React, Node.js, and MongoDB. It features user auth, order management, and delivery tracking.\" imageUrl=\"https://i.imgur.com/f7j1f9o.png\" link=\"https://gaming-ecommerce-fronted.vercel.app/\" /> ), \n    asMessage: true, \n    trigger: 'ask-more' \n  },\n  { id: 'typing_p2', component: <Typing />, asMessage: true, trigger: 'p2_card' },\n  { \n    id: 'p2_card', \n    component: ( <ProjectCard name=\"IPO Monitoring & Notifier\" description=\"A real-time system that monitors IPO Grey Market Premiums using Python, OCR, and automated data processing to send notifications.\" imageUrl=\"https://i.imgur.com/y3A9Z8o.png\" link=\"https://ipo-monitor-gmp.streamlit.app/Dashboard\" /> ), \n    asMessage: true, \n    trigger: 'ask-more' \n  },\n  { id: 'typing_p3', component: <Typing />, asMessage: true, trigger: 'p3_card' },\n  { \n    id: 'p3_card', \n    component: ( <ProjectCard name=\"MSG-to-PDF Converter\" description=\"An automated workflow tool built with Python to convert over 20,000 financial emails from .MSG to structured PDF files for a major client.\" imageUrl=\"https://i.imgur.com/qFb2z3e.png\" link=\"https://msg-to-pdf-converter-cams.streamlit.app/\" /> ), \n    asMessage: true, \n    trigger: 'ask-more' \n  },\n  \n  // --- UPDATED: Contact & Other Paths ---\n  { id: 'contact', component: ( <div> You can reach Laxman through any of these channels: <ul> <li style={{marginBottom: '8px'}}>📧 Email: <a href=\"mailto:laxmankethavath5@gmail.com\">laxmankethavath5@gmail.com</a></li> <li style={{marginBottom: '8px'}}>🔗 LinkedIn: <a href=\"https://www.linkedin.com/in/k-laxman-44913a156/\" target=\"_blank\" rel=\"noopener noreferrer\">k-laxman-44913a156</a></li> <li>🐙 GitHub: <a href=\"https://github.com/Laxman824\" target=\"_blank\" rel=\"noopener noreferrer\">Laxman824</a></li> </ul> </div> ), asMessage: true, trigger: 'ask-more' },\n  { id: 'creator_info', message: 'I was designed and brought to Life by Laxman !', trigger: 'ask-more' },\n  \n  // --- Standard Closing/Looping Paths ---\n  { id: 'ask-more', message: 'Can I help with anything else?', trigger: 'ask-more-options', delay: 1500 },\n  { id: 'ask-more-options', options: [ { value: 'yes', label: 'Yes, please!', trigger: 'options' }, { value: 'ask_anything', label: 'Let me type my question', trigger: 'ask_anything_prompt' }, { value: 'no', label: 'No, that\\'s all for now.', trigger: 'end-conversation' }, ] },\n  { id: 'ask_anything_prompt', message: 'Sure, what would you like to know?', trigger: 'user_free_text' },\n  { id: 'user_free_text', user: true, trigger: checkUserInput },\n  { id: 'unrecognized', message: \"I'm not sure how to answer that, but I'm still learning! You can try asking about projects, skills, or experience, or choose an option from the menu.\", trigger: 'options' },\n  { id: 'end-conversation', message: 'Great! Thanks for stopping by. Feel free to reach out to Laxman directly. Have a wonderful day!', end: true },\n];\n\n// --- THE MAIN COMPONENT ---\nfunction PortfolioChatBot({ theme }) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedVoice, setSelectedVoice] = useState(null);\n  const [showWelcome, setShowWelcome] = useState(true);\n  const [isChatStarted, setIsChatStarted] = useState(false);\n\n  useEffect(() => {\n    const synth = window.speechSynthesis;\n    const loadVoices = () => {\n      const voices = synth.getVoices();\n      const preferredVoices = [\"Google US English\", \"Samantha\", \"Microsoft Zira Desktop - English (United States)\", \"Daniel\"];\n      const voice = voices.find(v => preferredVoices.includes(v.name)) || voices.find(v => v.lang.startsWith('en-US'));\n      setSelectedVoice(voice || voices[0]);\n    };\n    if (synth.getVoices().length > 0) {\n      loadVoices();\n    } else {\n      synth.onvoiceschanged = loadVoices;\n    }\n  }, []); \n\n  const speechConfig = {\n    enable: true,\n    lang: 'en-US',\n    rate: 0.9,\n    pitch: 1.1,\n    voice: selectedVoice,\n  };\n\n  const handleStartChat = () => {\n    setShowWelcome(false);\n    setIsChatStarted(true);\n  };\n\n  const handleToggleChat = () => {\n    if (isOpen && window.speechSynthesis) {\n      window.speechSynthesis.cancel();\n    }\n    setIsOpen(prevIsOpen => !prevIsOpen);\n    // Reset welcome screen when closing chat\n    if (!isOpen) {\n      setShowWelcome(true);\n      setIsChatStarted(false);\n    }\n  };\n\n  return (\n    <>\n      <style>\n        {`.typing-indicator { display: inline-block; } .typing-indicator span { height: 8px; width: 8px; float: left; margin: 0 1px; background-color: #9E9EA1; display: block; border-radius: 50%; opacity: 0.4; animation: loadingFade 1s infinite; } .typing-indicator span:nth-of-type(2) { animation-delay: 0.2s; } .typing-indicator span:nth-of-type(3) { animation-delay: 0.4s; } @keyframes loadingFade { 0% { opacity: 0.4; } 50% { opacity: 1; } 100% { opacity: 0.4; } }`}\n      </style>\n\n      <FloatingButton \n        onClick={handleToggleChat}\n        theme={theme}\n        aria-label={isOpen ? \"Close chat\" : \"Open chat with portfolio assistant\"}\n      >\n        <ButtonContent>\n          {isOpen ? (\n            <span style={{ fontSize: '24px' }}>✕</span>\n          ) : (\n            <Lottie \n              animationData={chatbotLottie}\n              loop={true}\n              style={{ width: 45, height: 45 }}\n            />\n          )}\n        </ButtonContent>\n      </FloatingButton>\n\n      {isOpen && (\n        <ChatbotContainer>\n          <ThemeProvider theme={botTheme}>\n            {selectedVoice && (\n              <>\n                {showWelcome ? (\n                  <WelcomeContainer>\n                    <Lottie \n                      animationData={chatbotLottie} \n                      loop={true} \n                      style={{ width: 200, height: 200 }} \n                    />\n                    <WelcomeText>Hi there! I'm Laxman's portfolio assistant.</WelcomeText>\n                    <StartButton onClick={handleStartChat}>Start Chat</StartButton>\n                  </WelcomeContainer>\n                ) : (\n                  <ChatBot\n                    steps={steps}\n                    headerTitle=\"Portfolio Assistant\"\n                    botAvatar={botAvatarUrl}\n                    userAvatar={userAvatarUrl}\n                    width=\"100%\"\n                    height=\"500px\"\n                    style={{\n                      background: 'transparent',\n                      boxShadow: 'none',\n                    }}\n                    speechSynthesis={speechConfig}\n                  />\n                )}\n              </>\n            )}\n          </ThemeProvider>\n        </ChatbotContainer>\n      )}\n    </>\n  );\n}\n\nexport default PortfolioChatBot;"],"names":["slideInUp","keyframes","pulse","float","bounce","WelcomeText","styled","StartButton","ButtonContent","props","theme","accentBright","isOpen","FloatingButton","ChatbotContainer","WelcomeContainer","botTheme","background","fontFamily","headerBgColor","headerFontColor","headerFontSize","botBubbleColor","botFontColor","userBubbleColor","userFontColor","botAvatarUrl","encodeURIComponent","userAvatarUrl","Typing","style","display","alignItems","marginLeft","className","ProjectCard","name","description","imageUrl","link","width","padding","src","alt","borderRadius","margin","color","fontSize","href","target","rel","textAlign","backgroundColor","textDecoration","fontWeight","steps","id","message","trigger","delay","options","value","label","component","asMessage","marginBottom","user","lowerCaseValue","toLowerCase","includes","end","setIsOpen","useState","selectedVoice","setSelectedVoice","showWelcome","setShowWelcome","isChatStarted","setIsChatStarted","useEffect","synth","window","speechSynthesis","loadVoices","voices","getVoices","preferredVoices","voice","find","v","lang","startsWith","length","onvoiceschanged","speechConfig","enable","rate","pitch","onClick","cancel","prevIsOpen","animationData","chatbotLottie","loop","height","ThemeProvider","headerTitle","botAvatar","userAvatar","boxShadow"],"sourceRoot":""}