{"version":3,"file":"static/js/177.88cf75c3.chunk.js","mappings":"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","sources":["components/chatbot/Siri.js","components/chatbot/AIAssistant.js","components/chatbot/ChatBot.js"],"sourcesContent":["\n// NON MOBILE OPTMISED BUT WORKING\n\n// import React, { useState, useEffect, useRef, useCallback } from 'react';\n// import styled, { keyframes, css } from 'styled-components';\n\n// // Your portfolio data (keeping as is)\n// const LAXMAN_PORTFOLIO_DATA = `\n// K LAXMAN - SOFTWARE DEVELOPMENT ENGINEER & AI SPECIALIST\n\n// === PROFESSIONAL SUMMARY ===\n// Software Development Engineer at Computer Age Management Services (CAMS), Chennai (June 2024 - Present)\n// IIT Delhi Alumni (2018-2024) - B.Tech + M.Tech in Computer Science & Engineering\n// Specialized in AI/ML, Financial Technology & Full Stack Development\n// Teaching Assistant with 300+ students mentored | Enterprise AI Platform Developer\n\n// === CURRENT ROLE ===\n// Software Development Engineer at Computer Age Management Services (CAMS)\n// - Developed CamsLens Enterprise GenAI platform processing 80,000+ documents monthly with 95% accuracy\n// - Implemented real-time RSS feed ingestion reducing manual monitoring by 80%\n// - Designed AI-powered query APIs with 60% response time improvement\n// - Built Ranking Chunks Algorithm for Vertex AI datastore optimization\n// - Technologies: Vertex AI Gemini-flash 2.0, Agent Builder, Google Cloud Run, BigQuery\n// - Location: Chennai, Tamil Nadu\n// - Duration: June 2024 - Present\n\n// === EDUCATION ===\n// Indian Institute of Technology Delhi (July 2018 - May 2024)\n// - Dual Degree: Bachelor's + Master's in Computer Science & Engineering\n// - Location: New Delhi, India\n// - Specialized in AI/ML, Computer Vision, and NLP\n// - Teaching Assistant (Fall 2019 - Spring 2021): Mentored 300+ undergraduate students\n// - Courses: Data Structures, Introduction to Programming, Advanced CS concepts\n\n// === TECHNICAL SKILLS ===\n// Programming Languages:\n// - Java: Spring Boot, Spring Security, Maven\n// - Python: Flask, FastAPI, OpenCV, Scikit-learn, Pandas, NumPy\n// - JavaScript: Node.js, React, ES6+\n\n// Full Stack Development:\n// - Frontend: React.js, HTML5, CSS3, TailwindCSS, JavaScript\n// - Backend: Node.js, Express.js, Python Flask/FastAPI, Java Spring Boot\n// - Databases: MySQL, PostgreSQL, MongoDB, H2, Google BigQuery\n// - Web Technologies: REST APIs, GraphQL, WebSockets\n\n// AI/ML & Data Science:\n// - Frameworks: PyTorch, TensorFlow, Vertex AI Gen AI\n// - Computer Vision: OpenCV, Layout Parser, MTL-TabNet, Dlib\n// - NLP: spaCy, Large Language Models, Few-shot Learning\n// - Specialized: Document Processing, Image Recognition, Facial Landmark Detection\n\n// Cloud & DevOps:\n// - Google Cloud: Cloud Run, GCS, Vertex AI, BigQuery\n// - AWS: Basic certification and services\n// - Azure: Basic services\n// - Containerization: Docker, Kubernetes\n// - CI/CD: GitHub Actions, Jenkins, Git\n// - Tools: Maven, npm, Postman, GCP SDK\n\n// === MAJOR PROJECTS ===\n\n// 1. CAMS LENS ENTERPRISE GENAI PLATFORM (2024 - Present)\n//    - Enterprise AI platform for CAMS processing 80,000+ documents monthly\n//    - Achieved 95% accuracy with CMEK-compliant storage\n//    - Implemented real-time RSS feed ingestion and ranking algorithms\n//    - Technologies: Vertex AI Gemini-flash 2.0, Agent Builder, Google Cloud Run, BigQuery\n\n// 2. AI-POWERED FINANCIAL EMAIL AUTOMATION SYSTEM (2025)\n//    - FastAPI microservice using Large Language Models for email classification\n//    - Zero-shot learning with 95% accuracy for PAN, ARN, date extraction\n//    - Processes 1,000+ emails daily, reducing manual processing by 80%\n//    - Technologies: Python, FastAPI, vLLM, Docker, LLMs\n\n// 3. STOCK EXCHANGE PLATFORM (2024)\n//    - Full-stack trading simulation supporting 100+ concurrent users\n//    - JWT authentication, role-based access control (Admin/User)\n//    - Sub-second response times for critical operations\n//    - Technologies: Java Spring Boot, H2 DB, Spring Security\n\n// 4. BORDERLESS TABLE RECOGNITION & ACCESSIBILITY (2023)\n//    - PDF table detection system with 30% accuracy improvement over CascadeTabNet\n//    - SVM classifier achieving 90% accuracy for table cell classification\n//    - Docker containerized solution for RAVI framework\n//    - Technologies: Python, Layout Parser, MTL-TabNet, OpenCV, SVM\n\n// 5. RAVI - READING ASSISTANT FOR VISUALLY IMPAIRED (2022)\n//    - STEM document conversion toolchain (PDFs, EPUBs to accessible formats)\n//    - Flask web application for crowdsourced ALT TEXT generation\n//    - Improved accessibility for 500+ STEM documents\n//    - Technologies: Python, Flask, HTML/CSS, JavaScript\n\n// 6. DRIVER DROWSINESS DETECTION SYSTEM (2021)\n//    - Real-time computer vision system with 90%+ detection accuracy\n//    - Facial landmark detection and eye aspect ratio calculation\n//    - 30 FPS performance optimized for embedded systems\n//    - Technologies: Python, OpenCV, Dlib\n\n// 7. ENHANCED LEARNING MANAGEMENT SYSTEM (2022)\n//    - Full-stack LMS for 1,000+ users during Eamvey Technologies internship\n//    - Secure payment gateway handling 500+ monthly transactions\n//    - 40% performance improvement through optimization\n//    - Technologies: MERN Stack (MongoDB, Express.js, React, Node.js)\n\n// 8. NEXGEN GAMING E-COMMERCE PLATFORM (2024)\n//    - Full-stack platform selling gaming consoles and accessories\n//    - Features order management, delivery tracking, and smooth UI/UX\n//    - Technologies: React, Node.js, MongoDB Atlas, Express, TailwindCSS, Firebase, Vercel\n\n// 9. IPO MONITORING & NOTIFIER (2023)\n//    - Real-time IPO Grey Market Premium monitoring with instant notifications\n//    - Automates tracking and reporting for higher gains\n//    - Technologies: Python, OpenCV, OCR, PDF Processing, Excel Automation\n\n// 10. RSS FEED DOCUMENT DOWNLOADER (2023)\n//     - Automated online download of documents from RSS feeds\n//     - Converts feeds into structured PDFs with Excel outputs\n//     - Technologies: Python, OpenCV, OCR, PDF Processing\n\n// 11. MSG-TO-PDF CONVERTER FOR FINANCIAL EMAILS (2023)\n//     - Converts 20,000+ .MSG financial emails into structured PDFs\n//     - Streamlined workflow reduces manual effort\n//     - Technologies: Python, WeasyPrint, Streamlit\n\n// 12. PDF FOOTNOTES PROCESSOR (2023)\n//     - Maps footnotes and references from PDFs into Excel sheets\n//     - Optimized for large 1,000+ page financial documents\n//     - Technologies: Python, OpenCV, OCR, PDF Processing\n\n// 13. FIELD EXTRACTION OCR FROM IMAGE (2023)\n//     - Extracts fields like PAN and Folio numbers from images automatically\n//     - Technologies: Python, OpenCV, DocTR, Streamlit\n\n// 14. LIVE SNAPSHOT & RESTORE FOR VMs (2022)\n//     - KVM-based snapshot and restore service for running VMs\n//     - Technologies: Rust, HTML/CSS, VMware\n\n// 15. WEBPAGE USING JS (2022)\n//     - Fully customizable portfolio template\n//     - Technologies: ReactJS, CSS\n\n// 16. AIRLINE DBMS PROTOTYPE (2022)\n//     - Airline booking system simulation with Flask, PostgreSQL\n//     - Frontend using HTML/CSS\n//     - Technologies: Flask, PostgreSQL, HTML/CSS, Kaggle datasets\n\n// 17. LARGE FILE DOWNLOAD (2021)\n//     - Socket programming project implementing BitTorrent-style transfers\n//     - Efficient TCP/IP data handling with Wireshark monitoring\n//     - Technologies: Python, Socket Programming, TCP/IP, Wireshark\n\n// 18. SIMPLE WEBPAGE WITH PAYMENT & DASHBOARD (2022)\n//     - Integrated payment gateway and admin dashboard\n//     - Technologies: HTML, CSS, PayPal, GitHub Deployment\n\n// 19. BIG NUMBER ARITHMETIC OPERATION (2021)\n//     - Arithmetic handling for extremely large numbers\n//     - Technologies: C, Node.js\n\n// 20. SIMULATION OF LIFT CONTROLLER SYSTEM (2021)\n//     - Designed logic for three-floor lift operation\n//     - Technologies: VHDL, Vivado, API, Integrated Circuit\n\n// 21. MULTI-AGENT SEARCH MODELING IN PACMAN (2021)\n//     - Decision-making modeling for PACMAN game\n//     - Technologies: Python, Search Algorithms, ReactJS\n\n// 22. VIRTUAL INTERNSHIP - GOLDMANSACHS (2022)\n//     - Finance-focused virtual internship\n//     - Technologies: Java, GraphQL, React, Apollo Client\n\n// 23. VIRTUAL INTERNSHIP - WALMART (20x22)\n//     - Advanced software engineering virtual experience\n//     - Technologies: Flutter, Dart, React, Node.js, PostgreSQL\n\n// 24. VIRTUAL INTERNSHIP - JPMORGAN CHASE (2022)\n//     - Projects including Metamask integration and Twitter API usage\n//     - Technologies: React, Node.js, MongoDB\n\n// 25. VIRTUAL INTERNSHIP - HP (2022)\n//     - Virtual internship with Next.js and deployment on Vercel\n//     - Technologies: Next.js, Node.js, Supabase, Razorpay, Vercel\n\n\n// === WORK EXPERIENCE ===\n// Software Development Engineer | Computer Age Management Services (CAMS)\n// June 2024 - Present | Chennai, India\n// - Enterprise AI platform development and financial document processing\n// - Real-time data ingestion and AI-powered query optimization\n// - 80% reduction in manual monitoring through automation\n\n// Web Development Intern | Eamvey Technologies\n// May 2022 - August 2022 | Remote\n// - Enhanced LMS frontend/backend for 1,000+ users\n// - Payment gateway integration and performance optimization\n// - MERN stack development with 40% performance improvement\n\n// === LEADERSHIP & ACTIVITIES ===\n// - Teaching Assistant at IIT Delhi (Fall 2019 - Spring 2021)\n// - Mentored 300+ undergraduate students in Computer Science fundamentals\n// - Conducted lab sessions, graded assignments, and held office hours\n// - Specialized in Data Structures and Programming concepts\n\n// === CONTACT ===\n// Email: [Laxmankethavath5@gmail.com](mailto:Laxmankethavath5@gmail.com)\n// Phone: +91-9000063740\n// LinkedIn: [Professional Profile](https://linkedin.com/in/k-laxman)\n// GitHub: [Project Repository](https://github.com/Laxman824)\n// Portfolio: [Personal Website](https://k-laxman-portfolio.com)\n// Location: Chennai, Tamil Nadu, India\n// `;\n\n// // ============= PREMIUM ANIMATIONS =============\n// const ambientPulse = keyframes`\n//   0%, 100% { \n//     transform: scale(1); \n//     opacity: 0.9;\n//   }\n//   50% {\n//     transform: scale(1.03);\n//     opacity: 1;\n//   }\n// `;\n\n// const attractiveWaves = keyframes`\n//   0% {\n//     transform: scale(1);\n//     opacity: 0.7;\n//   }\n//   50% {\n//     transform: scale(1.4);\n//     opacity: 0.3;\n//   }\n//   100% {\n//     transform: scale(1.8);\n//     opacity: 0;\n//   }\n// `;\n\n// const magneticPulse = keyframes`\n//   0%, 100% { \n//     box-shadow: \n//       0 0 20px rgba(79, 70, 229, 0.4),\n//       0 0 40px rgba(79, 70, 229, 0.2),\n//       0 0 60px rgba(79, 70, 229, 0.1);\n//   }\n//   50% {\n//     box-shadow: \n//       0 0 30px rgba(79, 70, 229, 0.6),\n//       0 0 60px rgba(79, 70, 229, 0.4),\n//       0 0 90px rgba(79, 70, 229, 0.2);\n//   }\n// `;\n\n// const listeningGlow = keyframes`\n//   0%, 100% { \n//     box-shadow: \n//       0 0 25px rgba(34, 197, 94, 0.5),\n//       0 0 50px rgba(34, 197, 94, 0.3);\n//   }\n//   50% {\n//     box-shadow: \n//       0 0 35px rgba(34, 197, 94, 0.7),\n//       0 0 70px rgba(34, 197, 94, 0.5);\n//   }\n// `;\n\n// const speakingPulse = keyframes`\n//   0%, 100% { \n//     box-shadow: \n//       0 0 25px rgba(239, 68, 68, 0.5),\n//       0 0 50px rgba(239, 68, 68, 0.3);\n//   }\n//   25% {\n//     box-shadow: \n//       0 0 35px rgba(239, 68, 68, 0.7),\n//       0 0 70px rgba(239, 68, 68, 0.5);\n//   }\n//   50% {\n//     box-shadow: \n//       0 0 45px rgba(239, 68, 68, 0.9),\n//       0 0 90px rgba(239, 68, 68, 0.7);\n//   }\n//   75% {\n//     box-shadow: \n//       0 0 35px rgba(239, 68, 68, 0.7),\n//       0 0 70px rgba(239, 68, 68, 0.5);\n//   }\n// `;\n\n// const thinkingSpinner = keyframes`\n//   0% { transform: rotate(0deg); }\n//   100% { transform: rotate(360deg); }\n// `;\n\n// const spin = keyframes`\n//   from { transform: rotate(0deg); }\n//   to { transform: rotate(360deg); }\n// `;\n\n// const slideIn = keyframes`\n//   from {\n//     transform: translateY(100%);\n//     opacity: 0;\n//   }\n//   to {\n//     transform: translateY(0);\n//     opacity: 1;\n//   }\n// `;\n\n// const slideOut = keyframes`\n//   from {\n//     transform: translateY(0);\n//     opacity: 1;\n//   }\n//   to {\n//     transform: translateY(100%);\n//     opacity: 0;\n//   }\n// `;\n\n// const shimmer = keyframes`\n//   0% {\n//     background-position: -200% center;\n//   }\n//   100% {\n//     background-position: 200% center;\n//   }\n// `;\n\n// const fadeIn = keyframes`\n//   from { opacity: 0; transform: translateY(-10px); }\n//   to { opacity: 1; transform: translateY(0); }\n// `;\n\n// const fadeOut = keyframes`\n//   from { opacity: 1; transform: translateY(0); }\n//   to { opacity: 0; transform: translateY(-10px); }\n// `;\n\n// const VoiceContainer = styled.div`\n//   position: fixed;\n//   bottom: ${props => props.isMobile ? '90px' : '100px'};\n//   left: 20px;\n//   width: 280px;\n//   background: linear-gradient(145deg, \n//     rgba(11, 11, 22, 0.95) 0%, \n//     rgba(20, 20, 32, 0.98) 50%,\n//     rgba(10, 10, 25, 0.95) 100%);\n//   border-radius: 24px;\n//   padding: 24px;\n//   display: flex;\n//   flex-direction: column;\n//   align-items: center;\n//   justify-content: center;\n//   overflow: hidden;\n//   box-shadow: \n//     0 20px 40px rgba(0, 0, 0, 0.7),\n//     0 8px 16px rgba(0, 0, 0, 0.5),\n//     inset 0 1px 0 rgba(255, 255, 255, 0.1),\n//     inset 0 -1px 0 rgba(0, 0, 0, 0.2);\n//   z-index: 1000;\n//   animation: ${props => props.isClosing ? slideOut : slideIn} 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);\n//   backdrop-filter: blur(20px);\n//   border: 1px solid rgba(255, 255, 255, 0.1);\n  \n//   &::before {\n//     content: '';\n//     position: absolute;\n//     top: 0;\n//     left: 0;\n//     right: 0;\n//     bottom: 0;\n//     background: radial-gradient(circle at 50% 30%, rgba(79, 70, 229, 0.1) 0%, transparent 50%);\n//     pointer-events: none;\n//   }\n\n//   &::after {\n//     content: '';\n//     position: absolute;\n//     top: 50%;\n//     left: 50%;\n//     width: 180px;\n//     height: 180px;\n//     background: ${props => {\n//       if (props.state === 'listening') return 'radial-gradient(circle, rgba(34, 197, 94, 0.15) 0%, transparent 70%)';\n//       if (props.state === 'speaking') return 'radial-gradient(circle, rgba(239, 68, 68, 0.15) 0%, transparent 70%)';\n//       if (props.state === 'thinking') return 'radial-gradient(circle, rgba(245, 158, 11, 0.15) 0%, transparent 70%)';\n//       return 'radial-gradient(circle, rgba(79, 70, 229, 0.08) 0%, transparent 70%)';\n//     }};\n//     border-radius: 50%;\n//     transform: translate(-50%, -50%);\n//     pointer-events: none;\n//     transition: all 0.8s ease;\n//   }\n\n//   @media (max-width: 480px) {\n//     width: 260px;\n//     left: 10px;\n//     bottom: 90px; /* Adjusted for mobile to appear above the button */\n//   }\n// `;\n\n// const BrowserNotice = styled.div`\n//   position: fixed;\n//   top: 20px;\n//   right: 20px;\n//   background: ${props => {\n//     if (props.type === 'error') return 'rgba(239, 68, 68, 0.95)';\n//     if (props.type === 'warning') return 'rgba(245, 158, 11, 0.95)';\n//     return 'rgba(59, 130, 246, 0.95)';\n//   }};\n//   color: white;\n//   padding: 16px 20px;\n//   border-radius: 12px;\n//   font-size: 13px;\n//   max-width: 320px;\n//   z-index: 1001;\n//   backdrop-filter: blur(15px);\n//   border: 1px solid rgba(255, 255, 255, 0.2);\n//   box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);\n//   animation: ${props => props.show ? fadeIn : fadeOut} 0.3s ease;\n//   line-height: 1.4;\n  \n//   .notice-title {\n//     font-weight: 700;\n//     margin-bottom: 8px;\n//     display: flex;\n//     align-items: center;\n//     gap: 8px;\n//   }\n  \n//   .notice-content {\n//     font-weight: 400;\n//     opacity: 0.9;\n//   }\n\n//   @media (max-width: 480px) {\n//     right: 10px;\n//     top: 10px;\n//     max-width: calc(100vw - 20px);\n//     font-size: 12px;\n//   }\n// `;\n\n// const CloseButton = styled.button`\n//   position: absolute;\n//   top: 12px;\n//   right: 12px;\n//   width: 28px;\n//   height: 28px;\n//   border-radius: 50%;\n//   border: none;\n//   background: rgba(255, 255, 255, 0.1);\n//   color: rgba(255, 255, 255, 0.6);\n//   font-size: 16px;\n//   cursor: pointer;\n//   transition: all 0.3s ease;\n//   backdrop-filter: blur(10px);\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n//   font-weight: bold;\n\n//   &:hover {\n//     background: rgba(239, 68, 68, 0.2);\n//     color: #EF4444;\n//     transform: scale(1.1);\n//   }\n\n//   &:active {\n//     transform: scale(0.95);\n//   }\n// `;\n\n// const VoiceAvatar = styled.div`\n//   width: 80px;\n//   height: 80px;\n//   border-radius: 50%;\n//   background: ${props => {\n//     if (props.state === 'listening') return 'linear-gradient(135deg, #22C55E, #16A34A, #1580 )';\n//     if (props.state === 'speaking') return 'linear-gradient(135deg, #EF4444, #DC2626, #B91C1C)';\n//     if (props.state === 'thinking') return 'linear-gradient(135deg, #F59E0B, #D97706, #B45309)';\n//     if (props.disabled) return 'linear-gradient(135deg, #6B7280, #4B5563, #374151)';\n//     return 'linear-gradient(135deg, #4F46E5, #3730A3, #312E81)';\n//   }};\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n//   font-size: 32px;\n//   cursor: ${props => props.disabled ? 'not-allowed' : 'pointer'};\n//   transition: all 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);\n//   position: relative;\n//   margin-bottom: 16px;\n//   opacity: ${props => props.disabled ? 0.5 : 1};\n  \n//   animation: ${props => {\n//     if (props.disabled) return 'none';\n//     if (props.state === 'listening') return css`${listeningGlow} 2s ease-in-out infinite`;\n//     if (props.state === 'speaking') return css`${speakingPulse} 1.5s ease-in-out infinite`;\n//     if (props.state === 'thinking') return css`${thinkingSpinner} 2s linear infinite, ${ambientPulse} 3s ease-in-out infinite`;\n//     return css`${magneticPulse} 4s ease-in-out infinite`;\n//   }};\n\n//   &::before {\n//     content: '';\n//     position: absolute;\n//     top: -5px;\n//     left: -5px;\n//     right: -5px;\n//     bottom: -5px;\n//     border-radius: 50%;\n//     background: ${props => {\n//       if (props.disabled) return 'none';\n//       if (props.state === 'listening') return 'conic-gradient(from 0deg, rgba(34, 197, 94, 0.6), transparent, rgba(34, 197, 94, 0.6))';\n//       if (props.state === 'speaking') return 'conic-gradient(from 0deg, rgba(239, 68, 68, 0.6), transparent, rgba(239, 68, 68, 0.6))';\n//       if (props.state === 'thinking') return 'conic-gradient(from 0deg, rgba(245, 158, 11, 0.6), transparent, rgba(245, 158, 11, 0.6))';\n//       return 'conic-gradient(from 0deg, rgba(79, 70, 229, 0.4), transparent, rgba(79, 70, 229, 0.4))';\n//     }};\n//     animation: ${props => props.state !== 'idle' && !props.disabled ? css`${spin} 3s linear infinite` : 'none'};\n//     z-index: -1;\n//   }\n\n//   /* Attractive wave rings for idle state */\n//   ${props => props.state === 'idle' && !props.disabled && css`\n//     &::after {\n//       content: '';\n//       position: absolute;\n//       top: 50%;\n//       left: 50%;\n//       width: 100%;\n//       height: 100%;\n//       border: 2px solid rgba(79, 70, 229, 0.3);\n//       border-radius: 50%;\n//       transform: translate(-50%, -50%);\n//       animation: ${attractiveWaves} 2s ease-out infinite;\n//     }\n//   `}\n\n//   &:hover {\n//     transform: ${props => props.disabled ? 'none' : 'scale(1.08)'};\n//     filter: ${props => props.disabled ? 'none' : 'brightness(1.1)'};\n//   }\n\n//   &:active {\n//     transform: ${props => props.disabled ? 'none' : 'scale(0.95)'};\n//   }\n// `;\n\n// /* Additional wave rings for extra attraction */\n// const WaveRing = styled.div`\n//   position: absolute;\n//   top: 50%;\n//   left: 50%;\n//   border: 1px solid rgba(79, 70, 229, 0.2);\n//   border-radius: 50%;\n//   transform: translate(-50%, -50%);\n//   pointer-events: none;\n//   animation: ${attractiveWaves} 2s ease-out infinite;\n//   animation-delay: ${props => props.delay}s;\n// `;\n\n// const VoiceStatus = styled.div`\n//   text-align: center;\n//   margin-bottom: 16px;\n  \n//   .status-title {\n//     font-size: 15px;\n//     font-weight: 700;\n//     color: white;\n//     margin-bottom: 6px;\n//     text-shadow: 0 2px 8px rgba(0, 0, 0, 0.5);\n//     letter-spacing: 0.8px;\n//     background: linear-gradient(135deg, #fff, #e2e8f0);\n//     -webkit-background-clip: text;\n//     -webkit-text-fill-color: transparent;\n//     background-clip: text;\n//   }\n  \n//   .status-subtitle {\n//     font-size: 11px;\n//     color: rgba(255, 255, 255, 0.7);\n//     font-weight: 400;\n//     line-height: 1.3;\n//     letter-spacing: 0.2px;\n//   }\n// `;\n\n// const ConnectionIndicator = styled.div`\n//   position: absolute;\n//   top: 12px;\n//   left: 12px;\n//   width: 12px;\n//   height: 12px;\n//   border-radius: 50%;\n//   background: ${props => {\n//     if (props.status === 'connected') return '#22C55E';\n//     if (props.status === 'connecting') return '#F59E0B';\n//     return '#EF4444';\n//   }};\n//   box-shadow: \n//     0 0 12px ${props => {\n//       if (props.status === 'connected') return 'rgba(34, 197, 94, 0.6)';\n//       if (props.status === 'connecting') return 'rgba(245, 158, 11, 0.6)';\n//       return 'rgba(239, 68, 68, 0.6)';\n//     }},\n//     inset 0 1px 2px rgba(255, 255, 255, 0.2);\n//   animation: ${ambientPulse} 2s ease-in-out infinite;\n// `;\n\n// const VoiceWaves = styled.div`\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n//   gap: 3px;\n//   margin: 12px 0;\n//   height: 28px;\n//   opacity: ${props => props.state === 'listening' || props.state === 'speaking' ? 1 : 0};\n//   transition: opacity 0.4s ease;\n  \n//   .wave {\n//     width: 3px;\n//     border-radius: 2px;\n//     background: ${props => {\n//       if (props.state === 'listening') return 'linear-gradient(to top, #22C55E, #10B981)';\n//       if (props.state === 'speaking') return 'linear-gradient(to top, #EF4444, #F87171)';\n//       return 'linear-gradient(to top, #4F46E5, #6366F1)';\n//     }};\n//     box-shadow: 0 0 8px ${props => {\n//       if (props.state === 'listening') return 'rgba(34, 197, 94, 0.5)';\n//       if (props.state === 'speaking') return 'rgba(239, 68, 68, 0.5)';\n//       return 'rgba(79, 70, 229, 0.5)';\n//     }};\n//     animation: ${keyframes`\n//       0%, 100% { height: 4px; }\n//       50% { height: 24px; }\n//     `} 1.2s ease-in-out infinite;\n    \n//     &:nth-child(1) { animation-delay: 0.0s; }\n//     &:nth-child(2) { animation-delay: 0.1s; }\n//     &:nth-child(3) { animation-delay: 0.2s; }\n//     &:nth-child(4) { animation-delay: 0.3s; }\n//     &:nth-child(5) { animation-delay: 0.2s; }\n//     &:nth-child(6) { animation-delay: 0.1s; }\n//     &:nth-child(7) { animation-delay: 0.1s; }\n//   }\n// `;\n\n// const VoiceControls = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   gap: 12px;\n//   margin-top: 12px;\n//   width: 100%;\n// `;\n\n// const ButtonRow = styled.div`\n//   display: flex;\n//   gap: 12px;\n//   justify-content: center;\n// `;\n\n// const VoiceButton = styled.button`\n//   width: 45px;\n//   height: 45px;\n//   border-radius: 50%;\n//   border: none;\n//   background: ${props => {\n//     if (props.disabled) return 'linear-gradient(135deg, rgba(107, 114, 128, 0.2), rgba(107, 114, 128, 0.1))';\n//     if (props.active) return 'linear-gradient(135deg, rgba(34, 197, 94, 0.3), rgba(34, 197, 94, 0.1))';\n//     return 'linear-gradient(135deg, rgba(255, 255, 255, 0.15), rgba(255, 255, 255, 0.05))';\n//   }};\n//   color: ${props => props.disabled ? 'rgba(255, 255, 255, 0.3)' : 'white'};\n//   font-size: 16px;\n//   cursor: ${props => props.disabled ? 'not-allowed' : 'pointer'};\n//   transition: all 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);\n//   backdrop-filter: blur(15px);\n//   border: 1px solid ${props => {\n//     if (props.disabled) return 'rgba(107, 114, 128, 0.2)';\n//     if (props.active) return 'rgba(34, 197, 94, 0.4)';\n//     return 'rgba(255, 255, 255, 0.2)';\n//   }};\n//   position: relative;\n//   overflow: hidden;\n//   box-shadow: ${props => {\n//     if (props.disabled) return '0 2px 8px rgba(0, 0, 0, 0.1)';\n//     if (props.active) return '0 0 20px rgba(34, 197, 94, 0.4)';\n//     return '0 4px 15px rgba(0, 0, 0, 0.2)';\n//   }};\n\n//   &::before {\n//     content: '';\n//     position: absolute;\n//     top: 50%;\n//     left: 50%;\n//     width: 0;\n//     height: 0;\n//     background: rgba(255, 255, 255, 0.2);\n//     border-radius: 50%;\n//     transition: all 0.4s ease;\n//     transform: translate(-50%, -50%);\n//   }\n\n//   &:hover:not(:disabled) {\n//     transform: translateY(-3px) scale(1.05);\n//     box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);\n    \n//     &::before {\n//       width: 100%;\n//       height: 100%;\n//     }\n//   }\n\n//   &:active:not(:disabled) {\n//     transform: translateY(-1px) scale(0.98);\n//   }\n// `;\n\n// const ButtonLabel = styled.div`\n//   font-size: 9px;\n//   color: ${props => props.disabled ? 'rgba(255, 255, 255, 0.3)' : 'rgba(255, 255, 255, 0.6)'};\n//   text-align: center;\n//   margin-top: 6px;\n//   font-weight: 500;\n//   letter-spacing: 0.2px;\n//   line-height: 1.2;\n// `;\n\n// const InterimText = styled.div`\n//   background: linear-gradient(135deg, rgba(34, 197, 94, 0.15), rgba(34, 197, 94, 0.05));\n//   color: #22C55E;\n//   padding: 10px 14px;\n//   border-radius: 12px;\n//   font-size: 12px;\n//   text-align: center;\n//   margin: 10px 0;\n//   border: 1px solid rgba(34, 197, 94, 0.3);\n//   backdrop-filter: blur(15px);\n//   max-width: 220px;\n//   opacity: ${props => props.show ? 1 : 0};\n//   transform: translateY(${props => props.show ? 0 : 15}px);\n//   transition: all 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);\n//   font-style: italic;\n//   word-break: break-word;\n//   box-shadow: 0 4px 15px rgba(34, 197, 94, 0.2);\n//   font-weight: 500;\n//   min-height: 20px;\n// `;\n\n// const HelpHint = styled.div`\n//   position: absolute;\n//   bottom: -45px;\n//   left: 50%;\n//   transform: translateX(-50%);\n//   color: rgba(255, 255, 255, 0.5);\n//   font-size: 10px;\n//   text-align: center;\n//   line-height: 1.3;\n//   max-width: 240px;\n//   opacity: ${props => props.show ? 1 : 0};\n//   transition: opacity 0.4s ease;\n//   font-weight: 500;\n//   background: linear-gradient(135deg, rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0.6));\n//   padding: 8px 14px;\n//   border-radius: 10px;\n//   backdrop-filter: blur(10px);\n//   border: 1px solid rgba(255, 255, 255, 0.1);\n\n//   @media (max-width: 480px) {\n//     bottom: -35px;\n//     font-size: 9px;\n//     max-width: 200px;\n//   }\n// `;\n\n// // ============= PREMIUM VOICE ASSISTANT =============\n// const VoiceAssistant = ({ onClose }) => {\n//   const [assistantState, setAssistantState] = useState('idle');\n//   const [connectionStatus, setConnectionStatus] = useState('disconnected');\n//   const [isAutoMode, setIsAutoMode] = useState(false);\n//   const [interimTranscript, setInterimTranscript] = useState('');\n//   const [showHelp, setShowHelp] = useState(true);\n//   const [isVisible, setIsVisible] = useState(true);\n//   const [isClosing, setIsClosing] = useState(false);\n//   const [notice, setNotice] = useState(null);\n//   const [hasPermission, setHasPermission] = useState(false);\n//   const [retryCount, setRetryCount] = useState(0);\n  \n//   const recognitionRef = useRef(null);\n//   const synthRef = useRef(null);\n//   const silenceTimeoutRef = useRef(null);\n//   const isProcessingRef = useRef(false);\n//   const finalTranscriptRef = useRef('');\n//   const audioContextRef = useRef(null);\n//   const autoModeRef = useRef(false);\n//   const noticeTimeoutRef = useRef(null);\n\n//   useEffect(() => {\n//     autoModeRef.current = isAutoMode;\n//   }, [isAutoMode]);\n\n//   useEffect(() => {\n//     const timer = setTimeout(() => setShowHelp(false), 8000);\n//     return () => clearTimeout(timer);\n//   }, []);\n\n//   const showNotice = useCallback((type, title, content, duration = 5000) => {\n//     if (noticeTimeoutRef.current) {\n//       clearTimeout(noticeTimeoutRef.current);\n//     }\n    \n//     setNotice({ type, title, content, show: true });\n    \n//     noticeTimeoutRef.current = setTimeout(() => {\n//       setNotice(prev => prev ? { ...prev, show: false } : null);\n//       setTimeout(() => setNotice(null), 300);\n//     }, duration);\n//   }, []);\n\n//   const getBrowserInfo = useCallback(() => {\n//     const userAgent = navigator.userAgent;\n//     const isChrome = /Chrome/.test(userAgent) && !/Edge/.test(userAgent);\n//     const isEdge = /Edge/.test(userAgent);\n//     const isFirefox = /Firefox/.test(userAgent);\n//     const isSafari = /Safari/.test(userAgent) && !/Chrome/.test(userAgent);\n//     const isMobile = /Mobile|Android|iPhone|iPad/.test(userAgent);\n    \n//     return { isChrome, isEdge, isFirefox, isSafari, isMobile };\n//   }, []);\n\n//   const checkBrowserCompatibility = useCallback(() => {\n//     const { isChrome, isEdge, isFirefox, isSafari, isMobile } = getBrowserInfo();\n    \n//     if (!window.isSecureContext) {\n//       showNotice('error', '🔒 HTTPS Required', 'Voice features require a secure connection (HTTPS)');\n//       return false;\n//     }\n\n//     if (!('webkitSpeechRecognition' in window || 'SpeechRecognition' in window)) {\n//       showNotice('error', '🎙️ Not Supported', 'Speech recognition is not supported in this browser');\n//       return false;\n//     }\n\n//     if (!('speechSynthesis' in window)) {\n//       showNotice('error', '🔊 Not Supported', 'Speech synthesis is not supported in this browser');\n//       return false;\n//     }\n\n//     if (isMobile) {\n//       showNotice('warning', '📱 Mobile Notice', 'Voice features may have limited functionality on mobile devices');\n//     } else if (isFirefox) {\n//       showNotice('warning', '🔥 Firefox Notice', 'Voice features work best in Chrome or Edge browsers');\n//     } else if (isSafari) {\n//       showNotice('warning', '🧭 Safari Notice', 'Voice features may have limited functionality in Safari');\n//     }\n\n//     return true;\n//   }, [getBrowserInfo, showNotice]);\n\n//   const requestMicrophonePermission = useCallback(async () => {\n//     try {\n//       setConnectionStatus('connecting');\n//       const stream = await navigator.mediaDevices.getUserMedia({ \n//         audio: {\n//           echoCancellation: true,\n//           noiseSuppression: true,\n//           autoGainControl: true\n//         }\n//       });\n      \n//       // Test the stream briefly\n//       const tracks = stream.getTracks();\n//       tracks.forEach(track => track.stop());\n      \n//       setHasPermission(true);\n//       setConnectionStatus('connected');\n//       return true;\n//     } catch (error) {\n//       console.error('Microphone permission error:', error);\n//       setHasPermission(false);\n//       setConnectionStatus('disconnected');\n      \n//       if (error.name === 'NotAllowedError') {\n//         showNotice('error', '🎤 Permission Denied', 'Please allow microphone access and refresh the page');\n//       } else if (error.name === 'NotFoundError') {\n//         showNotice('error', '🎤 No Microphone', 'No microphone found on this device');\n//       } else {\n//         showNotice('error', '🎤 Microphone Error', 'Unable to access microphone. Please check your browser settings');\n//       }\n      \n//       return false;\n//     }\n//   }, [showNotice]);\n\n//   useEffect(() => {\n//     const checkServices = async () => {\n//       if (!checkBrowserCompatibility()) {\n//         setConnectionStatus('disconnected');\n//         return;\n//       }\n\n//       const puterReady = window.puter && window.puter.ai;\n      \n//       if (!puterReady) {\n//         setConnectionStatus('disconnected');\n//         if (retryCount < 3) {\n//           setTimeout(() => setRetryCount(prev => prev + 1), 2000);\n//         }\n//         return;\n//       }\n\n//       if (hasPermission) {\n//         setConnectionStatus('connected');\n//       } else {\n//         setConnectionStatus('disconnected');\n//       }\n//     };\n    \n//     checkServices();\n//   }, [checkBrowserCompatibility, hasPermission, retryCount]);\n\n//   const playAudioCue = useCallback((type) => {\n//     if (!window.AudioContext && !window.webkitAudioContext) return; \n    \n//     try {\n//       const audioContext = audioContextRef.current || new (window.AudioContext || window.webkitAudioContext)();\n//       if (audioContext.state === 'suspended') {\n//         audioContext.resume();\n//       }\n//       audioContextRef.current = audioContext;\n      \n//       const oscillator = audioContext.createOscillator();\n//       const gainNode = audioContext.createGain();\n      \n//       oscillator.connect(gainNode);\n//       gainNode.connect(audioContext.destination);\n      \n//       switch (type) {\n//         case 'start':\n//           oscillator.frequency.setValueAtTime(800, audioContext.currentTime);\n//           oscillator.frequency.exponentialRampToValueAtTime(1200, audioContext.currentTime + 0.1);\n//           break;\n//         case 'end':\n//           oscillator.frequency.setValueAtTime(1200, audioContext.currentTime);\n//           oscillator.frequency.exponentialRampToValueAtTime(700, audioContext.currentTime + 0.15);\n//           break;\n//         case 'error':\n//           oscillator.frequency.setValueAtTime(400, audioContext.currentTime);\n//           oscillator.frequency.exponentialRampToValueAtTime(200, audioContext.currentTime + 0.3);\n//           break;\n//         default:\n//           return;\n//       }\n      \n//       gainNode.gain.setValueAtTime(0.05, audioContext.currentTime);\n//       gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + 0.2);\n      \n//       oscillator.start(audioContext.currentTime);\n//       oscillator.stop(audioContext.currentTime + 0.2);\n//     } catch (error) {\n//       console.warn('Audio cue failed:', error);\n//     }\n//   }, []);\n\n//   const extractContent = useCallback((obj, depth = 0) => {\n//     if (depth > 5) return null;\n//     if (typeof obj === 'string' && obj.trim()) {\n//       return obj.trim();\n//     }\n//     if (!obj) return null;\n    \n//     if (obj.result && obj.result.message && obj.result.message.content) {\n//       return obj.result.message.content.trim();\n//     }\n    \n//     const patterns = [\n//       'content',\n//       'message.content', \n//       'result.message.content',\n//       'choices[0].message.content',\n//       'text',\n//       'response',\n//       'answer',\n//       'reply'\n//     ];\n    \n//     for (const pattern of patterns) {\n//       try {\n//         const value = pattern.split('.').reduce((acc, key) => {\n//           if (key.includes('[')) {\n//             const [arrayKey, index] = key.split('[');\n//             const idx = parseInt(index.replace(']', ''));\n//             return acc?.[arrayKey]?.[idx];\n//           }\n//           return acc?.[key];\n//         }, obj);\n        \n//         if (value && typeof value === 'string' && value.trim()) {\n//           return value.trim();\n//         }\n//       } catch (e) {\n//         // Continue to next pattern\n//       }\n//     }\n    \n//     for (const key in obj) {\n//       if (obj.hasOwnProperty(key)) {\n//         const extracted = extractContent(obj[key], depth + 1);\n//         if (extracted) return extracted;\n//       }\n//     }\n    \n//     return null;\n//   }, []);\n\n//   const getVoiceFallback = useCallback((input) => {\n//     const voiceResponses = {\n//       greeting: \"Hey there! I'm Laxman's AI assistant. What would you like to know about him?\",\n//       identity: \"Laxman is a talented software engineer at CAMS in Chennai. He graduated from IIT Delhi with expertise in AI and full-stack development.\",\n//       projects: \"He's built some incredible AI projects! His main one is CamsLens, which processes over 80,000 documents monthly with 95% accuracy.\",\n//       skills: \"He's highly skilled in Java, Python, JavaScript, and cutting-edge AI technologies like Vertex AI and machine learning.\",\n//       contact: \"You can reach him at laxman kethavath 5 at gmail dot com, or connect with him on LinkedIn.\",\n//       location: \"He's currently working in Chennai, India, building amazing tech solutions.\",\n//       education: \"He completed his dual degree in Computer Science from IIT Delhi, from 2018 to 2024. Quite impressive!\",\n//       experience: \"He's been a software engineer at CAMS since June 2024, and was previously a teaching assistant mentoring over 300 students.\",\n//       help: \"Ask me anything about Laxman's work experience, technical projects, skills, education, or how to contact him!\",\n//       default: \"That's a great question! Could you ask it differently? I'm here to help you learn all about Laxman's impressive background!\"\n//     };\n\n//     const input_lower = input.toLowerCase();\n    \n//     if (input_lower.includes('hello') || input_lower.includes('hi') || input_lower.includes('hey') || input_lower.includes('greet')) {\n//       return voiceResponses.greeting;\n//     }\n//     if (input_lower.includes('who') || input_lower.includes('about') || input_lower.includes('tell me') || input_lower.includes('describe')) {\n//       return voiceResponses.identity;\n//     }\n//     if (input_lower.includes('project') || input_lower.includes('work') || input_lower.includes('built') || input_lower.includes('develop')) {\n//       return voiceResponses.projects;\n//     }\n//     if (input_lower.includes('skill') || input_lower.includes('technology') || input_lower.includes('programming') || input_lower.includes('technical')) {\n//       return voiceResponses.skills;\n//     }\n//     if (input_lower.includes('contact') || input_lower.includes('reach') || input_lower.includes('email') || input_lower.includes('phone')) {\n//       return voiceResponses.contact;\n//     }\n//     if (input_lower.includes('where') || input_lower.includes('location') || input_lower.includes('live') || input_lower.includes('based')) {\n//       return voiceResponses.location;\n//     }\n//     if (input_lower.includes('education') || input_lower.includes('study') || input_lower.includes('college') || input_lower.includes('university')) {\n//       return voiceResponses.education;\n//     }\n//     if (input_lower.includes('experience') || input_lower.includes('job') || input_lower.includes('career') || input_lower.includes('professional')) {\n//       return voiceResponses.experience;\n//     }\n//     if (input_lower.includes('help') || input_lower.includes('what can') || input_lower.includes('how to') || input_lower.includes('assist')) {\n//       return voiceResponses.help;\n//     }\n    \n//     return voiceResponses.default;\n//   }, []);\n\n//   const getAIResponse = useCallback(async (userInput) => {\n//     try {\n//       const contextPrompt = `You are Laxman's professional voice assistant. Respond naturally and conversationally in 25 words or less:\n\n// ${LAXMAN_PORTFOLIO_DATA}\n\n// Guidelines:\n// - Keep responses under 25 words for clear voice delivery\n// - Be conversational, engaging, and professional\n// - Use \"he\" or \"Laxman\" when referring to him\n// - If the question is unclear, ask a brief follow-up\n// - Focus on the most relevant information\n\n// User question: \"${userInput}\"\n\n// Provide a concise, conversational response:`\n\n//       const aiResponse = await window.puter.ai.chat(contextPrompt, {\n//         model: 'gpt-4o-mini',\n//         max_tokens: 100,\n//         temperature: 0.8\n//       });\n\n//       const extractedContent = extractContent(aiResponse);\n//       return extractedContent || getVoiceFallback(userInput);\n//     } catch (error) {\n//       console.error('AI API Error:', error);\n//       return getVoiceFallback(userInput);\n//     }\n//   }, [extractContent, getVoiceFallback]);\n\n//   const stopAll = useCallback(() => {\n//     if (recognitionRef.current) {\n//       recognitionRef.current.stop();\n//       recognitionRef.current = null;\n//     }\n    \n//     window.speechSynthesis.cancel();\n    \n//     if (silenceTimeoutRef.current) {\n//       clearTimeout(silenceTimeoutRef.current);\n//       silenceTimeoutRef.current = null;\n//     }\n    \n//     setAssistantState('idle');\n//     setInterimTranscript('');\n//     isProcessingRef.current = false;\n//     finalTranscriptRef.current = '';\n//   }, []);\n\n//   const startListening = useCallback(async () => {\n//     if (connectionStatus !== 'connected' || assistantState === 'listening' || isProcessingRef.current) {\n//       return;\n//     }\n\n//     if (!hasPermission) {\n//       const granted = await requestMicrophonePermission();\n//       if (!granted) return;\n//     }\n\n//     const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    \n//     if (!SpeechRecognition) {\n//       showNotice('error', '🎙️ Not Supported', 'Speech recognition is not available');\n//       return;\n//     }\n\n//     const recognition = new SpeechRecognition();\n//     recognitionRef.current = recognition;\n\n//     recognition.continuous = false; // Start with false for better permission handling\n//     recognition.interimResults = true;\n//     recognition.lang = 'en-US';\n//     recognition.maxAlternatives = 1;\n\n//     setAssistantState('listening');\n//     setInterimTranscript('');\n//     finalTranscriptRef.current = '';\n//     setShowHelp(false);\n    \n//     playAudioCue('start');\n\n//     recognition.onstart = () => {\n//       console.log('🎙️ Speech recognition started');\n//       recognition.continuous = true; // Enable continuous after start\n//     };\n\n//     recognition.onresult = (event) => {\n//       let interimText = '';\n\n//       for (let i = event.resultIndex; i < event.results.length; i++) {\n//         const transcript = event.results[i][0].transcript;\n        \n//         if (event.results[i].isFinal) {\n//           finalTranscriptRef.current += transcript;\n//         } else {\n//           interimText += transcript;\n//         }\n//       }\n\n//       if (interimText) {\n//         setInterimTranscript(interimText);\n//       }\n\n//       if (silenceTimeoutRef.current) {\n//         clearTimeout(silenceTimeoutRef.current);\n//       }\n\n//       silenceTimeoutRef.current = setTimeout(() => {\n//         const finalResult = finalTranscriptRef.current.trim();\n//         if (finalResult && !isProcessingRef.current) {\n//           if (recognitionRef.current) {\n//             recognitionRef.current.stop();\n//           }\n//           processFinalSpeech(finalResult);\n//         }\n//       }, 2500);\n//     };\n\n//     recognition.onerror = (event) => {\n//       console.error('Speech recognition error:', event.error);\n      \n//       switch (event.error) {\n//         case 'no-speech':\n//           console.log('No speech detected, will retry if auto mode is on');\n//           if (autoModeRef.current) {\n//             setTimeout(() => {\n//               if (autoModeRef.current && assistantState !== 'speaking') {\n//                 startListening();\n//               }\n//             }, 2000);\n//           } else {\n//             setAssistantState('idle');\n//             setInterimTranscript('');\n//           }\n//           return;\n        \n//         case 'network':\n//           showNotice('warning', '🌐 Network Issue', 'Retrying speech recognition...');\n//           setTimeout(() => {\n//             if (assistantState === 'listening') {\n//               startListening();\n//             }\n//           }, 2000);\n//           return;\n        \n//         case 'not-allowed':\n//           setHasPermission(false);\n//           showNotice('error', '🎤 Permission Denied', 'Please allow microphone access and try again');\n//           break;\n        \n//         case 'service-not-allowed':\n//           showNotice('error', '🔒 Service Blocked', 'Speech service is blocked. Check browser settings');\n//           break;\n        \n//         case 'audio-capture':\n//           showNotice('error', '🎤 Audio Error', 'Cannot capture audio. Check microphone connection');\n//           break;\n        \n//         default:\n//           console.error('Unhandled recognition error:', event.error);\n//           showNotice('warning', '⚠️ Recognition Error', 'Speech recognition encountered an error');\n//       }\n      \n//       playAudioCue('error');\n//       setAssistantState('idle');\n//       setInterimTranscript('');\n//       isProcessingRef.current = false;\n//     };\n\n//     recognition.onend = () => {\n//       console.log('🎙️ Speech recognition ended');\n//       const remainingText = finalTranscriptRef.current.trim();\n//       if (remainingText && !isProcessingRef.current && assistantState === 'listening') {\n//         processFinalSpeech(remainingText);\n//       } else if (!isProcessingRef.current) {\n//         setAssistantState('idle');\n//         setInterimTranscript('');\n//       }\n//     };\n\n//     try {\n//       recognition.start();\n//     } catch (error) {\n//       console.error('Failed to start recognition:', error);\n//       setAssistantState('idle');\n//       playAudioCue('error');\n//       showNotice('error', '🎤 Start Failed', 'Could not start speech recognition');\n//     }\n//   }, [connectionStatus, assistantState, hasPermission, requestMicrophonePermission, playAudioCue, showNotice]);\n\n//   const speakResponse = useCallback((text) => {\n//     if (!text || !text.trim()) {\n//       setAssistantState('idle');\n//       return;\n//     }\n    \n//     if (!('speechSynthesis' in window)) {\n//       setAssistantState('idle');\n//       showNotice('error', '🔊 Not Supported', 'Speech synthesis is not available');\n//       return;\n//     }\n\n//     const cleanText = text.trim();\n//     window.speechSynthesis.cancel();\n\n//     setTimeout(() => {\n//       const utterance = new SpeechSynthesisUtterance(cleanText);\n//       synthRef.current = utterance;\n\n//       utterance.rate = 0.85;\n//       utterance.pitch = 1.0;\n//       utterance.volume = 0.8;\n//       utterance.lang = 'en-US';\n\n//       utterance.onend = () => {\n//         console.log('🔊 Speech synthesis ended');\n//         setAssistantState('idle');\n        \n//         if (autoModeRef.current) {\n//           setTimeout(() => {\n//             if (autoModeRef.current && assistantState !== 'listening') {\n//               startListening();\n//             }\n//           }, 1500);\n//         }\n//       };\n\n//       utterance.onerror = (event) => {\n//         console.error('Speech synthesis error:', event.error);\n//         setAssistantState('idle');\n//         showNotice('error', '🔊 Speech Error', 'Could not play voice response');\n//       };\n\n//       const setVoice = () => {\n//         const voices = window.speechSynthesis.getVoices();\n//         if (voices.length > 0) {\n//           const preferredVoice = voices.find(voice => \n//             voice.lang.includes('en-US') && voice.name.includes('Google')\n//           ) || voices.find(voice => \n//             voice.lang.includes('en-US')\n//           ) || voices.find(voice => \n//             voice.lang.includes('en')\n//           ) || voices[0];\n          \n//           if (preferredVoice) {\n//             utterance.voice = preferredVoice;\n//           }\n//         }\n//       };\n\n//       if (window.speechSynthesis.getVoices().length > 0) {\n//         setVoice();\n//         window.speechSynthesis.speak(utterance);\n//       } else {\n//         window.speechSynthesis.onvoiceschanged = () => {\n//           setVoice();\n//           window.speechSynthesis.speak(utterance);\n//         };\n        \n//         setTimeout(() => {\n//           if (window.speechSynthesis.speaking === false) {\n//             window.speechSynthesis.speak(utterance);\n//           }\n//         }, 500);\n//       }\n//     }, 200);\n//   }, [startListening, assistantState, showNotice]);\n\n//   const processFinalSpeech = useCallback(async (finalText) => {\n//     if (finalText.length < 2 || isProcessingRef.current) return;\n    \n//     isProcessingRef.current = true;\n//     setInterimTranscript('');\n//     setShowHelp(false);\n    \n//     playAudioCue('end');\n//     setAssistantState('thinking');\n    \n//     try {\n//       console.log('🧠 Processing:', finalText);\n//       const aiResponse = await getAIResponse(finalText);\n//       console.log('🤖 Response:', aiResponse);\n      \n//       setAssistantState('speaking');\n      \n//       if (aiResponse && aiResponse.trim()) {\n//         speakResponse(aiResponse);\n//       } else {\n//         console.error('No valid response to speak');\n//         setAssistantState('idle');\n//       }\n//     } catch (error) {\n//       console.error('Error processing speech:', error);\n//       setAssistantState('idle');\n//       showNotice('error', '🧠 Processing Error', 'Could not process your request');\n//     }\n    \n//     isProcessingRef.current = false;\n//   }, [getAIResponse, playAudioCue, speakResponse, showNotice]);\n\n//   const toggleAutoMode = useCallback(() => {\n//     setIsAutoMode(prev => {\n//       const newState = !prev;\n      \n//       if (newState) {\n//         showNotice('info', '🔄 Auto Mode On', 'I will keep listening after each response');\n//         if (assistantState === 'idle') {\n//           setTimeout(() => startListening(), 1000);\n//         }\n//       } else {\n//         showNotice('info', '⏹️ Auto Mode Off', 'Switched to one-time question mode');\n//         stopAll();\n//       }\n//       return newState;\n//     });\n//   }, [assistantState, startListening, stopAll, showNotice]);\n\n//   const testTTS = useCallback(() => {\n//     const testText = \"Hello! I'm Laxman's AI assistant. Voice output is working perfectly!\";\n//     setAssistantState('speaking');\n//     speakResponse(testText);\n//   }, [speakResponse]);\n\n//   const closeChat = useCallback(() => {\n//     stopAll();\n//     setIsClosing(true);\n//     setTimeout(() => {\n//       setIsVisible(false);\n//       if (onClose) {\n//         onClose();\n//       }\n//     }, 400);\n//   }, [stopAll, onClose]);\n\n//   const getVoiceStatus = () => {\n//     switch (assistantState) {\n//       case 'listening':\n//         return {\n//           title: \"I'm Listening...\",\n//           subtitle: \"Speak clearly, I'm all ears!\"\n//         };\n//       case 'thinking':\n//         return {\n//           title: \"Processing...\",\n//           subtitle: \"Finding the perfect answer...\"\n//         };\n//       case 'speaking':\n//         return {\n//           title: \"Speaking...\",\n//           subtitle: \"Here's what I found for you\"\n//         };\n//       default:\n//         return {\n//           title: \"Laxman's AI Assistant\",\n//           subtitle: connectionStatus === 'connected' \n//             ? \"Tap the avatar to start chatting!\" \n//             : connectionStatus === 'connecting'\n//             ? \"Setting up voice features...\"\n//             : \"Click to enable voice features\"\n//         };\n//     }\n//   };\n\n//   const statusText = getVoiceStatus();\n//   const isDisabled = connectionStatus !== 'connected' || !hasPermission;\n\n//   if (!isVisible) return null;\n\n//   return (\n//     <>\n//       {/* Browser Notice */}\n//       {notice && (\n//         <BrowserNotice type={notice.type} show={notice.show}>\n//           <div className=\"notice-title\">\n//             {notice.title}\n//           </div>\n//           <div className=\"notice-content\">\n//             {notice.content}\n//           </div>\n//         </BrowserNotice>\n//       )}\n\n//       {/* Voice Assistant Container */}\n//       <VoiceContainer state={assistantState} isClosing={isClosing}>\n//         <ConnectionIndicator status={connectionStatus} />\n//         <CloseButton onClick={closeChat}>×</CloseButton>\n\n//         <VoiceAvatar \n//           state={assistantState}\n//           disabled={isDisabled}\n//           onClick={async () => {\n//             if (isDisabled) {\n//               if (!hasPermission) {\n//                 await requestMicrophonePermission();\n//               }\n//               return;\n//             }\n\n//             if (assistantState === 'idle') {\n//               // Initialize speech synthesis on user interaction\n//               if (!window.speechSynthesis.speaking) {\n//                 const testUtterance = new SpeechSynthesisUtterance('');\n//                 testUtterance.volume = 0;\n//                 window.speechSynthesis.speak(testUtterance);\n//               }\n//               startListening();\n//             } else {\n//               stopAll();\n//             }\n//           }}\n//         >\n//           {isDisabled ? '🔒' :\n//            assistantState === 'listening' ? '🎙️' : \n//            assistantState === 'thinking' ? '🧠' : \n//            assistantState === 'speaking' ? '🗣️' : '🤖'}\n          \n//           {/* Attractive wave rings for idle state */}\n//           {assistantState === 'idle' && !isDisabled && (\n//             <>\n//               <WaveRing delay={0} style={{ width: '90px', height: '90px' }} />\n//               <WaveRing delay={0.6} style={{ width: '105px', height: '105px' }} />\n//               <WaveRing delay={1.2} style={{ width: '120px', height: '120px' }} />\n//             </>\n//           )}\n//         </VoiceAvatar>\n\n//         <VoiceStatus>\n//           <div className=\"status-title\">{statusText.title}</div>\n//           <div className=\"status-subtitle\">{statusText.subtitle}</div>\n//         </VoiceStatus>\n\n//         <VoiceWaves state={assistantState}>\n//           {[...Array(7)].map((_, i) => (\n//             <div key={i} className=\"wave\" />\n//           ))}\n//         </VoiceWaves>\n\n//         <InterimText show={!!interimTranscript}>\n//           \"{interimTranscript}\"\n//         </InterimText>\n\n//         <VoiceControls>\n//           <ButtonRow>\n//             <div style={{ textAlign: 'center' }}>\n//               <VoiceButton\n//                 onClick={assistantState === 'idle' ? startListening : stopAll}\n//                 disabled={isDisabled}\n//                 title={assistantState === 'idle' ? 'Ask one question' : 'Stop current action'}\n//               >\n//                 {assistantState === 'idle' ? '🎤' : '⏹️'}\n//               </VoiceButton>\n//               <ButtonLabel disabled={isDisabled}>\n//                 One Time<br />Question\n//               </ButtonLabel>\n//             </div>\n\n//             <div style={{ textAlign: 'center' }}>\n//               <VoiceButton\n//                 active={isAutoMode}\n//                 onClick={toggleAutoMode}\n//                 disabled={isDisabled}\n//                 title=\"Toggle continuous conversation mode\"\n//               >\n//                 🔄\n//               </VoiceButton>\n//               <ButtonLabel disabled={isDisabled}>\n//                 Keep<br />Listening\n//               </ButtonLabel>\n//             </div>\n\n//             <div style={{ textAlign: 'center' }}>\n//               <VoiceButton\n//                 onClick={testTTS}\n//                 disabled={!('speechSynthesis' in window)}\n//                 title=\"Test voice output\"\n//               >\n//                 🔊\n//               </VoiceButton>\n//               <ButtonLabel disabled={!('speechSynthesis' in window)}>\n//                 Test<br />Voice\n//               </ButtonLabel>\n//             </div>\n//           </ButtonRow>\n//         </VoiceControls>\n\n//         <HelpHint show={showHelp && assistantState === 'idle' && connectionStatus === 'connected'}> \n//           💬 Say \"Hello\" or ask about Laxman's experience, projects, or skills!\n//         </HelpHint>\n//       </VoiceContainer>\n//     </>\n//   );\n// };\n\n// const Siri = ({ onClose }) => {\n//   return <VoiceAssistant onClose={onClose} />;\n// };\n\n// export default Siri;\n\n\n\n\n// // mobile optmised version working best \n\n// import React, { useState, useEffect, useRef, useCallback } from 'react';\n// import styled, { keyframes, css } from 'styled-components';\n\n// // Enhanced portfolio data with better mobile formatting\n// const LAXMAN_PORTFOLIO_DATA = `\n// K LAXMAN - SOFTWARE DEVELOPMENT ENGINEER & AI SPECIALIST\n\n// === PROFESSIONAL SUMMARY ===\n// Software Development Engineer at Computer Age Management Services (CAMS), Chennai (June 2024 - Present)\n// IIT Delhi Alumni (2018-2024) - B.Tech + M.Tech in Computer Science & Engineering\n// Specialized in AI/ML, Financial Technology & Full Stack Development\n// Teaching Assistant with 300+ students mentored | Enterprise AI Platform Developer\n\n// === CURRENT ROLE ===\n// Software Development Engineer at Computer Age Management Services (CAMS)\n// - Developed CamsLens Enterprise GenAI platform processing 80,000+ documents monthly with 95% accuracy\n// - Implemented real-time RSS feed ingestion reducing manual monitoring by 80%\n// - Designed AI-powered query APIs with 60% response time improvement\n// - Built Ranking Chunks Algorithm for Vertex AI datastore optimization\n// - Technologies: Vertex AI Gemini-flash 2.0, Agent Builder, Google Cloud Run, BigQuery\n// - Location: Chennai, Tamil Nadu\n// - Duration: June 2024 - Present\n\n// === EDUCATION ===\n// Indian Institute of Technology Delhi (July 2018 - May 2024)\n// - Dual Degree: Bachelor's + Master's in Computer Science & Engineering\n// - Location: New Delhi, India\n// - Specialized in AI/ML, Computer Vision, and NLP\n// - Teaching Assistant (Fall 2019 - Spring 2021): Mentored 300+ undergraduate students\n// - Courses: Data Structures, Introduction to Programming, Advanced CS concepts\n\n// === TECHNICAL SKILLS ===\n// Programming Languages:\n// - Java: Spring Boot, Spring Security, Maven\n// - Python: Flask, FastAPI, OpenCV, Scikit-learn, Pandas, NumPy\n// - JavaScript: Node.js, React, ES6+\n\n// Full Stack Development:\n// - Frontend: React.js, HTML5, CSS3, TailwindCSS, JavaScript\n// - Backend: Node.js, Express.js, Python Flask/FastAPI, Java Spring Boot\n// - Databases: MySQL, PostgreSQL, MongoDB, H2, Google BigQuery\n// - Web Technologies: REST APIs, GraphQL, WebSockets\n\n// AI/ML & Data Science:\n// - Frameworks: PyTorch, TensorFlow, Vertex AI Gen AI\n// - Computer Vision: OpenCV, Layout Parser, MTL-TabNet, Dlib\n// - NLP: spaCy, Large Language Models, Few-shot Learning\n// - Specialized: Document Processing, Image Recognition, Facial Landmark Detection\n\n// Cloud & DevOps:\n// - Google Cloud: Cloud Run, GCS, Vertex AI, BigQuery\n// - AWS: Basic certification and services\n// - Azure: Basic services\n// - Containerization: Docker, Kubernetes\n// - CI/CD: GitHub Actions, Jenkins, Git\n// - Tools: Maven, npm, Postman, GCP SDK\n\n// === CONTACT ===\n// Email: [Laxmankethavath5@gmail.com](mailto:Laxmankethavath5@gmail.com)\n// Phone: +91-9000063740\n// LinkedIn: [Professional Profile](https://linkedin.com/in/k-laxman)\n// GitHub: [Project Repository](https://github.com/Laxman824)\n// Portfolio: [Personal Website](https://k-laxman-portfolio.com)\n// Location: Chennai, Tamil Nadu, India\n// `;\n\n// // ============= ENHANCED MOBILE-FIRST ANIMATIONS =============\n// const ambientPulse = keyframes`\n//   0%, 100% { \n//     transform: scale(1); \n//     opacity: 0.9;\n//   }\n//   50% {\n//     transform: scale(1.02);\n//     opacity: 1;\n//   }\n// `;\n\n// const attractiveWaves = keyframes`\n//   0% {\n//     transform: scale(1);\n//     opacity: 0.8;\n//   }\n//   50% {\n//     transform: scale(1.3);\n//     opacity: 0.4;\n//   }\n//   100% {\n//     transform: scale(1.6);\n//     opacity: 0;\n//   }\n// `;\n\n// const magneticPulse = keyframes`\n//   0%, 100% { \n//     box-shadow: \n//       0 0 15px rgba(79, 70, 229, 0.4),\n//       0 0 30px rgba(79, 70, 229, 0.2),\n//       0 0 45px rgba(79, 70, 229, 0.1);\n//   }\n//   50% {\n//     box-shadow: \n//       0 0 25px rgba(79, 70, 229, 0.6),\n//       0 0 50px rgba(79, 70, 229, 0.4),\n//       0 0 75px rgba(79, 70, 229, 0.2);\n//   }\n// `;\n\n// const listeningGlow = keyframes`\n//   0%, 100% { \n//     box-shadow: \n//       0 0 20px rgba(34, 197, 94, 0.6),\n//       0 0 40px rgba(34, 197, 94, 0.4);\n//   }\n//   50% {\n//     box-shadow: \n//       0 0 30px rgba(34, 197, 94, 0.8),\n//       0 0 60px rgba(34, 197, 94, 0.6);\n//   }\n// `;\n\n// const speakingPulse = keyframes`\n//   0%, 100% { \n//     box-shadow: \n//       0 0 20px rgba(239, 68, 68, 0.6),\n//       0 0 40px rgba(239, 68, 68, 0.4);\n//   }\n//   25% {\n//     box-shadow: \n//       0 0 30px rgba(239, 68, 68, 0.8),\n//       0 0 60px rgba(239, 68, 68, 0.6);\n//   }\n//   50% {\n//     box-shadow: \n//       0 0 40px rgba(239, 68, 68, 1),\n//       0 0 80px rgba(239, 68, 68, 0.8);\n//   }\n//   75% {\n//     box-shadow: \n//       0 0 30px rgba(239, 68, 68, 0.8),\n//       0 0 60px rgba(239, 68, 68, 0.6);\n//   }\n// `;\n\n// const thinkingSpinner = keyframes`\n//   0% { transform: rotate(0deg); }\n//   100% { transform: rotate(360deg); }\n// `;\n\n// const spin = keyframes`\n//   from { transform: rotate(0deg); }\n//   to { transform: rotate(360deg); }\n// `;\n\n// const slideIn = keyframes`\n//   from {\n//     transform: translateY(100%);\n//     opacity: 0;\n//   }\n//   to {\n//     transform: translateY(0);\n//     opacity: 1;\n//   }\n// `;\n\n// const slideOut = keyframes`\n//   from {\n//     transform: translateY(0);\n//     opacity: 1;\n//   }\n//   to {\n//     transform: translateY(100%);\n//     opacity: 0;\n//   }\n// `;\n\n// const fadeIn = keyframes`\n//   from { opacity: 0; transform: translateY(-10px); }\n//   to { opacity: 1; transform: translateY(0); }\n// `;\n\n// const fadeOut = keyframes`\n//   from { opacity: 1; transform: translateY(0); }\n//   to { opacity: 0; transform: translateY(-10px); }\n// `;\n\n// const bounceIn = keyframes`\n//   0% {\n//     transform: scale(0.3);\n//     opacity: 0;\n//   }\n//   50% {\n//     transform: scale(1.05);\n//   }\n//   70% {\n//     transform: scale(0.9);\n//   }\n//   100% {\n//     transform: scale(1);\n//     opacity: 1;\n//   }\n// `;\n\n// // ============= ENHANCED MOBILE-OPTIMIZED COMPONENTS =============\n// const VoiceContainer = styled.div`\n//   position: fixed;\n//   bottom: ${props => {\n//     if (props.isMobile) {\n//       return props.isKeyboardOpen ? '10px' : '80px';\n//     }\n//     return '100px';\n//   }};\n//   left: ${props => props.isMobile ? '10px' : '20px'};\n//   width: ${props => props.isMobile ? 'calc(100vw - 20px)' : '300px'};\n//   max-width: ${props => props.isMobile ? '350px' : '300px'};\n//   background: linear-gradient(145deg, \n//     rgba(11, 11, 22, 0.95) 0%, \n//     rgba(20, 20, 32, 0.98) 50%,\n//     rgba(10, 10, 25, 0.95) 100%);\n//   border-radius: ${props => props.isMobile ? '20px' : '24px'};\n//   padding: ${props => props.isMobile ? '20px' : '24px'};\n//   display: flex;\n//   flex-direction: column;\n//   align-items: center;\n//   justify-content: center;\n//   overflow: hidden;\n//   box-shadow: \n//     0 ${props => props.isMobile ? '15px' : '20px'} ${props => props.isMobile ? '30px' : '40px'} rgba(0, 0, 0, 0.7),\n//     0 ${props => props.isMobile ? '6px' : '8px'} ${props => props.isMobile ? '12px' : '16px'} rgba(0, 0, 0, 0.5),\n//     inset 0 1px 0 rgba(255, 255, 255, 0.1),\n//     inset 0 -1px 0 rgba(0, 0, 0, 0.2);\n//   z-index: 1000;\n//   animation: ${props => props.isClosing ? slideOut : slideIn} 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);\n//   backdrop-filter: blur(${props => props.isMobile ? '15px' : '20px'});\n//   border: 1px solid rgba(255, 255, 255, 0.1);\n  \n//   /* Enhanced mobile touch optimization */\n//   -webkit-touch-callout: none;\n//   -webkit-user-select: none;\n//   -khtml-user-select: none;\n//   -moz-user-select: none;\n//   -ms-user-select: none;\n//   user-select: none;\n  \n//   /* iOS-specific optimizations */\n//   -webkit-tap-highlight-color: transparent;\n//   -webkit-overflow-scrolling: touch;\n  \n//   &::before {\n//     content: '';\n//     position: absolute;\n//     top: 0;\n//     left: 0;\n//     right: 0;\n//     bottom: 0;\n//     background: radial-gradient(circle at 50% 30%, rgba(79, 70, 229, 0.1) 0%, transparent 50%);\n//     pointer-events: none;\n//   }\n\n//   &::after {\n//     content: '';\n//     position: absolute;\n//     top: 50%;\n//     left: 50%;\n//     width: ${props => props.isMobile ? '150px' : '180px'};\n//     height: ${props => props.isMobile ? '150px' : '180px'};\n//     background: ${props => {\n//       if (props.state === 'listening') return 'radial-gradient(circle, rgba(34, 197, 94, 0.15) 0%, transparent 70%)';\n//       if (props.state === 'speaking') return 'radial-gradient(circle, rgba(239, 68, 68, 0.15) 0%, transparent 70%)';\n//       if (props.state === 'thinking') return 'radial-gradient(circle, rgba(245, 158, 11, 0.15) 0%, transparent 70%)';\n//       return 'radial-gradient(circle, rgba(79, 70, 229, 0.08) 0%, transparent 70%)';\n//     }};\n//     border-radius: 50%;\n//     transform: translate(-50%, -50%);\n//     pointer-events: none;\n//     transition: all 0.8s ease;\n//   }\n// `;\n\n// const BrowserNotice = styled.div`\n//   position: fixed;\n//   top: ${props => props.isMobile ? '10px' : '20px'};\n//   right: ${props => props.isMobile ? '10px' : '20px'};\n//   left: ${props => props.isMobile ? '10px' : 'auto'};\n//   background: ${props => {\n//     if (props.type === 'error') return 'rgba(239, 68, 68, 0.95)';\n//     if (props.type === 'warning') return 'rgba(245, 158, 11, 0.95)';\n//     return 'rgba(59, 130, 246, 0.95)';\n//   }};\n//   color: white;\n//   padding: ${props => props.isMobile ? '12px 16px' : '16px 20px'};\n//   border-radius: ${props => props.isMobile ? '10px' : '12px'};\n//   font-size: ${props => props.isMobile ? '12px' : '13px'};\n//   max-width: ${props => props.isMobile ? 'none' : '320px'};\n//   z-index: 1001;\n//   backdrop-filter: blur(15px);\n//   border: 1px solid rgba(255, 255, 255, 0.2);\n//   box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);\n//   animation: ${props => props.show ? bounceIn : fadeOut} 0.3s ease;\n//   line-height: 1.4;\n  \n//   .notice-title {\n//     font-weight: 700;\n//     margin-bottom: 8px;\n//     display: flex;\n//     align-items: center;\n//     gap: 8px;\n//     font-size: ${props => props.isMobile ? '13px' : '14px'};\n//   }\n  \n//   .notice-content {\n//     font-weight: 400;\n//     opacity: 0.9;\n//     font-size: ${props => props.isMobile ? '11px' : '12px'};\n//   }\n// `;\n\n// const CloseButton = styled.button`\n//   position: absolute;\n//   top: ${props => props.isMobile ? '8px' : '12px'};\n//   right: ${props => props.isMobile ? '8px' : '12px'};\n//   width: ${props => props.isMobile ? '32px' : '28px'};\n//   height: ${props => props.isMobile ? '32px' : '28px'};\n//   border-radius: 50%;\n//   border: none;\n//   background: rgba(255, 255, 255, 0.1);\n//   color: rgba(255, 255, 255, 0.6);\n//   font-size: ${props => props.isMobile ? '18px' : '16px'};\n//   cursor: pointer;\n//   transition: all 0.3s ease;\n//   backdrop-filter: blur(10px);\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n//   font-weight: bold;\n  \n//   /* Enhanced mobile touch target */\n//   min-width: ${props => props.isMobile ? '44px' : '28px'};\n//   min-height: ${props => props.isMobile ? '44px' : '28px'};\n//   -webkit-tap-highlight-color: transparent;\n\n//   &:hover, &:active {\n//     background: rgba(239, 68, 68, 0.2);\n//     color: #EF4444;\n//     transform: scale(${props => props.isMobile ? '0.95' : '1.1'});\n//   }\n// `;\n\n// const VoiceAvatar = styled.div`\n//   width: ${props => props.isMobile ? '70px' : '80px'};\n//   height: ${props => props.isMobile ? '70px' : '80px'};\n//   border-radius: 50%;\n//   background: ${props => {\n//     if (props.state === 'listening') return 'linear-gradient(135deg, #22C55E, #16A34A, #1580 )';\n//     if (props.state === 'speaking') return 'linear-gradient(135deg, #EF4444, #DC2626, #B91C1C)';\n//     if (props.state === 'thinking') return 'linear-gradient(135deg, #F59E0B, #D97706, #B45309)';\n//     if (props.disabled) return 'linear-gradient(135deg, #6B7280, #4B5563, #374151)';\n//     return 'linear-gradient(135deg, #4F46E5, #3730A3, #312E81)';\n//   }};\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n//   font-size: ${props => props.isMobile ? '28px' : '32px'};\n//   cursor: ${props => props.disabled ? 'not-allowed' : 'pointer'};\n//   transition: all 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);\n//   position: relative;\n//   margin-bottom: ${props => props.isMobile ? '12px' : '16px'};\n//   opacity: ${props => props.disabled ? 0.5 : 1};\n  \n//   /* Enhanced mobile touch target */\n//   min-width: ${props => props.isMobile ? '70px' : '80px'};\n//   min-height: ${props => props.isMobile ? '70px' : '80px'};\n//   -webkit-tap-highlight-color: transparent;\n  \n//   animation: ${props => {\n//     if (props.disabled) return 'none';\n//     if (props.state === 'listening') return css`${listeningGlow} 2s ease-in-out infinite`;\n//     if (props.state === 'speaking') return css`${speakingPulse} 1.5s ease-in-out infinite`;\n//     if (props.state === 'thinking') return css`${thinkingSpinner} 2s linear infinite, ${ambientPulse} 3s ease-in-out infinite`;\n//     return css`${magneticPulse} 4s ease-in-out infinite`;\n//   }};\n\n//   &::before {\n//     content: '';\n//     position: absolute;\n//     top: -4px;\n//     left: -4px;\n//     right: -4px;\n//     bottom: -4px;\n//     border-radius: 50%;\n//     background: ${props => {\n//       if (props.disabled) return 'none';\n//       if (props.state === 'listening') return 'conic-gradient(from 0deg, rgba(34, 197, 94, 0.6), transparent, rgba(34, 197, 94, 0.6))';\n//       if (props.state === 'speaking') return 'conic-gradient(from 0deg, rgba(239, 68, 68, 0.6), transparent, rgba(239, 68, 68, 0.6))';\n//       if (props.state === 'thinking') return 'conic-gradient(from 0deg, rgba(245, 158, 11, 0.6), transparent, rgba(245, 158, 11, 0.6))';\n//       return 'conic-gradient(from 0deg, rgba(79, 70, 229, 0.4), transparent, rgba(79, 70, 229, 0.4))';\n//     }};\n//     animation: ${props => props.state !== 'idle' && !props.disabled ? css`${spin} 3s linear infinite` : 'none'};\n//     z-index: -1;\n//   }\n\n//   ${props => props.state === 'idle' && !props.disabled && css`\n//     &::after {\n//       content: '';\n//       position: absolute;\n//       top: 50%;\n//       left: 50%;\n//       width: 100%;\n//       height: 100%;\n//       border: 2px solid rgba(79, 70, 229, 0.3);\n//       border-radius: 50%;\n//       transform: translate(-50%, -50%);\n//       animation: ${attractiveWaves} 2s ease-out infinite;\n//     }\n//   `}\n\n//   &:hover, &:active {\n//     transform: ${props => props.disabled ? 'none' : props.isMobile ? 'scale(0.95)' : 'scale(1.08)'};\n//     filter: ${props => props.disabled ? 'none' : 'brightness(1.1)'};\n//   }\n// `;\n\n// const WaveRing = styled.div`\n//   position: absolute;\n//   top: 50%;\n//   left: 50%;\n//   border: 1px solid rgba(79, 70, 229, 0.2);\n//   border-radius: 50%;\n//   transform: translate(-50%, -50%);\n//   pointer-events: none;\n//   animation: ${attractiveWaves} 2s ease-out infinite;\n//   animation-delay: ${props => props.delay}s;\n// `;\n\n// const VoiceStatus = styled.div`\n//   text-align: center;\n//   margin-bottom: ${props => props.isMobile ? '12px' : '16px'};\n  \n//   .status-title {\n//     font-size: ${props => props.isMobile ? '14px' : '15px'};\n//     font-weight: 700;\n//     color: white;\n//     margin-bottom: 6px;\n//     text-shadow: 0 2px 8px rgba(0, 0, 0, 0.5);\n//     letter-spacing: 0.8px;\n//     background: linear-gradient(135deg, #fff, #e2e8f0);\n//     -webkit-background-clip: text;\n//     -webkit-text-fill-color: transparent;\n//     background-clip: text;\n//   }\n  \n//   .status-subtitle {\n//     font-size: ${props => props.isMobile ? '10px' : '11px'};\n//     color: rgba(255, 255, 255, 0.7);\n//     font-weight: 400;\n//     line-height: 1.3;\n//     letter-spacing: 0.2px;\n//   }\n// `;\n\n// const ConnectionIndicator = styled.div`\n//   position: absolute;\n//   top: ${props => props.isMobile ? '8px' : '12px'};\n//   left: ${props => props.isMobile ? '8px' : '12px'};\n//   width: ${props => props.isMobile ? '10px' : '12px'};\n//   height: ${props => props.isMobile ? '10px' : '12px'};\n//   border-radius: 50%;\n//   background: ${props => {\n//     if (props.status === 'connected') return '#22C55E';\n//     if (props.status === 'connecting') return '#F59E0B';\n//     return '#EF4444';\n//   }};\n//   box-shadow: \n//     0 0 ${props => props.isMobile ? '8px' : '12px'} ${props => {\n//       if (props.status === 'connected') return 'rgba(34, 197, 94, 0.6)';\n//       if (props.status === 'connecting') return 'rgba(245, 158, 11, 0.6)';\n//       return 'rgba(239, 68, 68, 0.6)';\n//     }},\n//     inset 0 1px 2px rgba(255, 255, 255, 0.2);\n//   animation: ${ambientPulse} 2s ease-in-out infinite;\n// `;\n\n// const VoiceWaves = styled.div`\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n//   gap: ${props => props.isMobile ? '2px' : '3px'};\n//   margin: ${props => props.isMobile ? '8px 0' : '12px 0'};\n//   height: ${props => props.isMobile ? '20px' : '28px'};\n//   opacity: ${props => props.state === 'listening' || props.state === 'speaking' ? 1 : 0};\n//   transition: opacity 0.4s ease;\n  \n//   .wave {\n//     width: ${props => props.isMobile ? '2px' : '3px'};\n//     border-radius: 2px;\n//     background: ${props => {\n//       if (props.state === 'listening') return 'linear-gradient(to top, #22C55E, #10B981)';\n//       if (props.state === 'speaking') return 'linear-gradient(to top, #EF4444, #F87171)';\n//       return 'linear-gradient(to top, #4F46E5, #6366F1)';\n//     }};\n//     box-shadow: 0 0 ${props => props.isMobile ? '4px' : '8px'} ${props => {\n//       if (props.state === 'listening') return 'rgba(34, 197, 94, 0.5)';\n//       if (props.state === 'speaking') return 'rgba(239, 68, 68, 0.5)';\n//       return 'rgba(79, 70, 229, 0.5)';\n//     }};\n//     animation: ${keyframes`\n//       0%, 100% { height: 3px; }\n//       50% { height: ${props => props.isMobile ? '16px' : '24px'}; }\n//     `} 1.2s ease-in-out infinite;\n    \n//     &:nth-child(1) { animation-delay: 0.0s; }\n//     &:nth-child(2) { animation-delay: 0.1s; }\n//     &:nth-child(3) { animation-delay: 0.2s; }\n//     &:nth-child(4) { animation-delay: 0.3s; }\n//     &:nth-child(5) { animation-delay: 0.2s; }\n//     &:nth-child(6) { animation-delay: 0.1s; }\n//     &:nth-child(7) { animation-delay: 0.1s; }\n//   }\n// `;\n\n// const VoiceControls = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   gap: ${props => props.isMobile ? '8px' : '12px'};\n//   margin-top: ${props => props.isMobile ? '8px' : '12px'};\n//   width: 100%;\n// `;\n\n// const ButtonRow = styled.div`\n//   display: flex;\n//   gap: ${props => props.isMobile ? '8px' : '12px'};\n//   justify-content: center;\n// `;\n\n// const VoiceButton = styled.button`\n//   width: ${props => props.isMobile ? '50px' : '45px'};\n//   height: ${props => props.isMobile ? '50px' : '45px'};\n//   border-radius: 50%;\n//   border: none;\n//   background: ${props => {\n//     if (props.disabled) return 'linear-gradient(135deg, rgba(107, 114, 128, 0.2), rgba(107, 114, 128, 0.1))';\n//     if (props.active) return 'linear-gradient(135deg, rgba(34, 197, 94, 0.3), rgba(34, 197, 94, 0.1))';\n//     return 'linear-gradient(135deg, rgba(255, 255, 255, 0.15), rgba(255, 255, 255, 0.05))';\n//   }};\n//   color: ${props => props.disabled ? 'rgba(255, 255, 255, 0.3)' : 'white'};\n//   font-size: ${props => props.isMobile ? '18px' : '16px'};\n//   cursor: ${props => props.disabled ? 'not-allowed' : 'pointer'};\n//   transition: all 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);\n//   backdrop-filter: blur(15px);\n//   border: 1px solid ${props => {\n//     if (props.disabled) return 'rgba(107, 114, 128, 0.2)';\n//     if (props.active) return 'rgba(34, 197, 94, 0.4)';\n//     return 'rgba(255, 255, 255, 0.2)';\n//   }};\n//   position: relative;\n//   overflow: hidden;\n//   box-shadow: ${props => {\n//     if (props.disabled) return '0 2px 8px rgba(0, 0, 0, 0.1)';\n//     if (props.active) return '0 0 20px rgba(34, 197, 94, 0.4)';\n//     return '0 4px 15px rgba(0, 0, 0, 0.2)';\n//   }};\n  \n//   /* Enhanced mobile touch optimization */\n//   -webkit-tap-highlight-color: transparent;\n//   min-width: ${props => props.isMobile ? '50px' : '45px'};\n//   min-height: ${props => props.isMobile ? '50px' : '45px'};\n\n//   &::before {\n//     content: '';\n//     position: absolute;\n//     top: 50%;\n//     left: 50%;\n//     width: 0;\n//     height: 0;\n//     background: rgba(255, 255, 255, 0.2);\n//     border-radius: 50%;\n//     transition: all 0.4s ease;\n//     transform: translate(-50%, -50%);\n//   }\n\n//   &:hover:not(:disabled) {\n//     transform: ${props => props.isMobile ? 'scale(0.95)' : 'translateY(-3px) scale(1.05)'};\n//     box-shadow: ${props => props.isMobile ? \n//       '0 4px 15px rgba(0, 0, 0, 0.2)' : \n//       '0 8px 25px rgba(0, 0, 0, 0.3)'\n//     };\n    \n//     &::before {\n//       width: 100%;\n//       height: 100%;\n//     }\n//   }\n\n//   &:active:not(:disabled) {\n//     transform: scale(0.9);\n//   }\n// `;\n\n// const ButtonLabel = styled.div`\n//   font-size: ${props => props.isMobile ? '8px' : '9px'};\n//   color: ${props => props.disabled ? 'rgba(255, 255, 255, 0.3)' : 'rgba(255, 255, 255, 0.6)'};\n//   text-align: center;\n//   margin-top: ${props => props.isMobile ? '4px' : '6px'};\n//   font-weight: 500;\n//   letter-spacing: 0.2px;\n//   line-height: 1.2;\n// `;\n\n// const InterimText = styled.div`\n//   background: linear-gradient(135deg, rgba(34, 197, 94, 0.15), rgba(34, 197, 94, 0.05));\n//   color: #22C55E;\n//   padding: ${props => props.isMobile ? '8px 12px' : '10px 14px'};\n//   border-radius: ${props => props.isMobile ? '10px' : '12px'};\n//   font-size: ${props => props.isMobile ? '11px' : '12px'};\n//   text-align: center;\n//   margin: ${props => props.isMobile ? '8px 0' : '10px 0'};\n//   border: 1px solid rgba(34, 197, 94, 0.3);\n//   backdrop-filter: blur(15px);\n//   max-width: ${props => props.isMobile ? '90%' : '220px'};\n//   opacity: ${props => props.show ? 1 : 0};\n//   transform: translateY(${props => props.show ? 0 : 15}px);\n//   transition: all 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);\n//   font-style: italic;\n//   word-break: break-word;\n//   box-shadow: 0 4px 15px rgba(34, 197, 94, 0.2);\n//   font-weight: 500;\n//   min-height: ${props => props.isMobile ? '16px' : '20px'};\n// `;\n\n// const HelpHint = styled.div`\n//   position: absolute;\n//   bottom: ${props => props.isMobile ? '-35px' : '-45px'};\n//   left: 50%;\n//   transform: translateX(-50%);\n//   color: rgba(255, 255, 255, 0.5);\n//   font-size: ${props => props.isMobile ? '9px' : '10px'};\n//   text-align: center;\n//   line-height: 1.3;\n//   max-width: ${props => props.isMobile ? '90%' : '240px'};\n//   opacity: ${props => props.show ? 1 : 0};\n//   transition: opacity 0.4s ease;\n//   font-weight: 500;\n//   background: linear-gradient(135deg, rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0.6));\n//   padding: ${props => props.isMobile ? '6px 12px' : '8px 14px'};\n//   border-radius: ${props => props.isMobile ? '8px' : '10px'};\n//   backdrop-filter: blur(10px);\n//   border: 1px solid rgba(255, 255, 255, 0.1);\n// `;\n\n// // ============= ENHANCED VOICE ASSISTANT WITH MOBILE OPTIMIZATION =============\n// const VoiceAssistant = ({ onClose }) => {\n//   const [assistantState, setAssistantState] = useState('idle');\n//   const [connectionStatus, setConnectionStatus] = useState('disconnected');\n//   const [isAutoMode, setIsAutoMode] = useState(false);\n//   const [interimTranscript, setInterimTranscript] = useState('');\n//   const [showHelp, setShowHelp] = useState(true);\n//   const [isVisible, setIsVisible] = useState(true);\n//   const [isClosing, setIsClosing] = useState(false);\n//   const [notice, setNotice] = useState(null);\n//   const [hasPermission, setHasPermission] = useState(false);\n//   const [retryCount, setRetryCount] = useState(0);\n//   const [deviceInfo, setDeviceInfo] = useState({});\n//   const [isKeyboardOpen, setIsKeyboardOpen] = useState(false);\n  \n//   const recognitionRef = useRef(null);\n//   const synthRef = useRef(null);\n//   const silenceTimeoutRef = useRef(null);\n//   const isProcessingRef = useRef(false);\n//   const finalTranscriptRef = useRef('');\n//   const audioContextRef = useRef(null);\n//   const autoModeRef = useRef(false);\n//   const noticeTimeoutRef = useRef(null);\n//   const wakeLockRef = useRef(null);\n//   const initialViewportHeight = useRef(window.innerHeight);\n\n//   // Enhanced device detection\n//   useEffect(() => {\n//     const userAgent = navigator.userAgent.toLowerCase();\n//     const platform = navigator.platform.toLowerCase();\n    \n//     const deviceInfo = {\n//       isMobile: /android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i.test(userAgent),\n//       isIOS: /ipad|iphone|ipod/.test(userAgent) || (platform === 'macintel' && navigator.maxTouchPoints > 1),\n//       isAndroid: /android/i.test(userAgent),\n//       isChrome: /chrome/i.test(userAgent) && !/edge/i.test(userAgent),\n//       isFirefox: /firefox/i.test(userAgent),\n//       isSafari: /safari/i.test(userAgent) && !/chrome/i.test(userAgent),\n//       isEdge: /edge/i.test(userAgent),\n//       hasTouch: 'ontouchstart' in window || navigator.maxTouchPoints > 0,\n//       isStandalone: window.navigator.standalone === true || window.matchMedia('(display-mode: standalone)').matches\n//     };\n    \n//     setDeviceInfo(deviceInfo);\n    \n//     // Mobile-specific optimizations\n//     if (deviceInfo.isMobile) {\n//       // Prevent zoom on iOS\n//       if (deviceInfo.isIOS) {\n//         const viewport = document.querySelector('meta[name=\"viewport\"]');\n//         if (viewport) {\n//           viewport.setAttribute('content', 'width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no');\n//         }\n//       }\n      \n//       // Handle virtual keyboard\n//       const handleResize = () => {\n//         const currentHeight = window.innerHeight;\n//         const heightDifference = initialViewportHeight.current - currentHeight;\n//         setIsKeyboardOpen(heightDifference > 150); // Threshold for keyboard detection\n//       };\n      \n//       window.addEventListener('resize', handleResize);\n//       return () => window.removeEventListener('resize', handleResize);\n//     }\n//   }, []);\n\n//   // Wake lock for mobile (prevents screen from sleeping during voice interaction)\n//   const requestWakeLock = useCallback(async () => {\n//     if ('wakeLock' in navigator && deviceInfo.isMobile) {\n//       try {\n//         wakeLockRef.current = await navigator.wakeLock.request('screen');\n//         console.log('Wake lock acquired');\n//       } catch (err) {\n//         console.log('Wake lock request failed:', err);\n//       }\n//     }\n//   }, [deviceInfo.isMobile]);\n\n//   const releaseWakeLock = useCallback(() => {\n//     if (wakeLockRef.current) {\n//       wakeLockRef.current.release();\n//       wakeLockRef.current = null;\n//       console.log('Wake lock released');\n//     }\n//   }, []);\n\n//   useEffect(() => {\n//     autoModeRef.current = isAutoMode;\n//     if (isAutoMode) {\n//       requestWakeLock();\n//     } else {\n//       releaseWakeLock();\n//     }\n//   }, [isAutoMode, requestWakeLock, releaseWakeLock]);\n\n//   useEffect(() => {\n//     const timer = setTimeout(() => setShowHelp(false), deviceInfo.isMobile ? 6000 : 8000);\n//     return () => clearTimeout(timer);\n//   }, [deviceInfo.isMobile]);\n\n//   const showNotice = useCallback((type, title, content, duration = deviceInfo.isMobile ? 4000 : 5000) => {\n//     if (noticeTimeoutRef.current) {\n//       clearTimeout(noticeTimeoutRef.current);\n//     }\n    \n//     setNotice({ type, title, content, show: true });\n    \n//     noticeTimeoutRef.current = setTimeout(() => {\n//       setNotice(prev => prev ? { ...prev, show: false } : null);\n//       setTimeout(() => setNotice(null), 300);\n//     }, duration);\n//   }, [deviceInfo.isMobile]);\n\n//   const checkBrowserCompatibility = useCallback(() => {\n//     if (!window.isSecureContext) {\n//       showNotice('error', '🔒 HTTPS Required', 'Voice features require a secure connection (HTTPS)');\n//       return false;\n//     }\n\n//     if (!('webkitSpeechRecognition' in window || 'SpeechRecognition' in window)) {\n//       if (deviceInfo.isMobile) {\n//         if (deviceInfo.isIOS) {\n//           showNotice('error', '🎙️ Not Available', 'Speech recognition requires Chrome on iOS, not Safari');\n//         } else if (deviceInfo.isAndroid && !deviceInfo.isChrome) {\n//           showNotice('error', '🎙️ Use Chrome', 'Speech recognition works best in Chrome browser');\n//         } else {\n//           showNotice('error', '🎙️ Not Supported', 'Speech recognition is not supported on this device');\n//         }\n//       } else {\n//         showNotice('error', '🎙️ Not Supported', 'Speech recognition is not supported in this browser');\n//       }\n//       return false;\n//     }\n\n//     if (!('speechSynthesis' in window)) {\n//       showNotice('error', '🔊 Not Supported', 'Speech synthesis is not supported');\n//       return false;\n//     }\n\n//     // Mobile-specific warnings\n//     if (deviceInfo.isMobile) {\n//       if (deviceInfo.isIOS && deviceInfo.isSafari) {\n//         showNotice('warning', '🧭 Safari Limitation', 'For best voice experience, please use Chrome on iOS');\n//       } else if (deviceInfo.isAndroid && !deviceInfo.isChrome) {\n//         showNotice('warning', '📱 Browser Notice', 'Chrome provides the best voice experience on Android');\n//       } else {\n//         showNotice('info', '📱 Mobile Ready', 'Voice features optimized for mobile. Tap to start!');\n//       }\n//     }\n\n//     return true;\n//   }, [deviceInfo, showNotice]);\n\n//   const requestMicrophonePermission = useCallback(async () => {\n//     try {\n//       setConnectionStatus('connecting');\n      \n//       // Enhanced mobile permission request\n//       const constraints = {\n//         audio: {\n//           echoCancellation: true,\n//           noiseSuppression: true,\n//           autoGainControl: true,\n//           ...(deviceInfo.isMobile && {\n//             sampleRate: 16000, // Lower sample rate for mobile\n//             channelCount: 1,    // Mono for better performance\n//           })\n//         }\n//       };\n      \n//       const stream = await navigator.mediaDevices.getUserMedia(constraints);\n      \n//       // Test the stream briefly\n//       const tracks = stream.getTracks();\n//       tracks.forEach(track => track.stop());\n      \n//       setHasPermission(true);\n//       setConnectionStatus('connected');\n      \n//       if (deviceInfo.isMobile) {\n//         showNotice('success', '🎤 Ready!', 'Microphone access granted. You can now speak!');\n//       }\n      \n//       return true;\n//     } catch (error) {\n//       console.error('Microphone permission error:', error);\n//       setHasPermission(false);\n//       setConnectionStatus('disconnected');\n      \n//       if (error.name === 'NotAllowedError') {\n//         showNotice('error', '🎤 Permission Denied', \n//           deviceInfo.isMobile ? \n//           'Please allow microphone access in browser settings and refresh' :\n//           'Please allow microphone access and refresh the page'\n//         );\n//       } else if (error.name === 'NotFoundError') {\n//         showNotice('error', '🎤 No Microphone', 'No microphone found on this device');\n//       } else if (error.name === 'NotReadableError') {\n//         showNotice('error', '🎤 Hardware Error', \n//           deviceInfo.isMobile ?\n//           'Microphone is being used by another app. Please close other apps and try again' :\n//           'Microphone hardware error. Please check your microphone connection'\n//         );\n//       } else {\n//         showNotice('error', '🎤 Microphone Error', 'Unable to access microphone. Please check your browser settings');\n//       }\n      \n//       return false;\n//     }\n//   }, [showNotice, deviceInfo]);\n\n//   useEffect(() => {\n//     const checkServices = async () => {\n//       if (!checkBrowserCompatibility()) {\n//         setConnectionStatus('disconnected');\n//         return;\n//       }\n\n//       const puterReady = window.puter && window.puter.ai;\n      \n//       if (!puterReady) {\n//         setConnectionStatus('disconnected');\n//         if (retryCount < 3) {\n//           setTimeout(() => setRetryCount(prev => prev + 1), 2000);\n//         } else {\n//           showNotice('error', '🤖 AI Service', 'AI service unavailable. Please refresh the page.');\n//         }\n//         return;\n//       }\n\n//       if (hasPermission) {\n//         setConnectionStatus('connected');\n//       } else {\n//         setConnectionStatus('disconnected');\n//       }\n//     };\n    \n//     checkServices();\n//   }, [checkBrowserCompatibility, hasPermission, retryCount, showNotice]);\n\n//   const playAudioCue = useCallback((type) => {\n//     if (!window.AudioContext && !window.webkitAudioContext) return; \n    \n//     try {\n//       const audioContext = audioContextRef.current || new (window.AudioContext || window.webkitAudioContext)();\n//       if (audioContext.state === 'suspended') {\n//         audioContext.resume();\n//       }\n//       audioContextRef.current = audioContext;\n      \n//       const oscillator = audioContext.createOscillator();\n//       const gainNode = audioContext.createGain();\n      \n//       oscillator.connect(gainNode);\n//       gainNode.connect(audioContext.destination);\n      \n//       // Mobile-optimized audio cues\n//       const volume = deviceInfo.isMobile ? 0.03 : 0.05;\n//       const duration = deviceInfo.isMobile ? 0.15 : 0.2;\n      \n//       switch (type) {\n//         case 'start':\n//           oscillator.frequency.setValueAtTime(700, audioContext.currentTime);\n//           oscillator.frequency.exponentialRampToValueAtTime(1000, audioContext.currentTime + 0.08);\n//           break;\n//         case 'end':\n//           oscillator.frequency.setValueAtTime(1000, audioContext.currentTime);\n//           oscillator.frequency.exponentialRampToValueAtTime(600, audioContext.currentTime + 0.12);\n//           break;\n//         case 'error':\n//           oscillator.frequency.setValueAtTime(400, audioContext.currentTime);\n//           oscillator.frequency.exponentialRampToValueAtTime(200, audioContext.currentTime + 0.25);\n//           break;\n//         default:\n//           return;\n//       }\n      \n//       gainNode.gain.setValueAtTime(volume, audioContext.currentTime);\n//       gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + duration);\n      \n//       oscillator.start(audioContext.currentTime);\n//       oscillator.stop(audioContext.currentTime + duration);\n//     } catch (error) {\n//       console.warn('Audio cue failed:', error);\n//     }\n//   }, [deviceInfo.isMobile]);\n\n//   const extractContent = useCallback((obj, depth = 0) => {\n//     if (depth > 5) return null;\n//     if (typeof obj === 'string' && obj.trim()) {\n//       return obj.trim();\n//     }\n//     if (!obj) return null;\n    \n//     if (obj.result && obj.result.message && obj.result.message.content) {\n//       return obj.result.message.content.trim();\n//     }\n    \n//     const patterns = [\n//       'content',\n//       'message.content', \n//       'result.message.content',\n//       'choices[0].message.content',\n//       'text',\n//       'response',\n//       'answer',\n//       'reply'\n//     ];\n    \n//     for (const pattern of patterns) {\n//       try {\n//         const value = pattern.split('.').reduce((acc, key) => {\n//           if (key.includes('[')) {\n//             const [arrayKey, index] = key.split('[');\n//             const idx = parseInt(index.replace(']', ''));\n//             return acc?.[arrayKey]?.[idx];\n//           }\n//           return acc?.[key];\n//         }, obj);\n        \n//         if (value && typeof value === 'string' && value.trim()) {\n//           return value.trim();\n//         }\n//       } catch (e) {\n//         // Continue to next pattern\n//       }\n//     }\n    \n//     for (const key in obj) {\n//       if (obj.hasOwnProperty(key)) {\n//         const extracted = extractContent(obj[key], depth + 1);\n//         if (extracted) return extracted;\n//       }\n//     }\n    \n//     return null;\n//   }, []);\n\n//   const getVoiceFallback = useCallback((input) => {\n//     const voiceResponses = {\n//       greeting: \"Hey there! I'm Laxman's AI assistant. What would you like to know about him?\",\n//       identity: \"Laxman is a talented software engineer at CAMS in Chennai. He graduated from IIT Delhi with expertise in AI and full-stack development.\",\n//       projects: \"He's built some incredible AI projects! His main one is CamsLens, which processes over 80,000 documents monthly with 95% accuracy.\",\n//       skills: \"He's highly skilled in Java, Python, JavaScript, and cutting-edge AI technologies like Vertex AI and machine learning.\",\n//       contact: \"You can reach him at laxman kethavath 5 at gmail dot com, or connect with him on LinkedIn.\",\n//       location: \"He's currently working in Chennai, India, building amazing tech solutions.\",\n//       education: \"He completed his dual degree in Computer Science from IIT Delhi, from 2018 to 2024. Quite impressive!\",\n//       experience: \"He's been a software engineer at CAMS since June 2024, and was previously a teaching assistant mentoring over 300 students.\",\n//       help: \"Ask me anything about Laxman's work experience, technical projects, skills, education, or how to contact him!\",\n//       default: \"That's a great question! Could you ask it differently? I'm here to help you learn all about Laxman's impressive background!\"\n//     };\n\n//     const input_lower = input.toLowerCase();\n    \n//     if (input_lower.includes('hello') || input_lower.includes('hi') || input_lower.includes('hey') || input_lower.includes('greet')) {\n//       return voiceResponses.greeting;\n//     }\n//     if (input_lower.includes('who') || input_lower.includes('about') || input_lower.includes('tell me') || input_lower.includes('describe')) {\n//       return voiceResponses.identity;\n//     }\n//     if (input_lower.includes('project') || input_lower.includes('work') || input_lower.includes('built') || input_lower.includes('develop')) {\n//       return voiceResponses.projects;\n//     }\n//     if (input_lower.includes('skill') || input_lower.includes('technology') || input_lower.includes('programming') || input_lower.includes('technical')) {\n//       return voiceResponses.skills;\n//     }\n//     if (input_lower.includes('contact') || input_lower.includes('reach') || input_lower.includes('email') || input_lower.includes('phone')) {\n//       return voiceResponses.contact;\n//     }\n//     if (input_lower.includes('where') || input_lower.includes('location') || input_lower.includes('live') || input_lower.includes('based')) {\n//       return voiceResponses.location;\n//     }\n//     if (input_lower.includes('education') || input_lower.includes('study') || input_lower.includes('college') || input_lower.includes('university')) {\n//       return voiceResponses.education;\n//     }\n//     if (input_lower.includes('experience') || input_lower.includes('job') || input_lower.includes('career') || input_lower.includes('professional')) {\n//       return voiceResponses.experience;\n//     }\n//     if (input_lower.includes('help') || input_lower.includes('what can') || input_lower.includes('how to') || input_lower.includes('assist')) {\n//       return voiceResponses.help;\n//     }\n    \n//     return voiceResponses.default;\n//   }, []);\n\n//   const getAIResponse = useCallback(async (userInput) => {\n//     try {\n//       // Mobile-optimized prompt for shorter responses\n//       const maxWords = deviceInfo.isMobile ? 20 : 25;\n//       const contextPrompt = `You are Laxman's professional voice assistant. Respond naturally and conversationally in ${maxWords} words or less:\n\n// ${LAXMAN_PORTFOLIO_DATA}\n\n// Guidelines:\n// - Keep responses under ${maxWords} words for clear voice delivery\n// - Be conversational, engaging, and professional\n// - Use \"he\" or \"Laxman\" when referring to him\n// - If the question is unclear, ask a brief follow-up\n// - Focus on the most relevant information\n// ${deviceInfo.isMobile ? '- Use simple language for mobile voice synthesis' : ''}\n\n// User question: \"${userInput}\"\n\n// Provide a concise, conversational response:`;\n\n//       const aiResponse = await window.puter.ai.chat(contextPrompt, {\n//         model: 'gpt-4o-mini',\n//         max_tokens: deviceInfo.isMobile ? 80 : 100,\n//         temperature: 0.8\n//       });\n\n//       const extractedContent = extractContent(aiResponse);\n//       return extractedContent || getVoiceFallback(userInput);\n//     } catch (error) {\n//       console.error('AI API Error:', error);\n//       return getVoiceFallback(userInput);\n//     }\n//   }, [extractContent, getVoiceFallback, deviceInfo]);\n\n//   const stopAll = useCallback(() => {\n//     if (recognitionRef.current) {\n//       recognitionRef.current.stop();\n//       recognitionRef.current = null;\n//     }\n    \n//     window.speechSynthesis.cancel();\n    \n//     if (silenceTimeoutRef.current) {\n//       clearTimeout(silenceTimeoutRef.current);\n//       silenceTimeoutRef.current = null;\n//     }\n    \n//     setAssistantState('idle');\n//     setInterimTranscript('');\n//     isProcessingRef.current = false;\n//     finalTranscriptRef.current = '';\n//     releaseWakeLock();\n//   }, [releaseWakeLock]);\n\n//   const startListening = useCallback(async () => {\n//     if (connectionStatus !== 'connected' || assistantState === 'listening' || isProcessingRef.current) {\n//       return;\n//     }\n\n//     if (!hasPermission) {\n//       const granted = await requestMicrophonePermission();\n//       if (!granted) return;\n//     }\n\n//     const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    \n//     if (!SpeechRecognition) {\n//       showNotice('error', '🎙️ Not Supported', 'Speech recognition is not available');\n//       return;\n//     }\n\n//     const recognition = new SpeechRecognition();\n//     recognitionRef.current = recognition;\n\n//     // Mobile-optimized recognition settings\n//     recognition.continuous = false;\n//     recognition.interimResults = true;\n//     recognition.lang = 'en-US';\n//     recognition.maxAlternatives = 1;\n    \n//     // Mobile-specific optimizations\n//     if (deviceInfo.isMobile) {\n//       recognition.continuous = false; // Better for mobile\n//     }\n\n//     setAssistantState('listening');\n//     setInterimTranscript('');\n//     finalTranscriptRef.current = '';\n//     setShowHelp(false);\n    \n//     playAudioCue('start');\n//     requestWakeLock();\n\n//     recognition.onstart = () => {\n//       console.log('🎙️ Speech recognition started');\n//       if (!deviceInfo.isMobile) {\n//         recognition.continuous = true;\n//       }\n//     };\n\n//     recognition.onresult = (event) => {\n//       let interimText = '';\n\n//       for (let i = event.resultIndex; i < event.results.length; i++) {\n//         const transcript = event.results[i][0].transcript;\n        \n//         if (event.results[i].isFinal) {\n//           finalTranscriptRef.current += transcript;\n//         } else {\n//           interimText += transcript;\n//         }\n//       }\n\n//       if (interimText) {\n//         setInterimTranscript(interimText);\n//       }\n\n//       if (silenceTimeoutRef.current) {\n//         clearTimeout(silenceTimeoutRef.current);\n//       }\n\n//       // Shorter timeout for mobile\n//       const timeoutDuration = deviceInfo.isMobile ? 2000 : 2500;\n//       silenceTimeoutRef.current = setTimeout(() => {\n//         const finalResult = finalTranscriptRef.current.trim();\n//         if (finalResult && !isProcessingRef.current) {\n//           if (recognitionRef.current) {\n//             recognitionRef.current.stop();\n//           }\n//           processFinalSpeech(finalResult);\n//         }\n//       }, timeoutDuration);\n//     };\n\n//     recognition.onerror = (event) => {\n//       console.error('Speech recognition error:', event.error);\n      \n//       switch (event.error) {\n//         case 'no-speech':\n//           console.log('No speech detected');\n//           if (autoModeRef.current) {\n//             setTimeout(() => {\n//               if (autoModeRef.current && assistantState !== 'speaking') {\n//                 startListening();\n//               }\n//             }, deviceInfo.isMobile ? 1500 : 2000);\n//           } else {\n//             setAssistantState('idle');\n//             setInterimTranscript('');\n//           }\n//           return;\n        \n//         case 'network':\n//           showNotice('warning', '🌐 Network Issue', 'Retrying speech recognition...');\n//           setTimeout(() => {\n//             if (assistantState === 'listening') {\n//               startListening();\n//             }\n//           }, deviceInfo.isMobile ? 1500 : 2000);\n//           return;\n        \n//         case 'not-allowed':\n//           setHasPermission(false);\n//           showNotice('error', '🎤 Permission Denied', \n//             deviceInfo.isMobile ? \n//             'Please allow microphone access in browser settings' :\n//             'Please allow microphone access and try again'\n//           );\n//           break;\n        \n//         case 'service-not-allowed':\n//           showNotice('error', '🔒 Service Blocked', \n//             deviceInfo.isMobile ?\n//             'Speech service blocked. Check browser permissions' :\n//             'Speech service is blocked. Check browser settings'\n//           );\n//           break;\n        \n//         case 'audio-capture':\n//           showNotice('error', '🎤 Audio Error', \n//             deviceInfo.isMobile ?\n//             'Cannot access microphone. Close other apps using microphone' :\n//             'Cannot capture audio. Check microphone connection'\n//           );\n//           break;\n        \n//         default:\n//           console.error('Unhandled recognition error:', event.error);\n//           showNotice('warning', '⚠️ Recognition Error', 'Speech recognition encountered an error');\n//       }\n      \n//       playAudioCue('error');\n//       setAssistantState('idle');\n//       setInterimTranscript('');\n//       isProcessingRef.current = false;\n//       releaseWakeLock();\n//     };\n\n//     recognition.onend = () => {\n//       console.log('🎙️ Speech recognition ended');\n//       const remainingText = finalTranscriptRef.current.trim();\n//       if (remainingText && !isProcessingRef.current && assistantState === 'listening') {\n//         processFinalSpeech(remainingText);\n//       } else if (!isProcessingRef.current) {\n//         setAssistantState('idle');\n//         setInterimTranscript('');\n//         releaseWakeLock();\n//       }\n//     };\n\n//     try {\n//       recognition.start();\n//     } catch (error) {\n//       console.error('Failed to start recognition:', error);\n//       setAssistantState('idle');\n//       playAudioCue('error');\n//       showNotice('error', '🎤 Start Failed', 'Could not start speech recognition');\n//       releaseWakeLock();\n//     }\n//   }, [connectionStatus, assistantState, hasPermission, requestMicrophonePermission, playAudioCue, showNotice, deviceInfo, requestWakeLock, releaseWakeLock]);\n\n//   const speakResponse = useCallback((text) => {\n//     if (!text || !text.trim()) {\n//       setAssistantState('idle');\n//       return;\n//     }\n    \n//     if (!('speechSynthesis' in window)) {\n//       setAssistantState('idle');\n//       showNotice('error', '🔊 Not Supported', 'Speech synthesis is not available');\n//       return;\n//     }\n\n//     const cleanText = text.trim();\n//     window.speechSynthesis.cancel();\n\n//     setTimeout(() => {\n//       const utterance = new SpeechSynthesisUtterance(cleanText);\n//       synthRef.current = utterance;\n\n//       // Mobile-optimized speech settings\n//       utterance.rate = deviceInfo.isMobile ? 0.8 : 0.85;\n//       utterance.pitch = deviceInfo.isMobile ? 0.9 : 1.0;\n//       utterance.volume = deviceInfo.isMobile ? 0.9 : 0.8;\n//       utterance.lang = 'en-US';\n\n//       utterance.onend = () => {\n//         console.log('🔊 Speech synthesis ended');\n//         setAssistantState('idle');\n        \n//         if (autoModeRef.current) {\n//           const delay = deviceInfo.isMobile ? 1000 : 1500;\n//           setTimeout(() => {\n//             if (autoModeRef.current && assistantState !== 'listening') {\n//               startListening();\n//             }\n//           }, delay);\n//         }\n//       };\n\n//       utterance.onerror = (event) => {\n//         console.error('Speech synthesis error:', event.error);\n//         setAssistantState('idle');\n//         showNotice('error', '🔊 Speech Error', 'Could not play voice response');\n//       };\n\n//       const setVoice = () => {\n//         const voices = window.speechSynthesis.getVoices();\n//         if (voices.length > 0) {\n//           let preferredVoice;\n          \n//           if (deviceInfo.isMobile) {\n//             // Mobile-optimized voice selection\n//             preferredVoice = voices.find(voice => \n//               voice.lang.includes('en-US') && (\n//                 voice.name.includes('Google') ||\n//                 voice.name.includes('Samsung') ||\n//                 voice.name.includes('Default')\n//               )\n//             ) || voices.find(voice => voice.lang.includes('en-US')) || voices[0];\n//           } else {\n//             // Desktop voice selection\n//             preferredVoice = voices.find(voice => \n//               voice.lang.includes('en-US') && voice.name.includes('Google')\n//             ) || voices.find(voice => \n//               voice.lang.includes('en-US')\n//             ) || voices.find(voice => \n//               voice.lang.includes('en')\n//             ) || voices[0];\n//           }\n          \n//           if (preferredVoice) {\n//             utterance.voice = preferredVoice;\n//           }\n//         }\n//       };\n\n//       if (window.speechSynthesis.getVoices().length > 0) {\n//         setVoice();\n//         window.speechSynthesis.speak(utterance);\n//       } else {\n//         window.speechSynthesis.onvoiceschanged = () => {\n//           setVoice();\n//           window.speechSynthesis.speak(utterance);\n//         };\n        \n//         // Fallback for mobile\n//         setTimeout(() => {\n//           if (window.speechSynthesis.speaking === false) {\n//             window.speechSynthesis.speak(utterance);\n//           }\n//         }, deviceInfo.isMobile ? 300 : 500);\n//       }\n//     }, deviceInfo.isMobile ? 100 : 200);\n//   }, [startListening, assistantState, showNotice, deviceInfo]);\n\n//   const processFinalSpeech = useCallback(async (finalText) => {\n//     if (finalText.length < 2 || isProcessingRef.current) return;\n    \n//     isProcessingRef.current = true;\n//     setInterimTranscript('');\n//     setShowHelp(false);\n    \n//     playAudioCue('end');\n//     setAssistantState('thinking');\n    \n//     try {\n//       console.log('🧠 Processing:', finalText);\n//       const aiResponse = await getAIResponse(finalText);\n//       console.log('🤖 Response:', aiResponse);\n      \n//       setAssistantState('speaking');\n      \n//       if (aiResponse && aiResponse.trim()) {\n//         speakResponse(aiResponse);\n//       } else {\n//         console.error('No valid response to speak');\n//         setAssistantState('idle');\n//       }\n//     } catch (error) {\n//       console.error('Error processing speech:', error);\n//       setAssistantState('idle');\n//       showNotice('error', '🧠 Processing Error', 'Could not process your request');\n//     }\n    \n//     isProcessingRef.current = false;\n//   }, [getAIResponse, playAudioCue, speakResponse, showNotice]);\n\n//   const toggleAutoMode = useCallback(() => {\n//     setIsAutoMode(prev => {\n//       const newState = !prev;\n      \n//       if (newState) {\n//         showNotice('info', '🔄 Auto Mode On', 'I will keep listening after each response');\n//         if (assistantState === 'idle') {\n//           setTimeout(() => startListening(), deviceInfo.isMobile ? 800 : 1000);\n//         }\n//       } else {\n//         showNotice('info', '⏹️ Auto Mode Off', 'Switched to one-time question mode');\n//         stopAll();\n//       }\n//       return newState;\n//     });\n//   }, [assistantState, startListening, stopAll, showNotice, deviceInfo]);\n\n//   const testTTS = useCallback(() => {\n//     const testText = deviceInfo.isMobile ? \n//       \"Hello! Voice is working great on mobile!\" : \n//       \"Hello! I'm Laxman's AI assistant. Voice output is working perfectly!\";\n//     setAssistantState('speaking');\n//     speakResponse(testText);\n//   }, [speakResponse, deviceInfo]);\n\n//   const closeChat = useCallback(() => {\n//     stopAll();\n//     setIsClosing(true);\n//     setTimeout(() => {\n//       setIsVisible(false);\n//       if (onClose) {\n//         onClose();\n//       }\n//     }, 400);\n//   }, [stopAll, onClose]);\n\n//   const getVoiceStatus = () => {\n//     switch (assistantState) {\n//       case 'listening':\n//         return {\n//           title: \"I'm Listening...\",\n//           subtitle: deviceInfo.isMobile ? \"Speak clearly!\" : \"Speak clearly, I'm all ears!\"\n//         };\n//       case 'thinking':\n//         return {\n//           title: \"Processing...\",\n//           subtitle: deviceInfo.isMobile ? \"Finding answer...\" : \"Finding the perfect answer...\"\n//         };\n//       case 'speaking':\n//         return {\n//           title: \"Speaking...\",\n//           subtitle: deviceInfo.isMobile ? \"Here's what I found\" : \"Here's what I found for you\"\n//         };\n//       default:\n//         return {\n//           title: \"Laxman's AI Assistant\",\n//           subtitle: connectionStatus === 'connected' \n//             ? (deviceInfo.isMobile ? \"Tap to start chatting!\" : \"Tap the avatar to start chatting!\")\n//             : connectionStatus === 'connecting'\n//             ? \"Setting up voice features...\"\n//             : (deviceInfo.isMobile ? \"Tap to enable voice\" : \"Click to enable voice features\")\n//         };\n//     }\n//   };\n\n//   const statusText = getVoiceStatus();\n//   const isDisabled = connectionStatus !== 'connected' || !hasPermission;\n\n//   if (!isVisible) return null;\n\n//   return (\n//     <>\n//       {/* Enhanced Browser Notice with Mobile Support */}\n//       {notice && (\n//         <BrowserNotice type={notice.type} show={notice.show} isMobile={deviceInfo.isMobile}>\n//           <div className=\"notice-title\">\n//             {notice.title}\n//           </div>\n//           <div className=\"notice-content\">\n//             {notice.content}\n//           </div>\n//         </BrowserNotice>\n//       )}\n\n//       {/* Enhanced Voice Assistant Container with Mobile Optimization */}\n//       <VoiceContainer \n//         state={assistantState} \n//         isClosing={isClosing} \n//         isMobile={deviceInfo.isMobile}\n//         isKeyboardOpen={isKeyboardOpen}\n//       >\n//         <ConnectionIndicator status={connectionStatus} isMobile={deviceInfo.isMobile} />\n//         <CloseButton onClick={closeChat} isMobile={deviceInfo.isMobile}>×</CloseButton>\n\n//         <VoiceAvatar \n//           state={assistantState}\n//           disabled={isDisabled}\n//           isMobile={deviceInfo.isMobile}\n//           onClick={async () => {\n//             if (isDisabled) {\n//               if (!hasPermission) {\n//                 await requestMicrophonePermission();\n//               }\n//               return;\n//             }\n\n//             if (assistantState === 'idle') {\n//               // Initialize speech synthesis on user interaction\n//               if (!window.speechSynthesis.speaking) {\n//                 const testUtterance = new SpeechSynthesisUtterance('');\n//                 testUtterance.volume = 0;\n//                 window.speechSynthesis.speak(testUtterance);\n//               }\n//               startListening();\n//             } else {\n//               stopAll();\n//             }\n//           }}\n//         >\n//           {isDisabled ? '🔒' :\n//            assistantState === 'listening' ? '🎙️' : \n//            assistantState === 'thinking' ? '🧠' : \n//            assistantState === 'speaking' ? '🗣️' : '🤖'}\n          \n//           {/* Attractive wave rings for idle state */}\n//           {assistantState === 'idle' && !isDisabled && (\n//             <>\n//               <WaveRing delay={0} style={{ \n//                 width: deviceInfo.isMobile ? '80px' : '90px', \n//                 height: deviceInfo.isMobile ? '80px' : '90px' \n//               }} />\n//               <WaveRing delay={0.6} style={{ \n//                 width: deviceInfo.isMobile ? '95px' : '105px', \n//                 height: deviceInfo.isMobile ? '95px' : '105px' \n//               }} />\n//               <WaveRing delay={1.2} style={{ \n//                 width: deviceInfo.isMobile ? '110px' : '120px', \n//                 height: deviceInfo.isMobile ? '110px' : '120px' \n//               }} />\n//             </>\n//           )}\n//         </VoiceAvatar>\n\n//         <VoiceStatus isMobile={deviceInfo.isMobile}>\n//           <div className=\"status-title\">{statusText.title}</div>\n//           <div className=\"status-subtitle\">{statusText.subtitle}</div>\n//         </VoiceStatus>\n\n//         <VoiceWaves state={assistantState} isMobile={deviceInfo.isMobile}>\n//           {[...Array(deviceInfo.isMobile ? 5 : 7)].map((_, i) => (\n//             <div key={i} className=\"wave\" />\n//           ))}\n//         </VoiceWaves>\n\n//         <InterimText show={!!interimTranscript} isMobile={deviceInfo.isMobile}>\n//           \"{interimTranscript}\"\n//         </InterimText>\n\n//         <VoiceControls isMobile={deviceInfo.isMobile}>\n//           <ButtonRow isMobile={deviceInfo.isMobile}>\n//             <div style={{ textAlign: 'center' }}>\n//               <VoiceButton\n//                 onClick={assistantState === 'idle' ? startListening : stopAll}\n//                 disabled={isDisabled}\n//                 isMobile={deviceInfo.isMobile}\n//                 title={assistantState === 'idle' ? 'Ask one question' : 'Stop current action'}\n//               >\n//                 {assistantState === 'idle' ? '🎤' : '⏹️'}\n//               </VoiceButton>\n//               <ButtonLabel disabled={isDisabled} isMobile={deviceInfo.isMobile}>\n//                 {deviceInfo.isMobile ? 'One Time' : 'One Time\\nQuestion'}\n//               </ButtonLabel>\n//             </div>\n\n//             <div style={{ textAlign: 'center' }}>\n//               <VoiceButton\n//                 active={isAutoMode}\n//                 onClick={toggleAutoMode}\n//                 disabled={isDisabled}\n//                 isMobile={deviceInfo.isMobile}\n//                 title=\"Toggle continuous conversation mode\"\n//               >\n//                 🔄\n//               </VoiceButton>\n//               <ButtonLabel disabled={isDisabled} isMobile={deviceInfo.isMobile}>\n//                 {deviceInfo.isMobile ? 'Keep On' : 'Keep\\nListening'}\n//               </ButtonLabel>\n//             </div>\n\n//             <div style={{ textAlign: 'center' }}>\n//               <VoiceButton\n//                 onClick={testTTS}\n//                 disabled={!('speechSynthesis' in window)}\n//                 isMobile={deviceInfo.isMobile}\n//                 title=\"Test voice output\"\n//               >\n//                 🔊\n//               </VoiceButton>\n//               <ButtonLabel disabled={!('speechSynthesis' in window)} isMobile={deviceInfo.isMobile}>\n//                 {deviceInfo.isMobile ? 'Test' : 'Test\\nVoice'}\n//               </ButtonLabel>\n//             </div>\n//           </ButtonRow>\n//         </VoiceControls>\n\n//         <HelpHint \n//           show={showHelp && assistantState === 'idle' && connectionStatus === 'connected'} \n//           isMobile={deviceInfo.isMobile}\n//         > \n//           💬 {deviceInfo.isMobile ? \n//             'Say \"Hello\" or ask about Laxman!' : \n//             'Say \"Hello\" or ask about Laxman\\'s experience, projects, or skills!'\n//           }\n//         </HelpHint>\n//       </VoiceContainer>\n//     </>\n//   );\n// };\n\n// const Siri = ({ onClose }) => {\n//   return <VoiceAssistant onClose={onClose} />;\n// };\n\n// export default Siri;\n\n\n\n// Enhanced  3d Voice Assistant - Fixed Version\n\nimport React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\nimport styled, { keyframes, css } from 'styled-components';\n\n// Enhanced portfolio data\nconst LAXMAN_PORTFOLIO_DATA = `\nK LAXMAN - SOFTWARE DEVELOPMENT ENGINEER & AI SPECIALIST\n\n=== PROFESSIONAL SUMMARY ===\nSoftware Development Engineer at Computer Age Management Services (CAMS), Chennai (June 2024 - Present)\nIIT Delhi Alumni (2018-2024) - B.Tech + M.Tech in Computer Science & Engineering\nSpecialized in AI/ML, Financial Technology & Full Stack Development\nTeaching Assistant with 300+ students mentored | Enterprise AI Platform Developer\n\n=== CURRENT ROLE ===\nSoftware Development Engineer at Computer Age Management Services (CAMS)\n- Developed CamsLens Enterprise GenAI platform processing 80,000+ documents monthly with 95% accuracy\n- Implemented real-time RSS feed ingestion reducing manual monitoring by 80%\n- Designed AI-powered query APIs with 60% response time improvement\n- Built Ranking Chunks Algorithm for Vertex AI datastore optimization\n- Technologies: Vertex AI Gemini-flash 2.0, Agent Builder, Google Cloud Run, BigQuery\n- Location: Chennai, Tamil Nadu\n- Duration: June 2024 - Present\n\n=== MAJOR PROJECTS ===\n\n1.  ENTERPRISE GENAI PLATFORM (2024 - Present)\n   - Enterprise AI platform for CAMS processing 80,000+ documents monthly\n   - Achieved 95% accuracy with CMEK-compliant storage\n   - Implemented real-time RSS feed ingestion and ranking algorithms\n   - Technologies: Vertex AI Gemini-flash 2.0, Agent Builder, Google Cloud Run, BigQuery\n\n2. AI-POWERED FINANCIAL EMAIL AUTOMATION SYSTEM (2025)\n   - FastAPI microservice using Large Language Models for email classification\n   - Zero-shot learning with 95% accuracy for PAN, ARN, date extraction\n   - Processes 1,000+ emails daily, reducing manual processing by 80%\n   - Technologies: Python, FastAPI, vLLM, Docker, LLMs\n\n3. STOCK EXCHANGE PLATFORM (2024)\n   - Full-stack trading simulation supporting 100+ concurrent users\n   - JWT authentication, role-based access control (Admin/User)\n   - Sub-second response times for critical operations\n   - Technologies: Java Spring Boot, H2 DB, Spring Security\n\n4. BORDERLESS TABLE RECOGNITION & ACCESSIBILITY (2023)\n   - PDF table detection system with 30% accuracy improvement over CascadeTabNet\n   - SVM classifier achieving 90% accuracy for table cell classification\n   - Docker containerized solution for RAVI framework\n   - Technologies: Python, Layout Parser, MTL-TabNet, OpenCV, SVM\n\n5. RAVI - READING ASSISTANT FOR VISUALLY IMPAIRED (2022)\n   - STEM document conversion toolchain (PDFs, EPUBs to accessible formats)\n   - Flask web application for crowdsourced ALT TEXT generation\n   - Improved accessibility for 500+ STEM documents\n   - Technologies: Python, Flask, HTML/CSS, JavaScript\n\n6. DRIVER DROWSINESS DETECTION SYSTEM (2021)\n   - Real-time computer vision system with 90%+ detection accuracy\n   - Facial landmark detection and eye aspect ratio calculation\n   - 30 FPS performance optimized for embedded systems\n   - Technologies: Python, OpenCV, Dlib\n\n7. ENHANCED LEARNING MANAGEMENT SYSTEM (2022)\n   - Full-stack LMS for 1,000+ users during Eamvey Technologies internship\n   - Secure payment gateway handling 500+ monthly transactions\n   - 40% performance improvement through optimization\n   - Technologies: MERN Stack (MongoDB, Express.js, React, Node.js)\n\n8. NEXGEN GAMING E-COMMERCE PLATFORM (2024)\n   - Full-stack platform selling gaming consoles and accessories\n   - Features order management, delivery tracking, and smooth UI/UX\n   - Technologies: React, Node.js, MongoDB Atlas, Express, TailwindCSS, Firebase, Vercel\n\n9. IPO MONITORING & NOTIFIER (2023)\n   - Real-time IPO Grey Market Premium monitoring with instant notifications\n   - Automates tracking and reporting for higher gains\n   - Technologies: Python, OpenCV, OCR, PDF Processing, Excel Automation\n\n10. RSS FEED DOCUMENT DOWNLOADER (2023)\n    - Automated online download of documents from RSS feeds\n    - Converts feeds into structured PDFs with Excel outputs\n    - Technologies: Python, OpenCV, OCR, PDF Processing\n\n11. MSG-TO-PDF CONVERTER FOR FINANCIAL EMAILS (2023)\n    - Converts 20,000+ .MSG financial emails into structured PDFs\n    - Streamlined workflow reduces manual effort\n    - Technologies: Python, WeasyPrint, Streamlit\n\n12. PDF FOOTNOTES PROCESSOR (2023)\n    - Maps footnotes and references from PDFs into Excel sheets\n    - Optimized for large 1,000+ page financial documents\n    - Technologies: Python, OpenCV, OCR, PDF Processing\n\n13. FIELD EXTRACTION OCR FROM IMAGE (2023)\n    - Extracts fields like PAN and Folio numbers from images automatically\n    - Technologies: Python, OpenCV, DocTR, Streamlit\n\n14. LIVE SNAPSHOT & RESTORE FOR VMs (2022)\n    - KVM-based snapshot and restore service for running VMs\n    - Technologies: Rust, HTML/CSS, VMware\n\n15. WEBPAGE USING JS (2022)\n    - Fully customizable portfolio template\n    - Technologies: ReactJS, CSS\n\n16. AIRLINE DBMS PROTOTYPE (2022)\n    - Airline booking system simulation with Flask, PostgreSQL\n    - Frontend using HTML/CSS\n    - Technologies: Flask, PostgreSQL, HTML/CSS, Kaggle datasets\n\n17. LARGE FILE DOWNLOAD (2021)\n    - Socket programming project implementing BitTorrent-style transfers\n    - Efficient TCP/IP data handling with Wireshark monitoring\n    - Technologies: Python, Socket Programming, TCP/IP, Wireshark\n\n18. SIMPLE WEBPAGE WITH PAYMENT & DASHBOARD (2022)\n    - Integrated payment gateway and admin dashboard\n    - Technologies: HTML, CSS, PayPal, GitHub Deployment\n\n19. BIG NUMBER ARITHMETIC OPERATION (2021)\n    - Arithmetic handling for extremely large numbers\n    - Technologies: C, Node.js\n\n20. SIMULATION OF LIFT CONTROLLER SYSTEM (2021)\n    - Designed logic for three-floor lift operation\n    - Technologies: VHDL, Vivado, API, Integrated Circuit\n\n21. MULTI-AGENT SEARCH MODELING IN PACMAN (2021)\n    - Decision-making modeling for PACMAN game\n    - Technologies: Python, Search Algorithms, ReactJS\n\n22. VIRTUAL INTERNSHIP - GOLDMANSACHS (2022)\n    - Finance-focused virtual internship\n    - Technologies: Java, GraphQL, React, Apollo Client\n\n23. VIRTUAL INTERNSHIP - WALMART (2022)\n    - Advanced software engineering virtual experience\n    - Technologies: Flutter, Dart, React, Node.js, PostgreSQL\n\n24. VIRTUAL INTERNSHIP - JPMORGAN CHASE (2022)\n    - Projects including Metamask integration and Twitter API usage\n    - Technologies: React, Node.js, MongoDB\n\n25. VIRTUAL INTERNSHIP - HP (2022)\n    - Virtual internship with Next.js and deployment on Vercel\n    - Technologies: Next.js, Node.js, Supabase, Razorpay, Vercel\n\n=== EDUCATION ===\nIndian Institute of Technology Delhi (July 2018 - May 2024)\n- Dual Degree: Bachelor's + Master's in Computer Science & Engineering\n- Location: New Delhi, India\n- Specialized in AI/ML, Computer Vision, and NLP\n- Teaching Assistant (Fall 2019 - Spring 2021): Mentored 300+ undergraduate students\n- Courses: Data Structures, Introduction to Programming, Advanced CS concepts\n\n=== TECHNICAL SKILLS ===\nProgramming Languages:\n- Java: Spring Boot, Spring Security, Maven\n- Python: Flask, FastAPI, OpenCV, Scikit-learn, Pandas, NumPy\n- JavaScript: Node.js, React, ES6+\n\nFull Stack Development:\n- Frontend: React.js, HTML5, CSS3, TailwindCSS, JavaScript\n- Backend: Node.js, Express.js, Python Flask/FastAPI, Java Spring Boot\n- Databases: MySQL, PostgreSQL, MongoDB, H2, Google BigQuery\n- Web Technologies: REST APIs, GraphQL, WebSockets\n\nAI/ML & Data Science:\n- Frameworks: PyTorch, TensorFlow, Vertex AI Gen AI\n- Computer Vision: OpenCV, Layout Parser, MTL-TabNet, Dlib\n- NLP: spaCy, Large Language Models, Few-shot Learning\n- Specialized: Document Processing, Image Recognition, Facial Landmark Detection\n\nCloud & DevOps:\n- Google Cloud: Cloud Run, GCS, Vertex AI, BigQuery\n- AWS: Basic certification and services\n- Azure: Basic services\n- Containerization: Docker, Kubernetes\n- CI/CD: GitHub Actions, Jenkins, Git\n- Tools: Maven, npm, Postman, GCP SDK\n\n=== CONTACT ===\nEmail: [Laxmankethavath5@gmail.com](mailto:Laxmankethavath5@gmail.com)\nPhone: +91-9000063740\nLinkedIn: [Professional Profile](https://linkedin.com/in/k-laxman)\nGitHub: [Project Repository](https://github.com/Laxman824)\nPortfolio: [Personal Website](https://k-laxman-portfolio.com)\nLocation: Chennai, Tamil Nadu, India\n`;\n\n// ============= ALL KEYFRAMES DEFINED FIRST =============\nconst ambientPulse = keyframes`\n  0%, 100% { \n    transform: scale(1); \n    opacity: 0.9;\n  }\n  50% {\n    transform: scale(1.05);\n    opacity: 1;\n  }\n`;\n\nconst float  = keyframes`\n  0%, 100% { \n    transform: translateY(0px) rotateX(0deg) rotateY(0deg);\n  }\n  25% {\n    transform: translateY(0px) rotateX(0deg) rotateY(0deg);\n  }\n  50% {\n    transform: translateY(0px) rotateX(0deg) rotateY(0deg);\n  }\n  75% {\n    transform: translateY(0px) rotateX(0deg) rotateY(0deg);\n  }\n`;\n\nconst holographicGlow = keyframes`\n  0%, 100% { \n    box-shadow: \n      0 0 20px rgba(79, 70, 229, 0.3),\n      0 0 40px rgba(147, 51, 234, 0.2),\n      0 0 60px rgba(79, 70, 229, 0.1),\n      inset 0 0 20px rgba(147, 51, 234, 0.05);\n    filter: hue-rotate(0deg);\n  }\n  33% {\n    box-shadow: \n      0 0 25px rgba(34, 197, 94, 0.3),\n      0 0 50px rgba(34, 197, 94, 0.2),\n      0 0 75px rgba(34, 197, 94, 0.1),\n      inset 0 0 25px rgba(34, 197, 94, 0.05);\n    filter: hue-rotate(120deg);\n  }\n  66% {\n    box-shadow: \n      0 0 25px rgba(239, 68, 68, 0.3),\n      0 0 50px rgba(239, 68, 68, 0.2),\n      0 0 75px rgba(239, 68, 68, 0.1),\n      inset 0 0 25px rgba(239, 68, 68, 0.05);\n    filter: hue-rotate(240deg);\n  }\n`;\n\nconst particleFloat = keyframes`\n  0% {\n    transform: translateY(100vh) rotate(0deg);\n    opacity: 0;\n  }\n  10% {\n    opacity: 0.6; // REDUCED from 1 to 0.6\n  }\n  90% {\n    opacity: 0.6; // REDUCED from 1 to 0.6\n  }\n  100% {\n    transform: translateY(-100px) rotate(180deg); // REDUCED rotation from 360deg to 180deg\n    opacity: 0;\n  }\n`;\n\nconst orbitalRotation = keyframes`\n  0% {\n    transform: rotateZ(0deg) translateX(60px) rotateZ(0deg);\n  }\n  100% {\n    transform: rotateZ(360deg) translateX(60px) rotateZ(-360deg);\n  }\n`;\n\nconst neuralPulse = keyframes`\n  0%, 100% {\n    transform: scale(1);\n    opacity: 0.8;\n  }\n  25% {\n    transform: scale(1.2);\n    opacity: 1;\n  }\n  50% {\n    transform: scale(0.8);\n    opacity: 0.6;\n  }\n  75% {\n    transform: scale(1.1);\n    opacity: 0.9;\n  }\n`;\n\nconst voiceVisualization = keyframes`\n  0% {\n    transform: scaleY(0.3) rotateX(0deg);\n    opacity: 0.7;\n  }\n  50% {\n    transform: scaleY(1.8) rotateX(180deg);\n    opacity: 1;\n  }\n  100% {\n    transform: scaleY(0.3) rotateX(360deg);\n    opacity: 0.7;\n  }\n`;\n\nconst listeningWaves  = keyframes`\n  0%, 100% {\n    transform: scale(1) rotateY(0deg);\n    box-shadow: \n      0 0 20px rgba(34, 197, 94, 0.6),\n      0 0 40px rgba(34, 197, 94, 0.4);\n  }\n  50% {\n    transform: scale(1.3) rotateY(10deg);\n    box-shadow: \n      0 0 30px rgba(34, 197, 94, 0.8),\n      0 0 60px rgba(34, 197, 94, 0.6);\n  }\n`;\n\nconst speakingPulse  = keyframes`\n  0%, 100% {\n    transform: scale(1) rotateX(0deg);\n    box-shadow: \n      0 0 25px rgba(239, 68, 68, 0.6),\n      0 0 50px rgba(239, 68, 68, 0.4);\n  }\n  25% {\n    transform: scale(1.1) rotateX(5deg);\n    box-shadow: \n      0 0 35px rgba(239, 68, 68, 0.8),\n      0 0 70px rgba(239, 68, 68, 0.6);\n  }\n  50% {\n    transform: scale(1.2) rotateX(0deg);\n    box-shadow: \n      0 0 45px rgba(239, 68, 68, 1),\n      0 0 90px rgba(239, 68, 68, 0.8);\n  }\n  75% {\n    transform: scale(1.1) rotateX(-5deg);\n    box-shadow: \n      0 0 35px rgba(239, 68, 68, 0.8),\n      0 0 70px rgba(239, 68, 68, 0.6);\n  }\n`;\n\nconst thinkingMatrix = keyframes`\n  0% {\n    transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg);\n    filter: hue-rotate(0deg);\n  }\n  25% {\n    transform: rotateX(10deg) rotateY(0deg) rotateZ(0deg);\n    filter: hue-rotate(90deg);\n  }\n  50% {\n    transform: rotateX(10deg) rotateY(15deg) rotateZ(0deg);\n    filter: hue-rotate(180deg);\n  }\n  75% {\n    transform: rotateX(10deg) rotateY(15deg) rotateZ(10deg);\n    filter: hue-rotate(270deg);\n  }\n  100% {\n    transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg);\n    filter: hue-rotate(360deg);\n  }\n`;\n\nconst slideIn  = keyframes`\n  from {\n    transform: translateY(100%) rotateX(-90deg);\n    opacity: 0;\n  }\n  to {\n    transform: translateY(0) rotateX(0deg);\n    opacity: 1;\n  }\n`;\n\nconst slideOut  = keyframes`\n  from {\n    transform: translateY(0) rotateX(0deg);\n    opacity: 1;\n  }\n  to {\n    transform: translateY(100%) rotateX(90deg);\n    opacity: 0;\n  }\n`;\n\nconst spin = keyframes`\n  from { transform: rotate(0deg); }\n  to { transform: rotate(360deg); }\n`;\n\nconst bounceIn = keyframes`\n  0% {\n    transform: scale(0.3) rotateX(-30deg);\n    opacity: 0;\n  }\n  50% {\n    transform: scale(1.05) rotateX(15deg);\n  }\n  70% {\n    transform: scale(0.9) rotateX(-5deg);\n  }\n  100% {\n    transform: scale(1) rotateX(0deg);\n    opacity: 1;\n  }\n`;\n\nconst fadeOut = keyframes`\n  from { \n    opacity: 1; \n    transform: translateY(0) rotateX(0deg); \n  }\n  to { \n    opacity: 0; \n    transform: translateY(-15px) rotateX(-10deg); \n  }\n`;\n\nconst waveHeightAnimation = keyframes`\n  0%, 100% { height: 3px; }\n  50% { height: 24px; }\n`;\n\nconst neuralConnectionPulse = keyframes`\n  0%, 100% { opacity: 0.2; }\n  50% { opacity: 0.8; }\n`;\n\n// ============= STYLED COMPONENTS =============\nconst VoiceContainer  = styled.div`\n  position: fixed;\n  bottom: ${props => props.isMobile ? (props.isKeyboardOpen ? '10px' : '80px') : '100px'};\n  left: ${props => props.isMobile ? '10px' : '20px'};\n  width: ${props => props.isMobile ? 'calc(100vw - 20px)' : '320px'};\n  max-width: ${props => props.isMobile ? '350px' : '320px'};\n  \n  background: linear-gradient(145deg, \n    rgba(11, 11, 22, 0.95) 0%, \n    rgba(20, 20, 32, 0.98) 25%,\n    rgba(15, 15, 35, 0.96) 50%,\n    rgba(20, 20, 32, 0.98) 75%,\n    rgba(10, 10, 25, 0.95) 100%);\n  border-radius: ${props => props.isMobile ? '25px' : '30px'};\n  padding: ${props => props.isMobile ? '25px' : '30px'};\n  \n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  overflow: visible;\n  \n  box-shadow: \n    0 ${props => props.isMobile ? '15px' : '20px'} ${props => props.isMobile ? '30px' : '40px'} rgba(0, 0, 0, 0.4),\n    0 ${props => props.isMobile ? '6px' : '10px'} ${props => props.isMobile ? '15px' : '20px'} rgba(0, 0, 0, 0.25),\n    inset 0 1px 3px rgba(255, 255, 255, 0.08),\n    inset 0 -1px 3px rgba(0, 0, 0, 0.2),\n    0 0 12px rgba(79, 70, 229, 0.05);\n    \n  z-index: 1000;\n  animation: ${props => props.isClosing ? slideOut  : slideIn } 0.6s cubic-bezier(0.34, 1.56, 0.64, 1);\n  backdrop-filter: blur(25px) saturate(1.2);\n  border: 1px solid rgba(255, 255, 255, 0.08);\n  \n  perspective: 1000px;\n  transform-style: preserve-3d;\n  \n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  user-select: none;\n  -webkit-tap-highlight-color: transparent;\n  -webkit-overflow-scrolling: touch;\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: -2px;\n    left: -2px;\n    right: -2px;\n    bottom: -2px;\n    background: linear-gradient(45deg, \n      rgba(79, 70, 229, 0.05) 0%,\n      rgba(147, 51, 234, 0.05) 25%,\n      rgba(34, 197, 94, 0.05) 50%,\n      rgba(239, 68, 68, 0.05) 75%,\n      rgba(79, 70, 229, 0.05) 100%);\n    border-radius: inherit;\n    animation: ${holographicGlow} 12s linear infinite;\n    z-index: -1;\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: \n      radial-gradient(circle at 20% 20%, rgba(79, 70, 229, 0.02) 0%, transparent 50%),\n      radial-gradient(circle at 80% 80%, rgba(147, 51, 234, 0.02) 0%, transparent 50%),\n      radial-gradient(circle at 40% 70%, rgba(34, 197, 94, 0.015) 0%, transparent 50%);\n    border-radius: inherit;\n    pointer-events: none;\n    animation: ${neuralPulse} 10s ease infinite;\n  }\n`;\n\n\nconst ParticleField = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  pointer-events: none;\n  overflow: hidden;\n  border-radius: inherit;\n  z-index: -1;\n`;\n\nconst Particle = styled.div`\n  position: absolute;\n  width: ${props => props.size || 3}px;\n  height: ${props => props.size || 3}px;\n  background: ${props => props.color || 'rgba(79, 70, 229, 0.6)'};\n  border-radius: 50%;\n  animation: ${particleFloat} ${props => props.duration || 15}s linear infinite;\n  animation-delay: ${props => props.delay || 0}s;\n  left: ${props => props.left || 0}%;\n  box-shadow: 0 0 10px currentColor;\n  opacity: 0;\n`;\n\nconst VoiceAvatar  = styled.div`\n  width: ${props => props.isMobile ? '90px' : '100px'};\n  height: ${props => props.isMobile ? '90px' : '100px'};\n  border-radius: 50%;\n  \n  background: ${props => {\n    if (props.state === 'listening') return `\n      linear-gradient(135deg, #22C55E 0%, #16A34A 25%, #1580  50%, #22C55E 75%, #16A34A 100%),\n      conic-gradient(from 0deg, #22C55E, #16A34A, #1580 , #22C55E)\n    `;\n    if (props.state === 'speaking') return `\n      linear-gradient(135deg, #EF4444 0%, #DC2626 25%, #B91C1C 50%, #EF4444 75%, #DC2626 100%),\n      conic-gradient(from 0deg, #EF4444, #DC2626, #B91C1C, #EF4444)\n    `;\n    if (props.state === 'thinking') return `\n      linear-gradient(135deg, #F59E0B 0%, #D97706 25%, #B45309 50%, #F59E0B 75%, #D97706 100%),\n      conic-gradient(from 0deg, #F59E0B, #D97706, #B45309, #F59E0B)\n    `;\n    if (props.disabled) return `\n      linear-gradient(135deg, #6B7280 0%, #4B5563 50%, #374151 100%)\n    `;\n    return `\n      linear-gradient(135deg, #4F46E5 0%, #3730A3 25%, #312E81 50%, #4F46E5 75%, #3730A3 100%),\n      conic-gradient(from 0deg, #4F46E5, #3730A3, #312E81, #4F46E5)\n    `;\n  }};\n  \n  background-blend-mode: ${props => props.state !== 'idle' ? 'multiply' : 'normal'};\n  \n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: ${props => props.isMobile ? '32px' : '36px'};\n  cursor: ${props => props.disabled ? 'not-allowed' : 'pointer'};\n  transition: all 0.6s cubic-bezier(0.34, 1.56, 0.64, 1);\n  position: relative;\n  margin-bottom: ${props => props.isMobile ? '20px' : '25px'};\n  opacity: ${props => props.disabled ? 0.5 : 1};\n  \n  transform-style: preserve- ;\n  \n  min-width: ${props => props.isMobile ? '90px' : '100px'};\n  min-height: ${props => props.isMobile ? '90px' : '100px'};\n  -webkit-tap-highlight-color: transparent;\n  \n  animation: ${props => {\n    if (props.disabled) return 'none';\n    if (props.state === 'listening') return css`${listeningWaves } 2s ease-in-out infinite`;\n    if (props.state === 'speaking') return css`${speakingPulse } 1.5s ease-in-out infinite`;\n    if (props.state === 'thinking') return css`${thinkingMatrix} 3s linear infinite`;\n    return css`${float } 6s ease-in-out infinite`;\n  }};\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: -5px;\n    left: -5px;\n    right: -5px;\n    bottom: -5px;\n    border-radius: 50%;\n    background: ${props => {\n      if (props.disabled) return 'none';\n      if (props.state === 'listening') return `\n        conic-gradient(from 0deg, \n          rgba(34, 197, 94, 0.8), \n          rgba(34, 197, 94, 0.2), \n          rgba(34, 197, 94, 0.8), \n          rgba(34, 197, 94, 0.2))\n      `;\n      if (props.state === 'speaking') return `\n        conic-gradient(from 0deg, \n          rgba(239, 68, 68, 0.8), \n          rgba(239, 68, 68, 0.2), \n          rgba(239, 68, 68, 0.8), \n          rgba(239, 68, 68, 0.2))\n      `;\n      if (props.state === 'thinking') return `\n        conic-gradient(from 0deg, \n          rgba(245, 158, 11, 0.8), \n          rgba(245, 158, 11, 0.2), \n          rgba(245, 158, 11, 0.8), \n          rgba(245, 158, 11, 0.2))\n      `;\n      return `\n        conic-gradient(from 0deg, \n          rgba(79, 70, 229, 0.6), \n          rgba(147, 51, 234, 0.3), \n          rgba(79, 70, 229, 0.6), \n          rgba(147, 51, 234, 0.3))\n      `;\n    }};\n    animation: ${spin} 4s linear infinite;\n    z-index: -1;\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 8px;\n    height: 8px;\n    background: ${props => {\n      if (props.state === 'listening') return 'radial-gradient(circle, #22C55E, #16A34A)';\n      if (props.state === 'speaking') return 'radial-gradient(circle, #EF4444, #DC2626)';\n      if (props.state === 'thinking') return 'radial-gradient(circle, #F59E0B, #D97706)';\n      return 'radial-gradient(circle, #4F46E5, #3730A3)';\n    }};\n    border-radius: 50%;\n    transform-origin: 0 0;\n    animation: ${orbitalRotation} 3s linear infinite;\n    box-shadow: 0 0 15px currentColor;\n    opacity: ${props => props.disabled ? 0 : 0.8};\n  }\n\n  &:hover, &:active {\n    transform: ${props => props.disabled ? 'none' : props.isMobile ? 'scale(0.95) rotateY(10deg)' : 'scale(1.1) rotateY(15deg) rotateX(5deg)'};\n    filter: ${props => props.disabled ? 'none' : 'brightness(1.2) saturate(1.1)'};\n  }\n`;\n\nconst VoiceWaves  = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${props => props.isMobile ? '3px' : '4px'};\n  margin: ${props => props.isMobile ? '15px 0' : '20px 0'};\n  height: ${props => props.isMobile ? '30px' : '40px'};\n  opacity: ${props => props.state === 'listening' || props.state === 'speaking' ? 1 : 0};\n  transition: opacity 0.6s ease;\n  perspective: 300px;\n  \n  .wave-  {\n    width: ${props => props.isMobile ? '3px' : '4px'};\n    border-radius: 3px;\n    background: ${props => {\n      if (props.state === 'listening') return `\n        linear-gradient(to top, #22C55E 0%, #10B981 50%, #22C55E 100%)\n      `;\n      if (props.state === 'speaking') return `\n        linear-gradient(to top, #EF4444 0%, #F87171 50%, #EF4444 100%)\n      `;\n      return `\n        linear-gradient(to top, #4F46E5 0%, #6366F1 50%, #4F46E5 100%)\n      `;\n    }};\n    box-shadow: \n      0 0 10px currentColor,\n      0 0 20px rgba(0, 0, 0, 0.3);\n    animation: ${voiceVisualization} 1.5s ease-in-out infinite;\n    transform-style: preserve- ;\n    \n    &:nth-child(1) { animation-delay: 0.0s; }\n    &:nth-child(2) { animation-delay: 0.1s; }\n    &:nth-child(3) { animation-delay: 0.2s; }\n    &:nth-child(4) { animation-delay: 0.3s; }\n    &:nth-child(5) { animation-delay: 0.4s; }\n    &:nth-child(6) { animation-delay: 0.3s; }\n    &:nth-child(7) { animation-delay: 0.2s; }\n    &:nth-child(8) { animation-delay: 0.1s; }\n    &:nth-child(9) { animation-delay: 0.1s; }\n  }\n`;\n\nconst VoiceButton  = styled.button`\n  width: ${props => props.isMobile ? '55px' : '50px'};\n  height: ${props => props.isMobile ? '55px' : '50px'};\n  border-radius: 50%;\n  border: none;\n  \n  background: ${props => {\n    if (props.disabled) return `\n      linear-gradient(135deg, \n        rgba(107, 114, 128, 0.3) 0%, \n        rgba(75, 85, 99, 0.2) 50%, \n        rgba(107, 114, 128, 0.1) 100%)\n    `;\n    if (props.active) return `\n      linear-gradient(135deg, \n        rgba(34, 197, 94, 0.4) 0%, \n        rgba(16, 185, 129, 0.3) 50%, \n        rgba(34, 197, 94, 0.2) 100%),\n      radial-gradient(circle, rgba(34, 197, 94, 0.1), transparent 70%)\n    `;\n    return `\n      linear-gradient(135deg, \n        rgba(255, 255, 255, 0.2) 0%, \n        rgba(255, 255, 255, 0.1) 50%, \n        rgba(255, 255, 255, 0.05) 100%),\n      radial-gradient(circle, rgba(79, 70, 229, 0.1), transparent 70%)\n    `;\n  }};\n  \n  color: ${props => props.disabled ? 'rgba(255, 255, 255, 0.3)' : 'white'};\n  font-size: ${props => props.isMobile ? '20px' : '18px'};\n  cursor: ${props => props.disabled ? 'not-allowed' : 'pointer'};\n  transition: all 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);\n  backdrop-filter: blur(20px) saturate(1.1);\n  \n  border: 2px solid ${props => {\n    if (props.disabled) return 'rgba(107, 114, 128, 0.2)';\n    if (props.active) return 'rgba(34, 197, 94, 0.5)';\n    return 'rgba(255, 255, 255, 0.2)';\n  }};\n  \n  position: relative;\n  overflow: hidden;\n  transform-style: preserve- ;\n  \n  box-shadow: ${props => {\n    if (props.disabled) return '0 4px 15px rgba(0, 0, 0, 0.1)';\n    if (props.active) return `\n      0 0 25px rgba(34, 197, 94, 0.5),\n      0 8px 20px rgba(0, 0, 0, 0.3),\n      inset 0 2px 4px rgba(255, 255, 255, 0.1)\n    `;\n    return `\n      0 6px 20px rgba(0, 0, 0, 0.3),\n      0 0 15px rgba(79, 70, 229, 0.2),\n      inset 0 2px 4px rgba(255, 255, 255, 0.1)\n    `;\n  }};\n  \n  -webkit-tap-highlight-color: transparent;\n  min-width: ${props => props.isMobile ? '55px' : '50px'};\n  min-height: ${props => props.isMobile ? '55px' : '50px'};\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 0;\n    height: 0;\n    background: radial-gradient(circle, rgba(255, 255, 255, 0.3), transparent 70%);\n    border-radius: 50%;\n    transition: all 0.6s ease;\n    transform: translate(-50%, -50%);\n    z-index: 1;\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: -2px;\n    left: -2px;\n    right: -2px;\n    bottom: -2px;\n    background: ${props => !props.disabled ? `\n      conic-gradient(from 0deg, \n        rgba(79, 70, 229, 0.4), \n        transparent, \n        rgba(147, 51, 234, 0.4), \n        transparent, \n        rgba(79, 70, 229, 0.4))\n    ` : 'none'};\n    border-radius: 50%;\n    animation: ${props => !props.disabled ? spin : 'none'} 6s linear infinite;\n    z-index: -1;\n    opacity: 0;\n    transition: opacity 0.3s ease;\n  }\n\n  &:hover:not(:disabled) {\n    transform: ${props => props.isMobile ? \n      'scale(0.95) rotateY(5deg)' : \n      'translateY(-5px) scale(1.08) rotateY(10deg) rotateX(5deg)'\n    };\n    box-shadow: ${props => props.isMobile ? \n      '0 6px 20px rgba(0, 0, 0, 0.3)' : \n      '0 15px 35px rgba(0, 0, 0, 0.4), 0 0 25px rgba(79, 70, 229, 0.3)'\n    };\n    \n    &::before {\n      width: 100%;\n      height: 100%;\n    }\n    \n    &::after {\n      opacity: 1;\n    }\n  }\n\n  &:active:not(:disabled) {\n    transform: scale(0.92) rotateY(15deg);\n  }\n`;\n\nconst InterimText  = styled.div`\n  background: linear-gradient(135deg, \n    rgba(34, 197, 94, 0.2) 0%, \n    rgba(16, 185, 129, 0.15) 50%, \n    rgba(34, 197, 94, 0.1) 100%),\n  radial-gradient(circle, rgba(34, 197, 94, 0.05), transparent 70%);\n  color: #22C55E;\n  padding: ${props => props.isMobile ? '12px 16px' : '15px 20px'};\n  border-radius: ${props => props.isMobile ? '15px' : '18px'};\n  font-size: ${props => props.isMobile ? '12px' : '13px'};\n  text-align: center;\n  margin: ${props => props.isMobile ? '12px 0' : '15px 0'};\n  \n  border: 2px solid rgba(34, 197, 94, 0.4);\n  backdrop-filter: blur(20px) saturate(1.2);\n  max-width: ${props => props.isMobile ? '90%' : '240px'};\n  \n  opacity: ${props => props.show ? 1 : 0};\n  transform: ${props => props.show ? \n    'translateY(0) rotateX(0deg)' : \n    'translateY(20px) rotateX(-10deg)'\n  };\n  transition: all 0.6s cubic-bezier(0.34, 1.56, 0.64, 1);\n  \n  font-style: italic;\n  word-break: break-word;\n  font-weight: 500;\n  min-height: ${props => props.isMobile ? '20px' : '25px'};\n  \n  text-shadow: \n    0 2px 4px rgba(0, 0, 0, 0.3),\n    0 0 10px rgba(34, 197, 94, 0.4);\n    \n  box-shadow: \n    0 8px 25px rgba(34, 197, 94, 0.3),\n    0 0 15px rgba(34, 197, 94, 0.2),\n    inset 0 2px 4px rgba(255, 255, 255, 0.1);\n    \n  transform-style: preserve- ;\n`;\n\nconst NeuralNetwork = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  pointer-events: none;\n  opacity: 0.3;\n  \n  .neural-node {\n    position: absolute;\n    width: 6px;\n    height: 6px;\n    background: radial-gradient(circle, #4F46E5, #3730A3);\n    border-radius: 50%;\n    box-shadow: 0 0 10px rgba(79, 70, 229, 0.6);\n    animation: ${neuralPulse} 4s ease-in-out infinite;\n    \n    &:nth-child(1) {\n      top: 20%;\n      left: 20%;\n      animation-delay: 0s;\n    }\n    &:nth-child(2) {\n      top: 30%;\n      right: 25%;\n      animation-delay: 1s;\n    }\n    &:nth-child(3) {\n      bottom: 25%;\n      left: 30%;\n      animation-delay: 2s;\n    }\n    &:nth-child(4) {\n      bottom: 20%;\n      right: 20%;\n      animation-delay: 3s;\n    }\n  }\n  \n  .neural-connection {\n    position: absolute;\n    height: 1px;\n    background: linear-gradient(90deg, \n      transparent 0%, \n      rgba(79, 70, 229, 0.4) 50%, \n      transparent 100%);\n    transform-origin: left center;\n    animation: ${neuralConnectionPulse} 3s ease-in-out infinite;\n  }\n`;\n\nconst BrowserNotice = styled.div`\n  position: fixed;\n  top: ${props => props.isMobile ? '10px' : '20px'};\n  right: ${props => props.isMobile ? '10px' : '20px'};\n  left: ${props => props.isMobile ? '10px' : 'auto'};\n  background: ${props => {\n    if (props.type === 'error') return `\n      linear-gradient(135deg, rgba(239, 68, 68, 0.95), rgba(220, 38, 38, 0.9))\n    `;\n    if (props.type === 'warning') return `\n      linear-gradient(135deg, rgba(245, 158, 11, 0.95), rgba(217, 119, 6, 0.9))\n    `;\n    if (props.type === 'success') return `\n      linear-gradient(135deg, rgba(34, 197, 94, 0.95), rgba(16, 185, 129, 0.9))\n    `;\n    return `\n      linear-gradient(135deg, rgba(59, 130, 246, 0.95), rgba(37, 99, 235, 0.9))\n    `;\n  }};\n  color: white;\n  padding: ${props => props.isMobile ? '15px 20px' : '18px 24px'};\n  border-radius: ${props => props.isMobile ? '15px' : '18px'};\n  font-size: ${props => props.isMobile ? '13px' : '14px'};\n  max-width: ${props => props.isMobile ? 'none' : '350px'};\n  z-index: 1001;\n  backdrop-filter: blur(20px) saturate(1.2);\n  border: 2px solid rgba(255, 255, 255, 0.2);\n  box-shadow: \n    0 12px 35px rgba(0, 0, 0, 0.4),\n    0 0 20px ${props => {\n      if (props.type === 'error') return 'rgba(239, 68, 68, 0.3)';\n      if (props.type === 'warning') return 'rgba(245, 158, 11, 0.3)';\n      if (props.type === 'success') return 'rgba(34, 197, 94, 0.3)';\n      return 'rgba(59, 130, 246, 0.3)';\n    }};\n  animation: ${props => props.show ? bounceIn : fadeOut} 0.4s ease;\n  line-height: 1.4;\n  transform-style: preserve- ;\n  \n  .notice-title {\n    font-weight: 700;\n    margin-bottom: 10px;\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    font-size: ${props => props.isMobile ? '14px' : '15px'};\n    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n  }\n  \n  .notice-content {\n    font-weight: 400;\n    opacity: 0.95;\n    font-size: ${props => props.isMobile ? '12px' : '13px'};\n    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);\n  }\n`;\n\nconst ConnectionIndicator = styled.div`\n  position: absolute;\n  top: ${props => props.isMobile ? '12px' : '15px'};\n  left: ${props => props.isMobile ? '12px' : '15px'};\n  width: ${props => props.isMobile ? '12px' : '15px'};\n  height: ${props => props.isMobile ? '12px' : '15px'};\n  border-radius: 50%;\n  background: ${props => {\n    if (props.status === 'connected') return `\n      radial-gradient(circle, #22C55E, #16A34A)\n    `;\n    if (props.status === 'connecting') return `\n      radial-gradient(circle, #F59E0B, #D97706)\n    `;\n    return `\n      radial-gradient(circle, #EF4444, #DC2626)\n    `;\n  }};\n  box-shadow: \n    0 0 ${props => props.isMobile ? '12px' : '18px'} ${props => {\n      if (props.status === 'connected') return 'rgba(34, 197, 94, 0.6)';\n      if (props.status === 'connecting') return 'rgba(245, 158, 11, 0.6)';\n      return 'rgba(239, 68, 68, 0.6)';\n    }},\n    inset 0 2px 4px rgba(255, 255, 255, 0.2),\n    0 4px 8px rgba(0, 0, 0, 0.3);\n  animation: ${ambientPulse} 2s ease-in-out infinite;\n  border: 1px solid rgba(255, 255, 255, 0.3);\n`;\n\nconst CloseButton = styled.button`\n  position: absolute;\n  top: ${props => props.isMobile ? '12px' : '15px'};\n  right: ${props => props.isMobile ? '12px' : '15px'};\n  width: ${props => props.isMobile ? '36px' : '32px'};\n  height: ${props => props.isMobile ? '36px' : '32px'};\n  border-radius: 50%;\n  border: none;\n  background: linear-gradient(135deg, rgba(255, 255, 255, 0.15), rgba(255, 255, 255, 0.05));\n  color: rgba(255, 255, 255, 0.7);\n  font-size: ${props => props.isMobile ? '20px' : '18px'};\n  cursor: pointer;\n  transition: all 0.4s ease;\n  backdrop-filter: blur(15px);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: bold;\n  border: 2px solid rgba(255, 255, 255, 0.1);\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);\n  transform-style: preserve- ;\n  \n  min-width: ${props => props.isMobile ? '44px' : '32px'};\n  min-height: ${props => props.isMobile ? '44px' : '32px'};\n  -webkit-tap-highlight-color: transparent;\n\n  &:hover, &:active {\n    background: linear-gradient(135deg, rgba(239, 68, 68, 0.3), rgba(239, 68, 68, 0.1));\n    color: #EF4444;\n    transform: scale(${props => props.isMobile ? '0.95' : '1.1'}) rotateY(10deg);\n    box-shadow: 0 0 20px rgba(239, 68, 68, 0.4);\n  }\n`;\n\nconst VoiceStatus = styled.div`\n  text-align: center;\n  margin-bottom: ${props => props.isMobile ? '18px' : '22px'};\n  \n  .status-title {\n    font-size: ${props => props.isMobile ? '15px' : '16px'};\n    font-weight: 700;\n    color: white;\n    margin-bottom: 8px;\n    text-shadow: 0 3px 10px rgba(0, 0, 0, 0.5);\n    letter-spacing: 1px;\n    background: linear-gradient(135deg, #fff, #e2e8f0, #cbd5e1);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-clip: text;\n  }\n  \n  .status-subtitle {\n    font-size: ${props => props.isMobile ? '11px' : '12px'};\n    color: rgba(255, 255, 255, 0.8);\n    font-weight: 400;\n    line-height: 1.4;\n    letter-spacing: 0.3px;\n    text-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);\n  }\n`;\n\nconst VoiceControls = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${props => props.isMobile ? '12px' : '15px'};\n  margin-top: ${props => props.isMobile ? '12px' : '15px'};\n  width: 100%;\n`;\n\nconst ButtonRow = styled.div`\n  display: flex;\n  gap: ${props => props.isMobile ? '12px' : '15px'};\n  justify-content: center;\n`;\n\nconst ButtonLabel = styled.div`\n  font-size: ${props => props.isMobile ? '9px' : '10px'};\n  color: ${props => props.disabled ? 'rgba(255, 255, 255, 0.3)' : 'rgba(255, 255, 255, 0.7)'};\n  text-align: center;\n  margin-top: ${props => props.isMobile ? '6px' : '8px'};\n  font-weight: 500;\n  letter-spacing: 0.3px;\n  line-height: 1.2;\n  text-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);\n`;\n\nconst HelpHint = styled.div`\n  position: absolute;\n  bottom: ${props => props.isMobile ? '-40px' : '-50px'};\n  left: 50%;\n  transform: translateX(-50%);\n  color: rgba(255, 255, 255, 0.6);\n  font-size: ${props => props.isMobile ? '10px' : '11px'};\n  text-align: center;\n  line-height: 1.4;\n  max-width: ${props => props.isMobile ? '90%' : '260px'};\n  opacity: ${props => props.show ? 1 : 0};\n  transition: opacity 0.6s ease;\n  font-weight: 500;\n  background: linear-gradient(135deg, rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0.6));\n  padding: ${props => props.isMobile ? '8px 16px' : '10px 18px'};\n  border-radius: ${props => props.isMobile ? '12px' : '15px'};\n  backdrop-filter: blur(15px);\n  border: 2px solid rgba(255, 255, 255, 0.1);\n  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);\n  text-shadow: 0 1px 3px rgba(0, 0, 0, 0.5);\n`;\n\n// ============= MAIN VOICE ASSISTANT COMPONENT =============\nconst VoiceAssistant  = ({ onClose }) => {\n  const [assistantState, setAssistantState] = useState('idle');\n  const [connectionStatus, setConnectionStatus] = useState('disconnected');\n  const [isAutoMode, setIsAutoMode] = useState(false);\n  const [interimTranscript, setInterimTranscript] = useState('');\n  const [showHelp, setShowHelp] = useState(true);\n  const [isVisible, setIsVisible] = useState(true);\n  const [isClosing, setIsClosing] = useState(false);\n  const [notice, setNotice] = useState(null);\n  const [hasPermission, setHasPermission] = useState(false);\n  const [retryCount, setRetryCount] = useState(0);\n  const [deviceInfo, setDeviceInfo] = useState({});\n  const [isKeyboardOpen, setIsKeyboardOpen] = useState(false);\n  const [voiceIntensity, setVoiceIntensity] = useState(0);\n  \n  const recognitionRef = useRef(null);\n  const synthRef = useRef(null);\n  const silenceTimeoutRef = useRef(null);\n  const isProcessingRef = useRef(false);\n  const finalTranscriptRef = useRef('');\n  const audioContextRef = useRef(null);\n  const autoModeRef = useRef(false);\n  const noticeTimeoutRef = useRef(null);\n  const wakeLockRef = useRef(null);\n  const initialViewportHeight = useRef(window.innerHeight);\n  const animationFrameRef = useRef(null);\n\n  // Generate particles for visual effects\n  const particles = useMemo(() => {\n    return Array.from({ length: 8 }, (_, i) => ({ // REDUCED from 20 to 8\n      id: i,\n      size: Math.random() * 3 + 1, // REDUCED from 4+2 to 3+1\n      color: [\n        'rgba(79, 70, 229, 0.4)',   // REDUCED opacity from 0.6 to 0.4\n        'rgba(147, 51, 234, 0.4)',  // REDUCED opacity from 0.6 to 0.4\n        'rgba(34, 197, 94, 0.4)',   // REDUCED opacity from 0.6 to 0.4\n        'rgba(239, 68, 68, 0.4)'    // REDUCED opacity from 0.6 to 0.4\n      ][Math.floor(Math.random() * 4)],\n      duration: Math.random() * 15 + 20, // SLOWER: increased from 10+10 to 15+20\n      delay: Math.random() * 25,          // SLOWER: increased from 15 to 25\n      left: Math.random() * 100\n    }));\n  }, []);\n\n  // Enhanced device detection\n  useEffect(() => {\n    const userAgent = navigator.userAgent.toLowerCase();\n    const platform = navigator.platform.toLowerCase();\n    \n    const deviceInfo = {\n      isMobile: /android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i.test(userAgent),\n      isIOS: /ipad|iphone|ipod/.test(userAgent) || (platform === 'macintel' && navigator.maxTouchPoints > 1),\n      isAndroid: /android/i.test(userAgent),\n      isChrome: /chrome/i.test(userAgent) && !/edge/i.test(userAgent),\n      isFirefox: /firefox/i.test(userAgent),\n      isSafari: /safari/i.test(userAgent) && !/chrome/i.test(userAgent),\n      isEdge: /edge/i.test(userAgent),\n      hasTouch: 'ontouchstart' in window || navigator.maxTouchPoints > 0,\n      isStandalone: window.navigator.standalone === true || window.matchMedia('(display-mode: standalone)').matches,\n      supports : CSS.supports('transform-style', 'preserve- '),\n      supportsBackdropFilter: CSS.supports('backdrop-filter', 'blur(10px)'),\n      hasHardwareAcceleration: !!window.DeviceOrientationEvent\n    };\n    \n    setDeviceInfo(deviceInfo);\n    \n    if (deviceInfo.isMobile) {\n      if (deviceInfo.isIOS) {\n        const viewport = document.querySelector('meta[name=\"viewport\"]');\n        if (viewport) {\n          viewport.setAttribute('content', 'width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no, viewport-fit=cover');\n        }\n      }\n      \n      const handleResize = () => {\n        const currentHeight = window.innerHeight;\n        const heightDifference = initialViewportHeight.current - currentHeight;\n        setIsKeyboardOpen(heightDifference > 150);\n      };\n      \n      const handleOrientationChange = () => {\n        setTimeout(() => {\n          initialViewportHeight.current = window.innerHeight;\n        }, 500);\n      };\n      \n      window.addEventListener('resize', handleResize);\n      window.addEventListener('orientationchange', handleOrientationChange);\n      \n      return () => {\n        window.removeEventListener('resize', handleResize);\n        window.removeEventListener('orientationchange', handleOrientationChange);\n      };\n    }\n  }, []);\n\n  // Show notice function\n  const showNotice = useCallback((type, title, content, duration = 4000) => {\n    if (noticeTimeoutRef.current) {\n      clearTimeout(noticeTimeoutRef.current);\n    }\n    \n    setNotice({ type, title, content, show: true });\n    \n    noticeTimeoutRef.current = setTimeout(() => {\n      setNotice(prev => prev ? { ...prev, show: false } : null);\n      setTimeout(() => setNotice(null), 300);\n    }, duration);\n  }, []);\n\n  // Check browser compatibility\n  const checkBrowserCompatibility = useCallback(() => {\n    if (!window.isSecureContext) {\n      showNotice('error', '🔒 HTTPS Required', 'Voice features require a secure connection');\n      return false;\n    }\n\n    if (!('webkitSpeechRecognition' in window || 'SpeechRecognition' in window)) {\n      showNotice('error', '🎙️ Not Supported', 'Speech recognition is not supported');\n      return false;\n    }\n\n    if (!('speechSynthesis' in window)) {\n      showNotice('error', '🔊 Not Supported', 'Speech synthesis is not supported');\n      return false;\n    }\n\n    showNotice('info', '🌟 Enhanced', 'Experience exceptional  voice interaction!');\n    return true;\n  }, [showNotice]);\n\n  // Request microphone permission\n  const requestMicrophonePermission = useCallback(async () => {\n    try {\n      setConnectionStatus('connecting');\n      \n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: {\n          echoCancellation: true,\n          noiseSuppression: true,\n          autoGainControl: true\n        }\n      });\n      \n      const tracks = stream.getTracks();\n      tracks.forEach(track => track.stop());\n      \n      setHasPermission(true);\n      setConnectionStatus('connected');\n      showNotice('success', '🎤 Ready!', 'Microphone access granted with  visualization!');\n      \n      return true;\n    } catch (error) {\n      console.error('Microphone permission error:', error);\n      setHasPermission(false);\n      setConnectionStatus('disconnected');\n      showNotice('error', '🎤 Permission Denied', 'Please allow microphone access');\n      return false;\n    }\n  }, [showNotice]);\n\n  // Enhanced audio cues\n  const playAudioCue = useCallback((type) => {\n    try {\n      const audioContext = audioContextRef.current || new (window.AudioContext || window.webkitAudioContext)();\n      if (audioContext.state === 'suspended') {\n        audioContext.resume();\n      }\n      audioContextRef.current = audioContext;\n      \n      const oscillator = audioContext.createOscillator();\n      const gainNode = audioContext.createGain();\n      \n      oscillator.connect(gainNode);\n      gainNode.connect(audioContext.destination);\n      \n      const volume = 0.05;\n      const duration = 0.2;\n      \n      switch (type) {\n        case 'start':\n          oscillator.frequency.setValueAtTime(600, audioContext.currentTime);\n          oscillator.frequency.exponentialRampToValueAtTime(1200, audioContext.currentTime + 0.1);\n          break;\n        case 'end':\n          oscillator.frequency.setValueAtTime(1200, audioContext.currentTime);\n          oscillator.frequency.exponentialRampToValueAtTime(600, audioContext.currentTime + 0.15);\n          break;\n        case 'error':\n          oscillator.frequency.setValueAtTime(300, audioContext.currentTime);\n          oscillator.frequency.exponentialRampToValueAtTime(150, audioContext.currentTime + 0.3);\n          break;\n        default:\n          return;\n      }\n      \n      gainNode.gain.setValueAtTime(volume, audioContext.currentTime);\n      gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + duration);\n      \n      oscillator.start(audioContext.currentTime);\n      oscillator.stop(audioContext.currentTime + duration);\n    } catch (error) {\n      console.warn('Audio cue failed:', error);\n    }\n  }, []);\n\n  // Content extraction\n  const extractContent = useCallback((obj, depth = 0) => {\n    if (depth > 5) return null;\n    if (typeof obj === 'string' && obj.trim()) {\n      return obj.trim();\n    }\n    if (!obj) return null;\n    \n    if (obj.result && obj.result.message && obj.result.message.content) {\n      return obj.result.message.content.trim();\n    }\n    \n    const patterns = [\n      'content',\n      'message.content', \n      'result.message.content',\n      'choices[0].message.content',\n      'text',\n      'response',\n      'answer',\n      'reply'\n    ];\n    \n    for (const pattern of patterns) {\n      try {\n        const value = pattern.split('.').reduce((acc, key) => {\n          if (key.includes('[')) {\n            const [arrayKey, index] = key.split('[');\n            const idx = parseInt(index.replace(']', ''));\n            return acc?.[arrayKey]?.[idx];\n          }\n          return acc?.[key];\n        }, obj);\n        \n        if (value && typeof value === 'string' && value.trim()) {\n          return value.trim();\n        }\n      } catch (e) {\n        // Continue to next pattern\n      }\n    }\n    \n    return null;\n  }, []);\n\n  // Voice fallback\n  const getVoiceFallback = useCallback((input) => {\n    const voiceResponses = {\n      greeting: \"Hey there! I'm Laxman's AI assistant. What would you like to explore about him?\",\n      identity: \"Laxman is a brilliant software engineer at CAMS in Chennai. He's an IIT Delhi graduate with exceptional AI and full-stack development skills.\",\n      projects: \"He's created amazing AI projects! His flagship CamsLens platform processes over 80,000 documents monthly with incredible 95% accuracy.\",\n      skills: \"He's a master of Java, Python, JavaScript, and cutting-edge AI technologies like Vertex AI. Truly impressive technical expertise!\",\n      contact: \"You can reach him at laxman kethavath 5 at gmail dot com, or connect on LinkedIn. He's very approachable!\",\n      location: \"He's currently based in Chennai, India, building innovative tech solutions that make a real difference.\",\n      education: \"He completed his dual degree in Computer Science from prestigious IIT Delhi, graduating in 2024. Excellent academic background!\",\n      experience: \"He's been excelling as a software engineer at CAMS since June 2024, previously mentoring over 300 students as a teaching assistant.\",\n      help: \"Feel free to ask about Laxman's projects, technical skills, work experience, education, or how to get in touch. I'm here to help!\",\n      default: \"That's an interesting question! Could you rephrase it? I'm equipped with comprehensive knowledge about Laxman's impressive background!\"\n    };\n\n    const input_lower = input.toLowerCase();\n    \n    if (input_lower.includes('hello') || input_lower.includes('hi') || input_lower.includes('hey') || input_lower.includes('greet')) {\n      return voiceResponses.greeting;\n    }\n    if (input_lower.includes('who') || input_lower.includes('about') || input_lower.includes('tell me') || input_lower.includes('describe')) {\n      return voiceResponses.identity;\n    }\n    if (input_lower.includes('project') || input_lower.includes('work') || input_lower.includes('built') || input_lower.includes('develop')) {\n      return voiceResponses.projects;\n    }\n    if (input_lower.includes('skill') || input_lower.includes('technology') || input_lower.includes('programming') || input_lower.includes('technical')) {\n      return voiceResponses.skills;\n    }\n    if (input_lower.includes('contact') || input_lower.includes('reach') || input_lower.includes('email') || input_lower.includes('phone')) {\n      return voiceResponses.contact;\n    }\n    if (input_lower.includes('where') || input_lower.includes('location') || input_lower.includes('live') || input_lower.includes('based')) {\n      return voiceResponses.location;\n    }\n    if (input_lower.includes('education') || input_lower.includes('study') || input_lower.includes('college') || input_lower.includes('university')) {\n      return voiceResponses.education;\n    }\n    if (input_lower.includes('experience') || input_lower.includes('job') || input_lower.includes('career') || input_lower.includes('professional')) {\n      return voiceResponses.experience;\n    }\n    if (input_lower.includes('help') || input_lower.includes('what can') || input_lower.includes('how to') || input_lower.includes('assist')) {\n      return voiceResponses.help;\n    }\n    \n    return voiceResponses.default;\n  }, []);\n\n  // Get AI response\n  const getAIResponse = useCallback(async (userInput) => {\n    try {\n      const maxWords = deviceInfo.isMobile ? 25 : 30;\n      const contextPrompt = `You are Laxman's advanced AI assistant . Respond naturally and engagingly in ${maxWords} words or less:\n\n${LAXMAN_PORTFOLIO_DATA}\n\nGuidelines:\n- Keep responses under ${maxWords} words for optimal voice delivery\n- Be conversational, enthusiastic, and professional\n- Use \"he\" or \"Laxman\" when referring to him\n- Highlight his achievements and expertise\n- Focus on the most relevant and impressive information\n\nUser question: \"${userInput}\"\n\nProvide an engaging, conversational response:`;\n\n      const aiResponse = await window.puter.ai.chat(contextPrompt, {\n        model: 'gpt-4o-mini',\n        max_tokens: deviceInfo.isMobile ? 100 : 120,\n        temperature: 0.8\n      });\n\n      const extractedContent = extractContent(aiResponse);\n      return extractedContent || getVoiceFallback(userInput);\n    } catch (error) {\n      console.error('AI API Error:', error);\n      return getVoiceFallback(userInput);\n    }\n  }, [extractContent, getVoiceFallback, deviceInfo]);\n\n  // Stop all functions\n  const stopAll = useCallback(() => {\n    if (recognitionRef.current) {\n      recognitionRef.current.stop();\n      recognitionRef.current = null;\n    }\n    \n    window.speechSynthesis.cancel();\n    \n    if (silenceTimeoutRef.current) {\n      clearTimeout(silenceTimeoutRef.current);\n      silenceTimeoutRef.current = null;\n    }\n    \n    if (animationFrameRef.current) {\n      cancelAnimationFrame(animationFrameRef.current);\n      animationFrameRef.current = null;\n    }\n    \n    setAssistantState('idle');\n    setInterimTranscript('');\n    setVoiceIntensity(0);\n    isProcessingRef.current = false;\n    finalTranscriptRef.current = '';\n  }, []);\n\n  // Start listening\n  const startListening = useCallback(async () => {\n    if (connectionStatus !== 'connected' || assistantState === 'listening' || isProcessingRef.current) {\n      return;\n    }\n\n    if (!hasPermission) {\n      const granted = await requestMicrophonePermission();\n      if (!granted) return;\n    }\n\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    \n    if (!SpeechRecognition) {\n      showNotice('error', '🎙️ Not Supported', 'Speech recognition is not available');\n      return;\n    }\n\n    const recognition = new SpeechRecognition();\n    recognitionRef.current = recognition;\n\n    recognition.continuous = false;\n    recognition.interimResults = true;\n    recognition.lang = 'en-US';\n    recognition.maxAlternatives = 1;\n\n    setAssistantState('listening');\n    setInterimTranscript('');\n    finalTranscriptRef.current = '';\n    setShowHelp(false);\n    \n    playAudioCue('start');\n\n    recognition.onstart = () => {\n      console.log('🎙️ Enhanced speech recognition started');\n      if (!deviceInfo.isMobile) {\n        recognition.continuous = true;\n      }\n    };\n\n    recognition.onresult = (event) => {\n      let interimText = '';\n\n      for (let i = event.resultIndex; i < event.results.length; i++) {\n        const transcript = event.results[i][0].transcript;\n        \n        if (event.results[i].isFinal) {\n          finalTranscriptRef.current += transcript;\n        } else {\n          interimText += transcript;\n        }\n      }\n\n      if (interimText) {\n        setInterimTranscript(interimText);\n      }\n\n      if (silenceTimeoutRef.current) {\n        clearTimeout(silenceTimeoutRef.current);\n      }\n\n      const timeoutDuration = deviceInfo.isMobile ? 2500 : 3000;\n      silenceTimeoutRef.current = setTimeout(() => {\n        const finalResult = finalTranscriptRef.current.trim();\n        if (finalResult && !isProcessingRef.current) {\n          if (recognitionRef.current) {\n            recognitionRef.current.stop();\n          }\n          processFinalSpeech(finalResult);\n        }\n      }, timeoutDuration);\n    };\n\n    recognition.onerror = (event) => {\n      console.error('Speech recognition error:', event.error);\n      \n      switch (event.error) {\n        case 'no-speech':\n          console.log('No speech detected');\n          if (autoModeRef.current) {\n            setTimeout(() => {\n              if (autoModeRef.current && assistantState !== 'speaking') {\n                startListening();\n              }\n            }, 2000);\n          } else {\n            setAssistantState('idle');\n            setInterimTranscript('');\n          }\n          return;\n        \n        case 'network':\n          showNotice('warning', '🌐 Network Issue', 'Retrying peech recognition...');\n          setTimeout(() => {\n            if (assistantState === 'listening') {\n              startListening();\n            }\n          }, 2000);\n          return;\n        \n        default:\n          console.error('Unhandled recognition error:', event.error);\n          showNotice('warning', '⚠️ Recognition Error', 'Speech recognition encountered an error');\n      }\n      \n      playAudioCue('error');\n      setAssistantState('idle');\n      setInterimTranscript('');\n      isProcessingRef.current = false;\n    };\n\n    recognition.onend = () => {\n      console.log('🎙️ Speech recognition ended');\n      const remainingText = finalTranscriptRef.current.trim();\n      if (remainingText && !isProcessingRef.current && assistantState === 'listening') {\n        processFinalSpeech(remainingText);\n      } else if (!isProcessingRef.current) {\n        setAssistantState('idle');\n        setInterimTranscript('');\n      }\n    };\n\n    try {\n      recognition.start();\n    } catch (error) {\n      console.error('Failed to start recognition:', error);\n      setAssistantState('idle');\n      playAudioCue('error');\n      showNotice('error', '🎤 Start Failed', 'Could not start speech recognition');\n    }\n  }, [connectionStatus, assistantState, hasPermission, requestMicrophonePermission, playAudioCue, showNotice, deviceInfo]);\n\n  // Speak response\n  const speakResponse = useCallback((text) => {\n    if (!text || !text.trim()) {\n      setAssistantState('idle');\n      return;\n    }\n    \n    if (!('speechSynthesis' in window)) {\n      setAssistantState('idle');\n      showNotice('error', '🔊 Not Supported', 'Speech synthesis is not available');\n      return;\n    }\n\n    const cleanText = text.trim();\n    window.speechSynthesis.cancel();\n\n    setTimeout(() => {\n      const utterance = new SpeechSynthesisUtterance(cleanText);\n      synthRef.current = utterance;\n\n      utterance.rate = deviceInfo.isMobile ? 0.85 : 0.9;\n      utterance.pitch = deviceInfo.isMobile ? 0.95 : 1.0;\n      utterance.volume = deviceInfo.isMobile ? 0.9 : 0.85;\n      utterance.lang = 'en-US';\n\n      utterance.onstart = () => {\n        console.log('🔊 Enhanced   speech synthesis started');\n      };\n\n      utterance.onend = () => {\n        console.log('🔊 Speech synthesis ended');\n        setAssistantState('idle');\n        \n        if (autoModeRef.current) {\n          const delay = deviceInfo.isMobile ? 1500 : 2000;\n          setTimeout(() => {\n            if (autoModeRef.current && assistantState !== 'listening') {\n              startListening();\n            }\n          }, delay);\n        }\n      };\n\n      utterance.onerror = (event) => {\n        console.error('Speech synthesis error:', event.error);\n        setAssistantState('idle');\n        showNotice('error', '🔊 Speech Error', 'Could not play voice response');\n      };\n\n      const setVoice = () => {\n        const voices = window.speechSynthesis.getVoices();\n        if (voices.length > 0) {\n          let preferredVoice = voices.find(voice => \n            voice.lang.includes('en-US') && voice.name.includes('Google')\n          ) || voices.find(voice => \n            voice.lang.includes('en-US')\n          ) || voices[0];\n          \n          if (preferredVoice) {\n            utterance.voice = preferredVoice;\n          }\n        }\n      };\n\n      if (window.speechSynthesis.getVoices().length > 0) {\n        setVoice();\n        window.speechSynthesis.speak(utterance);\n      } else {\n        window.speechSynthesis.onvoiceschanged = () => {\n          setVoice();\n          window.speechSynthesis.speak(utterance);\n        };\n        \n        setTimeout(() => {\n          if (window.speechSynthesis.speaking === false) {\n            window.speechSynthesis.speak(utterance);\n          }\n        }, 300);\n      }\n    }, 200);\n  }, [startListening, assistantState, showNotice, deviceInfo]);\n\n  // Process final speech\n  const processFinalSpeech = useCallback(async (finalText) => {\n    if (finalText.length < 2 || isProcessingRef.current) return;\n    \n    isProcessingRef.current = true;\n    setInterimTranscript('');\n    setShowHelp(false);\n    \n    playAudioCue('end');\n    setAssistantState('thinking');\n    \n    try {\n      console.log('🧠 Processing with   AI:', finalText);\n      const aiResponse = await getAIResponse(finalText);\n      console.log('🤖   Response:', aiResponse);\n      \n      setAssistantState('speaking');\n      \n      if (aiResponse && aiResponse.trim()) {\n        speakResponse(aiResponse);\n      } else {\n        console.error('No valid response to speak');\n        setAssistantState('idle');\n      }\n    } catch (error) {\n      console.error('Error processing speech:', error);\n      setAssistantState('idle');\n      showNotice('error', '🧠 Processing Error', 'Could not process your request');\n    }\n    \n    isProcessingRef.current = false;\n  }, [getAIResponse, playAudioCue, speakResponse, showNotice]);\n\n  // Toggle auto mode\n  const toggleAutoMode = useCallback(() => {\n    setIsAutoMode(prev => {\n      const newState = !prev;\n      autoModeRef.current = newState;\n      \n      if (newState) {\n        showNotice('info', '🔄   Auto Mode On', 'Continuous   voice interaction activated!');\n        if (assistantState === 'idle') {\n          setTimeout(() => startListening(), 1000);\n        }\n      } else {\n        showNotice('info', '⏹️ Auto Mode Off', 'Switched to one-time question mode');\n        stopAll();\n      }\n      return newState;\n    });\n  }, [assistantState, startListening, stopAll, showNotice]);\n\n  // Test TTS\n  const testTTS = useCallback(() => {\n    const testText = deviceInfo.isMobile ? \n      \"Hello! voice technology is working perfectly on mobile!\" : \n      \"Hello! I'm Laxman's AI assistant. Voice output with spatial audio is working excellently!\";\n    setAssistantState('speaking');\n    speakResponse(testText);\n  }, [speakResponse, deviceInfo]);\n\n  // Close chat\n  const closeChat = useCallback(() => {\n    stopAll();\n    setIsClosing(true);\n    setTimeout(() => {\n      setIsVisible(false);\n      if (onClose) {\n        onClose();\n      }\n    }, 600);\n  }, [stopAll, onClose]);\n\nconst getVoiceStatus = () => {\n  switch (assistantState) {\n    case 'listening':\n      return {\n        title: \"Listening Active...\",\n        subtitle: deviceInfo.isMobile ? \"Speak clearly for best results!\" : \"Speak clearly, audio analysis active!\"\n      };\n    case 'thinking':\n      return {\n        title: \"AI Processing...\",\n        subtitle: deviceInfo.isMobile ? \"AI analyzing...\" : \"Advanced AI finding perfect answer...\"\n      };\n    case 'speaking':\n      return {\n        title: \"Voice Active...\",\n        subtitle: deviceInfo.isMobile ? \"Enhanced response playing\" : \"Delivering enhanced response\"\n      };\n    default:\n      return {\n        title: \"Laxman's AI Assistant\",\n        subtitle: connectionStatus === 'connected' \n          ? (deviceInfo.isMobile ? \"Tap the 🤖 robot to start!\" : \"Click the 🤖 robot avatar above to start!\")\n          : connectionStatus === 'connecting'\n          ? \"Setting up voice features...\"\n          : (deviceInfo.isMobile ? \"Tap the 🤖 robot to enable voice\" : \"Click the 🔒 robot avatar to enable voice\")\n      };\n  }\n};\n\n  // Initialize services\n  useEffect(() => {\n    const checkServices = async () => {\n      if (!checkBrowserCompatibility()) {\n        setConnectionStatus('disconnected');\n        return;\n      }\n\n      const puterReady = window.puter && window.puter.ai;\n      \n      if (!puterReady) {\n        setConnectionStatus('disconnected');\n        if (retryCount < 3) {\n          setTimeout(() => setRetryCount(prev => prev + 1), 2000);\n        } else {\n          showNotice('error', '🤖 AI Service', '  AI service unavailable. Please refresh the page.');\n        }\n        return;\n      }\n\n      if (hasPermission) {\n        setConnectionStatus('connected');\n      } else {\n        setConnectionStatus('disconnected');\n      }\n    };\n    \n    checkServices();\n  }, [checkBrowserCompatibility, hasPermission, retryCount, showNotice]);\n\n  // Auto mode effect\n  useEffect(() => {\n    autoModeRef.current = isAutoMode;\n  }, [isAutoMode]);\n\n  // Help timer\n  useEffect(() => {\n    const timer = setTimeout(() => setShowHelp(false), deviceInfo.isMobile ? 8000 : 10000);\n    return () => clearTimeout(timer);\n  }, [deviceInfo.isMobile]);\n\n  // Cleanup\n  useEffect(() => {\n    return () => {\n      stopAll();\n      if (noticeTimeoutRef.current) {\n        clearTimeout(noticeTimeoutRef.current);\n      }\n    };\n  }, [stopAll]);\n\n  const statusText = getVoiceStatus();\n  const isDisabled = connectionStatus !== 'connected' || !hasPermission;\n\n  if (!isVisible) return null;\n\n  return (\n    <>\n      {/* Enhanced   Browser Notice */}\n      {notice && (\n        <BrowserNotice type={notice.type} show={notice.show} isMobile={deviceInfo.isMobile}>\n          <div className=\"notice-title\">\n            {notice.title}\n          </div>\n          <div className=\"notice-content\">\n            {notice.content}\n          </div>\n        </BrowserNotice>\n      )}\n\n      {/* Enhanced   Voice Assistant Container */}\n      <VoiceContainer  \n        state={assistantState} \n        isClosing={isClosing} \n        isMobile={deviceInfo.isMobile}\n        isKeyboardOpen={isKeyboardOpen}\n      >\n        {/* Particle Field for   Effects */}\n        <ParticleField>\n          {particles.map(particle => (\n            <Particle\n              key={particle.id}\n              size={particle.size}\n              color={particle.color}\n              duration={particle.duration}\n              delay={particle.delay}\n              left={particle.left}\n            />\n          ))}\n        </ParticleField>\n\n        {/* Neural Network Background */}\n        <NeuralNetwork>\n          <div className=\"neural-node\"></div>\n          <div className=\"neural-node\"></div>\n          <div className=\"neural-node\"></div>\n          <div className=\"neural-node\"></div>\n          <div className=\"neural-connection\" style={{\n            top: '25%',\n            left: '20%',\n            width: '60%',\n            transform: 'rotate(15deg)'\n          }}></div>\n          <div className=\"neural-connection\" style={{\n            top: '70%',\n            left: '30%',\n            width: '50%',\n            transform: 'rotate(-20deg)'\n          }}></div>\n        </NeuralNetwork>\n\n        <ConnectionIndicator status={connectionStatus} isMobile={deviceInfo.isMobile} />\n        <CloseButton onClick={closeChat} isMobile={deviceInfo.isMobile}>×</CloseButton>\n\n        <VoiceAvatar  \n          state={assistantState}\n          disabled={isDisabled}\n          isMobile={deviceInfo.isMobile}\n          onClick={async () => {\n            if (isDisabled) {\n              if (!hasPermission) {\n                await requestMicrophonePermission();\n              }\n              return;\n            }\n\n            if (assistantState === 'idle') {\n              if (!window.speechSynthesis.speaking) {\n                const testUtterance = new SpeechSynthesisUtterance('');\n                testUtterance.volume = 0;\n                window.speechSynthesis.speak(testUtterance);\n              }\n              startListening();\n            } else {\n              stopAll();\n            }\n          }}\n        >\n          {isDisabled ? '🔒' :\n           assistantState === 'listening' ? '🎙️' : \n           assistantState === 'thinking' ? '🧠' : \n           assistantState === 'speaking' ? '🗣️' : '🤖'}\n        </VoiceAvatar >\n\n        <VoiceStatus isMobile={deviceInfo.isMobile}>\n          <div className=\"status-title\">{statusText.title}</div>\n          <div className=\"status-subtitle\">{statusText.subtitle}</div>\n        </VoiceStatus>\n\n        <VoiceWaves  state={assistantState} isMobile={deviceInfo.isMobile}>\n          {[...Array(deviceInfo.isMobile ? 7 : 9)].map((_, i) => (\n            <div key={i} className=\"wave- \" style={{\n              height: `${3 + (voiceIntensity * 20)}px`,\n              opacity: assistantState === 'listening' || assistantState === 'speaking' ? \n                0.7 + (voiceIntensity * 0.3) : 0\n            }} />\n          ))}\n        </VoiceWaves >\n\n        <InterimText  show={!!interimTranscript} isMobile={deviceInfo.isMobile}>\n          \"{interimTranscript}\"\n        </InterimText >\n\n        <VoiceControls isMobile={deviceInfo.isMobile}>\n          <ButtonRow isMobile={deviceInfo.isMobile}>\n            <div style={{ textAlign: 'center' }}>\n              <VoiceButton \n                onClick={assistantState === 'idle' ? startListening : stopAll}\n                disabled={isDisabled}\n                isMobile={deviceInfo.isMobile}\n                title={assistantState === 'idle' ? 'Ask one question with   voice' : 'Stop current action'}\n              >\n                {assistantState === 'idle' ? '🎤' : '⏹️'}\n              </VoiceButton >\n              <ButtonLabel disabled={isDisabled} isMobile={deviceInfo.isMobile}>\n                {deviceInfo.isMobile ? 'One Time' : 'One Time\\nQuestion'}\n              </ButtonLabel>\n            </div>\n\n            <div style={{ textAlign: 'center' }}>\n              <VoiceButton \n                active={isAutoMode}\n                onClick={toggleAutoMode}\n                disabled={isDisabled}\n                isMobile={deviceInfo.isMobile}\n                title=\"Toggle continuous   conversation mode\"\n              >\n                🔄\n              </VoiceButton >\n              <ButtonLabel disabled={isDisabled} isMobile={deviceInfo.isMobile}>\n                {deviceInfo.isMobile ? '  Auto' : '  Auto\\nMode'}\n              </ButtonLabel>\n            </div>\n\n            <div style={{ textAlign: 'center' }}>\n              <VoiceButton \n                onClick={testTTS}\n                disabled={!('speechSynthesis' in window)}\n                isMobile={deviceInfo.isMobile}\n                title=\"Test   voice output\"\n              >\n                🔊\n              </VoiceButton >\n              <ButtonLabel disabled={!('speechSynthesis' in window)} isMobile={deviceInfo.isMobile}>\n                {deviceInfo.isMobile ? '  Test' : 'Test  \\nVoice'}\n              </ButtonLabel>\n            </div>\n          </ButtonRow>\n        </VoiceControls>\n\n        <HelpHint \n          show={showHelp && assistantState === 'idle' && connectionStatus === 'connected'} \n          isMobile={deviceInfo.isMobile}\n        > \n          🌟 {deviceInfo.isMobile ? \n            'Say \"Hello\" or ask about Laxman!' : \n            'ask about Laxman\\'s expertise!'\n          }\n        </HelpHint>\n      </VoiceContainer >\n    </>\n  );\n};\n\n// Main Export\nconst Siri  = ({ onClose }) => {\n  return <VoiceAssistant  onClose={onClose} />;\n};\n\nexport default Siri ;","import React, { useState, useEffect, useRef } from 'react';\nimport styled, { keyframes } from 'styled-components';\n\n// Your portfolio data (keeping as is)\nconst LAXMAN_PORTFOLIO_DATA = `\nK LAXMAN - SOFTWARE DEVELOPMENT ENGINEER & AI SPECIALIST\n\n\n=== PROFESSIONAL SUMMARY ===\nSoftware Development Engineer at Computer Age Management Services (CAMS), Chennai (June 2024 - Present)\nIIT Delhi Alumni (2018-2024) - B.Tech + M.Tech in Computer Science & Engineering\nSpecialized in AI/ML, Financial Technology & Full Stack Development\nTeaching Assistant with 300+ students mentored | Enterprise AI Platform Developer\n\n\n=== CURRENT ROLE ===\nSoftware Development Engineer at Computer Age Management Services (CAMS)\n- Developed CamsLens Enterprise GenAI platform processing 80,000+ documents monthly with 95% accuracy\n- Implemented real-time RSS feed ingestion reducing manual monitoring by 80%\n- Designed AI-powered query APIs with 60% response time improvement\n- Built Ranking Chunks Algorithm for Vertex AI datastore optimization\n- Technologies: Vertex AI Gemini-flash 2.0, Agent Builder, Google Cloud Run, BigQuery\n- Location: Chennai, Tamil Nadu\n- Duration: June 2024 - Present\n\n\n=== EDUCATION ===\nIndian Institute of Technology Delhi (July 2018 - May 2024)\n- Dual Degree: Bachelor's + Master's in Computer Science & Engineering\n- Location: New Delhi, India\n- Specialized in AI/ML, Computer Vision, and NLP\n- Teaching Assistant (Fall 2019 - Spring 2021): Mentored 300+ undergraduate students\n- Courses: Data Structures, Introduction to Programming, Advanced CS concepts\n\n\n=== TECHNICAL SKILLS ===\n\nProgramming Languages:\n- Java: Spring Boot, Spring Security, Maven\n- Python: Flask, FastAPI, OpenCV, Scikit-learn, Pandas, NumPy\n- JavaScript: Node.js, React, ES6+\n\nFull Stack Development:\n- Frontend: React.js, HTML5, CSS3, TailwindCSS, JavaScript\n- Backend: Node.js, Express.js, Python Flask/FastAPI, Java Spring Boot\n- Databases: MySQL, PostgreSQL, MongoDB, H2, Google BigQuery\n- Web Technologies: REST APIs, GraphQL, WebSockets\n\nAI/ML & Data Science:\n- Frameworks: PyTorch, TensorFlow, Vertex AI Gen AI\n- Computer Vision: OpenCV, Layout Parser, MTL-TabNet, Dlib\n- NLP: spaCy, Large Language Models, Few-shot Learning\n- Specialized: Document Processing, Image Recognition, Facial Landmark Detection\n\nCloud & DevOps:\n- Google Cloud: Cloud Run, GCS, Vertex AI, BigQuery\n- AWS: Basic certification and services\n- Azure: Basic services\n- Containerization: Docker, Kubernetes\n- CI/CD: GitHub Actions, Jenkins, Git\n- Tools: Maven, npm, Postman, GCP SDK\n\n\n=== MAJOR PROJECTS ===\n\n1. ENTERPRISE GENAI PLATFORM (2024 - Present)\n   - Enterprise AI platform for CAMS processing 80,000+ documents monthly\n   - Achieved 95% accuracy with CMEK-compliant storage\n   - Implemented real-time RSS feed ingestion and ranking algorithms\n   - Technologies: Vertex AI Gemini-flash 2.0, Agent Builder, Google Cloud Run, BigQuery\n\n2. AI-POWERED FINANCIAL EMAIL BOT SYSTEM (2025)\n   - FastAPI microservice using Large Language Models for email classification\n   - Zero-shot learning with 95% accuracy for PAN, ARN, date extraction\n   - Processes 1,000+ emails per minute, reducing manual processing by 80%\n   - Technologies: Python, FastAPI, vLLM, Docker, LLMs\n\n3. STOCK EXCHANGE PLATFORM (2024)\n   - Full-stack trading simulation supporting 100+ concurrent users\n   - JWT authentication, role-based access control (Admin/User)\n   - Sub-second response times for critical operations\n   - Technologies: Java Spring Boot, H2 DB, Spring Security\n\n4. BORDERLESS TABLE RECOGNITION & ACCESSIBILITY (2023)\n   - PDF table detection system with 30% accuracy improvement over CascadeTabNet\n   - SVM classifier achieving 90% accuracy for table cell classification\n   - Docker containerized solution for RAVI framework\n   - Technologies: Python, Layout Parser, MTL-TabNet, OpenCV, SVM\n\n5. RAVI - READING ASSISTANT FOR VISUALLY IMPAIRED (2022)\n   - STEM document conversion toolchain (PDFs, EPUBs to accessible formats)\n   - Flask web application for crowdsourced ALT TEXT generation\n   - Improved accessibility for 500+ STEM documents\n   - Technologies: Python, Flask, HTML/CSS, JavaScript\n\n6. DRIVER DROWSINESS DETECTION SYSTEM (2021)\n   - Real-time computer vision system with 90%+ detection accuracy\n   - Facial landmark detection and eye aspect ratio calculation\n   - 30 FPS performance optimized for embedded systems\n   - Technologies: Python, OpenCV, Dlib\n\n7. ENHANCED LEARNING MANAGEMENT SYSTEM (2022)\n   - Full-stack LMS for 1,000+ users during Eamvey Technologies internship\n   - Secure payment gateway handling 500+ monthly transactions\n   - 40% performance improvement through optimization\n   - Technologies: MERN Stack (MongoDB, Express.js, React, Node.js)\n\n8. NEXGEN GAMING E-COMMERCE PLATFORM (2024)\n   - Full-stack platform selling gaming consoles and accessories\n   - Features order management, delivery tracking, and smooth UI/UX\n   - Technologies: React, Node.js, MongoDB Atlas, Express, TailwindCSS, Firebase, Vercel\n\n9. IPO MONITORING & NOTIFIER (2023)\n   - Real-time IPO Grey Market Premium monitoring with instant notifications\n   - Automates tracking and reporting for higher gains\n   - Technologies: Python, OpenCV, OCR, PDF Processing, Excel Automation\n\n10. RSS FEED DOCUMENT DOWNLOADER (2023)\n    - Automated online download of documents from RSS feeds\n    - Converts feeds into structured PDFs with Excel outputs\n    - Technologies: Python, OpenCV, OCR, PDF Processing\n\n11. MSG-TO-PDF CONVERTER FOR FINANCIAL EMAILS (2023)\n    - Converts 20,000+ .MSG financial emails into structured PDFs\n    - Streamlined workflow reduces manual effort\n    - Technologies: Python, WeasyPrint, Streamlit\n\n12. PDF FOOTNOTES PROCESSOR (2023)\n    - Maps footnotes and references from PDFs into Excel sheets\n    - Optimized for large 1,000+ page financial documents\n    - Technologies: Python, OpenCV, OCR, PDF Processing\n\n13. FIELD EXTRACTION OCR FROM IMAGE (2023)\n    - Extracts fields like PAN and Folio numbers from images automatically\n    - Technologies: Python, OpenCV, DocTR, Streamlit\n\n14. LIVE SNAPSHOT & RESTORE FOR VMs (2022)\n    - KVM-based snapshot and restore service for running VMs\n    - Technologies: Rust, HTML/CSS, VMware\n\n15. WEBPAGE USING JS (2022)\n    - Fully customizable portfolio template\n    - Technologies: ReactJS, CSS\n\n16. AIRLINE DBMS PROTOTYPE (2022)\n    - Airline booking system simulation with Flask, PostgreSQL\n    - Frontend using HTML/CSS\n    - Technologies: Flask, PostgreSQL, HTML/CSS, Kaggle datasets\n\n17. LARGE FILE DOWNLOAD (2021)\n    - Socket programming project implementing BitTorrent-style transfers\n    - Efficient TCP/IP data handling with Wireshark monitoring\n    - Technologies: Python, Socket Programming, TCP/IP, Wireshark\n\n18. SIMPLE WEBPAGE WITH PAYMENT & DASHBOARD (2022)\n    - Integrated payment gateway and admin dashboard\n    - Technologies: HTML, CSS, PayPal, GitHub Deployment\n\n19. BIG NUMBER ARITHMETIC OPERATION (2021)\n    - Arithmetic handling for extremely large numbers\n    - Technologies: C, Node.js\n\n20. SIMULATION OF LIFT CONTROLLER SYSTEM (2021)\n    - Designed logic for three-floor lift operation\n    - Technologies: VHDL, Vivado, API, Integrated Circuit\n\n21. MULTI-AGENT SEARCH MODELING IN PACMAN (2021)\n    - Decision-making modeling for PACMAN game\n    - Technologies: Python, Search Algorithms, ReactJS\n\n22. VIRTUAL INTERNSHIP - GOLDMANSACHS (2022)\n    - Finance-focused virtual internship\n    - Technologies: Java, GraphQL, React, Apollo Client\n\n23. VIRTUAL INTERNSHIP - WALMART (2022)\n    - Advanced software engineering virtual experience\n    - Technologies: Flutter, Dart, React, Node.js, PostgreSQL\n\n24. VIRTUAL INTERNSHIP - JPMORGAN CHASE (2022)\n    - Projects including Metamask integration and Twitter API usage\n    - Technologies: React, Node.js, MongoDB\n\n25. VIRTUAL INTERNSHIP - HP (2022)\n    - Virtual internship with Next.js and deployment on Vercel\n    - Technologies: Next.js, Node.js, Supabase, Razorpay, Vercel\n\n\n=== WORK EXPERIENCE ===\n\nSoftware Development Engineer | Computer Age Management Services (CAMS)\nJune 2024 - Present | Chennai, India\n- Enterprise AI platform development and financial document processing\n- Real-time data ingestion and AI-powered query optimization\n- 80% reduction in manual monitoring through automation\n\nWeb Development Intern | Eamvey Technologies\nMay 2022 - August 2022 | Remote\n- Enhanced LMS frontend/backend for 1,000+ users\n- Payment gateway integration and performance optimization\n- MERN stack development with 40% performance improvement\n\n\n=== LEADERSHIP & ACTIVITIES ===\n- Teaching Assistant at IIT Delhi (Fall 2019 - Spring 2021)\n- Mentored 300+ undergraduate students in Computer Science fundamentals\n- Conducted lab sessions, graded assignments, and held office hours\n- Specialized in Data Structures and Programming concepts\n\n\n=== CONTACT ===\nEmail: Laxmankethavath5@gmail.com\nPhone: +91-9000063740\nLinkedIn: [Professional Profile](https://linkedin.com/in/k-laxman)\nGitHub: [Project Repository](https://github.com/Laxman824)\nPortfolio: [Personal Website](https://k-laxman-portfolio.com)\nLocation: Chennai, Tamil Nadu, India\n`;\n\n\n// ============= ANIMATIONS =============\nconst loadingFade = keyframes`\n  0% { opacity: 0.4; }\n  50% { opacity: 1; }\n  100% { opacity: 0.4; }\n`;\n\nconst slideInUp = keyframes`\n  from { transform: translateY(20px); opacity: 0; }\n  to { transform: translateY(0); opacity: 1; }\n`;\n\nconst pulse = keyframes`\n  0% { transform: scale(1); }\n  50% { transform: scale(1.05); }\n  100% { transform: scale(1); }\n`;\n\nconst voicePulse = keyframes`\n  0% { transform: scale(1); box-shadow: 0 0 0 0 rgba(239, 68, 68, 0.7); }\n  70% { transform: scale(1.1); box-shadow: 0 0 0 10px rgba(239, 68, 68, 0); }\n  100% { transform: scale(1); box-shadow: 0 0 0 0 rgba(239, 68, 68, 0); }\n`;\n\nconst fadeIn = keyframes`\n  from { opacity: 0; }\n  to { opacity: 1; }\n`;\n\n// ============= STYLED COMPONENTS =============\nconst AIContainer = styled.div`\n  width: 100%;\n  padding: 15px;\n  font-family: inherit;\n  background: linear-gradient(135deg, rgba(79, 70, 229, 0.05), rgba(124, 58, 237, 0.05));\n  border-radius: 10px;\n  margin: 10px 0;\n  position: relative;\n`;\n\nconst HeaderContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 15px;\n`;\n\nconst ControlButtons = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nconst IconButton = styled.button`\n  background: rgba(79, 70, 229, 0.1);\n  border: 1px solid rgba(79, 70, 229, 0.2);\n  color: #4F46E5;\n  width: 36px;\n  height: 36px;\n  border-radius: 8px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 16px;\n  transition: all 0.3s ease;\n  position: relative;\n\n  &:hover {\n    background: rgba(79, 70, 229, 0.2);\n    transform: translateY(-2px);\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n\nconst Badge = styled.span`\n  position: absolute;\n  top: -5px;\n  right: -5px;\n  background: #ef4444;\n  color: white;\n  font-size: 10px;\n  padding: 2px 5px;\n  border-radius: 10px;\n  font-weight: bold;\n`;\n\nconst ChatHistoryContainer = styled.div`\n  max-height: 300px;\n  overflow-y: auto;\n  margin: 15px 0;\n  padding: 10px;\n  background: rgba(255, 255, 255, 0.5);\n  border-radius: 8px;\n  border: 1px solid rgba(79, 70, 229, 0.1);\n  animation: ${slideInUp} 0.5s ease;\n\n  &::-webkit-scrollbar {\n    width: 6px;\n  }\n\n  &::-webkit-scrollbar-track {\n    background: rgba(79, 70, 229, 0.05);\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background: rgba(79, 70, 229, 0.3);\n    border-radius: 3px;\n  }\n`;\n\nconst ChatMessage = styled.div`\n  margin: 8px 0;\n  padding: 10px;\n  border-radius: 8px;\n  background: ${props => props.type === 'user' \n    ? 'linear-gradient(135deg, #4F46E5, #7C3AED)' \n    : 'rgba(255, 255, 255, 0.9)'};\n  color: ${props => props.type === 'user' ? 'white' : '#374151'};\n  animation: ${fadeIn} 0.3s ease;\n  \n  .timestamp {\n    font-size: 11px;\n    opacity: 0.7;\n    margin-top: 5px;\n  }\n\n  .message-header {\n    font-size: 12px;\n    font-weight: 600;\n    margin-bottom: 5px;\n    opacity: 0.8;\n  }\n`;\n\nconst InputContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  margin-top: 10px;\n  position: relative;\n`;\n\nconst AIInput = styled.input`\n  flex: 1;\n  padding: 12px;\n  padding-right: ${props => props.hasShortcut ? '100px' : '12px'};\n  border: 2px solid #e1e5e9;\n  border-radius: 8px;\n  font-size: 16px;\n  box-sizing: border-box;\n  transition: all 0.3s ease;\n  \n  &:focus {\n    outline: none;\n    border-color: rgb(229, 228, 240);\n    box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.1);\n  }\n`;\n\nconst ShortcutHint = styled.div`\n  position: absolute;\n  right: 70px;\n  top: 50%;\n  transform: translateY(-50%);\n  font-size: 12px;\n  color: #9CA3AF;\n  background: rgba(255, 255, 255, 0.9);\n  padding: 4px 8px;\n  border-radius: 4px;\n  pointer-events: none;\n`;\n\nconst VoiceButton = styled.button`\n  width: 45px;\n  height: 45px;\n  border-radius: 50%;\n  border: none;\n  background: ${props => props.isListening ? '#ef4444' : '#4F46E5'};\n  color: white;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 18px;\n  transition: all 0.3s ease;\n  animation: ${props => props.isListening ? voicePulse : 'none'} 1.5s infinite;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n\nconst TypingContainer = styled.div`\n  display: inline-flex;\n  align-items: center;\n  margin: 15px 0;\n  padding: 12px;\n  background: rgba(79, 70, 229, 0.05);\n  border-radius: 8px;\n  animation: ${slideInUp} 0.5s ease;\n`;\n\nconst TypingDot = styled.span`\n  height: 8px;\n  width: 8px;\n  margin: 0 2px;\n  background-color: rgb(250, 249, 251);\n  border-radius: 50%;\n  animation: ${loadingFade} 1s infinite;\n  \n  &:nth-child(2) { animation-delay: 0.2s; }\n  &:nth-child(3) { animation-delay: 0.4s; }\n  &:nth-child(4) { animation-delay: 0.6s; }\n`;\n\nconst AnimatedResponse = styled.div`\n  margin-top: 15px;\n  padding: 15px;\n  background: linear-gradient(135deg, rgba(255, 255, 255, 0.9), rgba(245, 247, 250, 0.8));\n  border-radius: 12px;\n  border-left: 4px solid #4F46E5;\n  line-height: 1.6;\n  color: #374151;\n  animation: ${slideInUp} 0.6s ease;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\n`;\n\nconst RatingContainer = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-top: 12px;\n  padding-top: 12px;\n  border-top: 1px solid rgba(79, 70, 229, 0.1);\n`;\n\nconst RatingButton = styled.button`\n  background: ${props => props.active \n    ? 'rgba(79, 70, 229, 0.2)' \n    : 'rgba(79, 70, 229, 0.05)'};\n  border: 1px solid ${props => props.active \n    ? 'rgba(79, 70, 229, 0.4)' \n    : 'rgba(79, 70, 229, 0.1)'};\n  color: #4F46E5;\n  padding: 6px 12px;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 13px;\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  transition: all 0.3s ease;\n  opacity: ${props => props.active ? 1 : 0.7};\n\n  &:hover {\n    background: rgba(79, 70, 229, 0.2);\n    transform: translateY(-1px);\n  }\n`;\n\nconst SuggestionsContainer = styled.div`\n  margin-top: 15px;\n  padding: 12px;\n  background: rgba(79, 70, 229, 0.02);\n  border-radius: 10px;\n  border: 1px solid rgba(79, 70, 229, 0.1);\n  animation: ${slideInUp} 0.7s ease;\n`;\n\nconst SuggestionChip = styled.button`\n  background: linear-gradient(135deg, #4F46E5, rgb(163, 97, 249));\n  color: white;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 20px;\n  margin: 4px 6px 4px 0;\n  cursor: pointer;\n  font-size: 13px;\n  font-weight: 500;\n  transition: all 0.3s ease;\n  animation: ${pulse} 0.3s ease;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px rgba(79, 70, 229, 0.3);\n  }\n`;\n\nconst ActionButton = styled.button`\n  background: ${props => props.variant === 'primary' \n    ? 'linear-gradient(135deg, #22C55E, #16A34A)' \n    : 'rgba(79, 70, 229, 0.1)'};\n  color: ${props => props.variant === 'primary' ? 'white' : '#4F46E5'};\n  border: ${props => props.variant === 'primary' \n    ? 'none' \n    : '1px solid rgba(79, 70, 229, 0.2)'};\n  padding: 10px 16px;\n  border-radius: 8px;\n  margin: 6px 8px 6px 0;\n  cursor: pointer;\n  font-size: 13px;\n  font-weight: 500;\n  display: inline-flex;\n  align-items: center;\n  gap: 6px;\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px ${props => props.variant === 'primary' \n      ? 'rgba(34, 197, 94, 0.3)' \n      : 'rgba(79, 70, 229, 0.2)'};\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  margin-top: 15px;\n  padding: 12px;\n  background: rgba(239, 68, 68, 0.1);\n  border-radius: 8px;\n  border-left: 4px solid #EF4444;\n  color: #DC2626;\n  animation: ${slideInUp} 0.5s ease;\n`;\n\nconst KeyboardShortcutsModal = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: white;\n  padding: 25px;\n  border-radius: 12px;\n  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2);\n  z-index: 1000;\n  max-width: 400px;\n  animation: ${slideInUp} 0.3s ease;\n\n  h3 {\n    margin: 0 0 20px 0;\n    color: #4F46E5;\n  }\n\n  .shortcut-item {\n    display: flex;\n    justify-content: space-between;\n    padding: 8px 0;\n    border-bottom: 1px solid #E5E7EB;\n\n    &:last-child {\n      border-bottom: none;\n    }\n\n    .key {\n      background: #F3F4F6;\n      padding: 4px 8px;\n      border-radius: 4px;\n      font-family: monospace;\n      font-size: 12px;\n    }\n  }\n\n  .close-button {\n    position: absolute;\n    top: 15px;\n    right: 15px;\n    background: none;\n    border: none;\n    font-size: 20px;\n    cursor: pointer;\n    color: #9CA3AF;\n\n    &:hover {\n      color: #4B5563;\n    }\n  }\n`;\n\nconst Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: 999;\n  animation: ${fadeIn} 0.3s ease;\n`;\n\n// ============= HELPER COMPONENTS =============\n\n// Typing Component\nconst Typing = () => (\n  <TypingContainer>\n    <span style={{ marginRight: '10px', color: '#FFFFFF', fontWeight: '500' }}>\n      🤖 AI is thinking\n    </span>\n    <TypingDot />\n    <TypingDot />\n    <TypingDot />\n  </TypingContainer>\n);\n\n// Typewriter Effect Component\nconst TypewriterText = ({ text, onComplete, speed = 30 }) => {\n  const [displayText, setDisplayText] = useState('');\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  useEffect(() => {\n    if (currentIndex < text.length) {\n      const timeout = setTimeout(() => {\n        setDisplayText(prev => prev + text[currentIndex]);\n        setCurrentIndex(prev => prev + 1);\n      }, speed);\n      return () => clearTimeout(timeout);\n    } else if (onComplete) {\n      setTimeout(onComplete, 500);\n    }\n  }, [currentIndex, text, onComplete, speed]);\n\n  return (\n    <div>\n      {displayText}\n      {currentIndex < text.length && (\n        <span style={{ \n          opacity: 0.7, \n          animation: 'blink 1s infinite',\n          marginLeft: '2px'\n        }}>|</span>\n      )}\n    </div>\n  );\n};\n\n// Response Rating Component\nconst ResponseRating = ({ responseId }) => {\n  const [rating, setRating] = useState(null);\n\n  const handleRating = (value) => {\n    setRating(value);\n    console.log(`Response ${responseId} rated: ${value}`);\n    // You can send this to analytics or backend\n  };\n\n  return (\n    <RatingContainer>\n      <span style={{ fontSize: '13px', color: '#6B7280' }}>\n        Was this helpful?\n      </span>\n      <RatingButton \n        active={rating === 'helpful'}\n        onClick={() => handleRating('helpful')}\n      >\n        👍 Yes\n      </RatingButton>\n      <RatingButton \n        active={rating === 'not-helpful'}\n        onClick={() => handleRating('not-helpful')}\n      >\n        👎 No\n      </RatingButton>\n    </RatingContainer>\n  );\n};\n\n// Chat History Component\nconst ChatHistory = ({ messages }) => {\n  const messagesEndRef = useRef(null);\n\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  if (messages.length === 0) return null;\n\n  return (\n    <ChatHistoryContainer>\n      {messages.map((msg, index) => (\n        <ChatMessage key={index} type={msg.type}>\n          <div className=\"message-header\">\n            {msg.type === 'user' ? '👤 You' : '🤖 AI Assistant'}\n          </div>\n          <div>{msg.message}</div>\n          <div className=\"timestamp\">\n            {new Date(msg.timestamp).toLocaleTimeString()}\n          </div>\n        </ChatMessage>\n      ))}\n      <div ref={messagesEndRef} />\n    </ChatHistoryContainer>\n  );\n};\n\n// Smart Suggestions Component\nconst SmartSuggestions = ({ lastQuestion, onSuggestionClick }) => {\n  const getSuggestions = (question) => {\n    if (!question) return [\n      \"👋 Who is Laxman?\",\n      \"💼 What's his current role?\",\n      \"🎓 Tell me about his education\"\n    ];\n\n    const q = question.toLowerCase();\n    \n    if (q.includes('project') || q.includes('built') || q.includes('developed')) {\n      return [\n        \"🚀 Show me CAMSLENS project details\",\n        \"📊 Explain the Stock Exchange Platform\",\n        \"🤖 Tell me about AI projects\"\n      ];\n    }\n    \n    if (q.includes('skill') || q.includes('technology') || q.includes('tech')) {\n      return [\n        \"🧠 What AI/ML skills does he have?\",\n        \"⚛️ Show his React expertise\",\n        \"☁️ Tell me about cloud experience\"\n      ];\n    }\n    \n    if (q.includes('contact') || q.includes('reach') || q.includes('hire')) {\n      return [\n        \"📧 How can I contact him?\",\n        \"📱 Get his LinkedIn profile\",\n        \"📄 Download his resume\"\n      ];\n    }\n\n    return [\n      \"💻 Show me more projects\",\n      \"📞 How can I contact him?\",\n      \"🎯 What makes him unique?\"\n    ];\n  };\n\n  const suggestions = getSuggestions(lastQuestion);\n\n  return (\n    <SuggestionsContainer>\n      <p style={{ \n        fontSize: '13px', \n        color: '#FFFFFF', \n        margin: '0 0 10px 0',\n        fontWeight: '500'\n      }}>\n        💡 You might also want to know:\n      </p>\n      {suggestions.map((suggestion, index) => (\n        <SuggestionChip\n          key={index}\n          onClick={() => onSuggestionClick(suggestion.replace(/^[^\\s]*\\s/, ''))}\n        >\n          {suggestion}\n        </SuggestionChip>\n      ))}\n    </SuggestionsContainer>\n  );\n};\n\n// Quick Action Buttons Component\nconst QuickActions = ({ lastQuestion }) => {\n  const getActions = () => {\n    const q = (lastQuestion || '').toLowerCase();\n    \n    if (q.includes('project') || q.includes('portfolio')) {\n      return [\n        { \n          icon: '🌐', \n          label: 'View Live Projects', \n          variant: 'primary',\n          action: () => window.open('https://github.com/Laxman824', '_blank')\n        },\n        { \n          icon: '💻', \n          label: 'See GitHub', \n          variant: 'primary',\n          action: () => window.open('https://github.com/Laxman824', '_blank')\n        }\n      ];\n    }\n    \n    if (q.includes('contact') || q.includes('hire') || q.includes('reach')) {\n      return [\n        { \n          icon: '📧', \n          label: 'Send Email', \n          variant: 'primary',\n          action: () => window.open('mailto:laxmankethavath5@gmail.com', '_blank')\n        },\n        { \n          icon: '💼', \n          label: 'LinkedIn',\n          variant: 'primary',\n          action: () => window.open('https://www.linkedin.com/in/k-laxman-44913a156/', '_blank')\n        },\n        { \n          icon: '📄', \n          label: 'Download Resume', \n          variant: 'primary',\n          action: () => window.open('https://drive.google.com/file/d/1aKH71pAlFOGhlEqr3gnJ6A8BFhdkcUrP/view', '_blank')\n        }\n      ];\n    }\n\n    return [\n      { \n        icon: '📄', \n        label: 'View Resume', \n        variant: 'primary',\n        action: () => window.open('https://drive.google.com/file/d/1aKH71pAlFOGhlEqr3gnJ6A8BFhdkcUrP/view', '_blank')\n      },\n      { \n        icon: '💻', \n        label: 'GitHub',\n        variant: 'primary', \n        action: () => window.open('https://github.com/Laxman824', '_blank')\n      }\n    ];\n  };\n\n  const actions = getActions();\n\n  return actions.length > 0 ? (\n    <div style={{ marginTop: '15px' }}>\n      <p style={{ fontSize: '13px', color: '#FFFFFF', margin: '0 0 10px 0', fontWeight: '500' }}>\n        ⚡ Quick Actions:\n      </p>\n      {actions.map((action, index) => (\n        <ActionButton\n          key={index}\n          variant={action.variant}\n          onClick={action.action}\n        >\n          {action.icon} {action.label}\n        </ActionButton>\n      ))}\n    </div>\n  ) : null;\n};\n\n// Voice Input Component\nconst VoiceInput = ({ onResult, disabled }) => {\n  const [isListening, setIsListening] = useState(false);\n  const [isSupported, setIsSupported] = useState(true);\n\n  useEffect(() => {\n    setIsSupported('webkitSpeechRecognition' in window || 'SpeechRecognition' in window);\n  }, []);\n\n  const startListening = () => {\n    if (!isSupported || disabled) return;\n\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    const recognition = new SpeechRecognition();\n    \n    recognition.continuous = false;\n    recognition.interimResults = false;\n    recognition.lang = 'en-US';\n\n    recognition.onstart = () => setIsListening(true);\n    recognition.onend = () => setIsListening(false);\n    recognition.onresult = (event) => {\n      const transcript = event.results[0][0].transcript;\n      onResult(transcript);\n      setIsListening(false);\n    };\n    recognition.onerror = () => setIsListening(false);\n\n    recognition.start();\n  };\n\n  if (!isSupported) return null;\n\n  return (\n    <VoiceButton\n      isListening={isListening}\n      onClick={startListening}\n      disabled={disabled}\n      title={isListening ? \"Listening...\" : \"Click to speak\"}\n    >\n      {isListening ? '🔴' : '🎤'}\n    </VoiceButton>\n  );\n};\n\n// Keyboard Shortcuts Modal\nconst KeyboardShortcuts = ({ isOpen, onClose }) => {\n  if (!isOpen) return null;\n\n  return (\n    <>\n      <Overlay onClick={onClose} />\n      <KeyboardShortcutsModal>\n        <button className=\"close-button\" onClick={onClose}>✕</button>\n        <h3>⌨️ Keyboard Shortcuts</h3>\n        <div className=\"shortcut-item\">\n          <span>Focus search</span>\n          <span className=\"key\">Ctrl/Cmd + K</span>\n        </div>\n        <div className=\"shortcut-item\">\n          <span>Clear input</span>\n          <span className=\"key\">Esc</span>\n        </div>\n        <div className=\"shortcut-item\">\n          <span>Clear chat history</span>\n          <span className=\"key\">Ctrl/Cmd + L</span>\n        </div>\n        <div className=\"shortcut-item\">\n          <span>Export chat</span>\n          <span className=\"key\">Ctrl/Cmd + E</span>\n        </div>\n        <div className=\"shortcut-item\">\n          <span>Toggle history</span>\n          <span className=\"key\">Ctrl/Cmd + H</span>\n        </div>\n      </KeyboardShortcutsModal>\n    </>\n  );\n};\n// ============= MAIN COMPONENT =============\nconst AIAssistant = ({ triggerNextStep, initialQuestion }) => {\n  const [loading, setLoading] = useState(false);\n  const [response, setResponse] = useState('');\n  const [error, setError] = useState('');\n  const [isPuterReady, setPuterReady] = useState(false);\n  const [lastQuestion, setLastQuestion] = useState('');\n  const [inputValue, setInputValue] = useState('');\n  const [showTypewriter, setShowTypewriter] = useState(false);\n  const [rawResponse, setRawResponse] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n  const [showHistory, setShowHistory] = useState(false);\n  const [showShortcuts, setShowShortcuts] = useState(false);\n  const [currentResponseId, setCurrentResponseId] = useState(null);\n  const [hasProcessedInitialQuestion, setHasProcessedInitialQuestion] = useState(false); // NEW\n  const inputRef = useRef(null);\n\n  // Check if Puter is ready\n  useEffect(() => {\n    const checkPuter = () => {\n      if (window.puter && window.puter.ai) {\n        setPuterReady(true);\n      } else {\n        setTimeout(checkPuter, 1000);\n      }\n    };\n    checkPuter();\n  }, []);\n\n  // Fallback responses (move this before handleUserMessage)\n  const getFallbackResponse = (question) => {\n    const q = question.toLowerCase();\n    \n    if (q.includes('who') && (q.includes('laxman') || q.includes('you'))) {\n      return \"Laxman is a Software Development Engineer at CAMS with expertise in AI/ML and full-stack development. He's an IIT Delhi alumnus (2018-2024) with dual degrees in Computer Science, specializing in enterprise AI platforms and financial technology solutions.\";\n    }\n    \n    if (q.includes('contact') || q.includes('reach') || q.includes('email')) {\n      return \"You can reach Laxman at laxmankethavath5@gmail.com or call +91-9000063740. He's also available on LinkedIn and actively maintains his GitHub portfolio.\";\n    }\n    \n    if (q.includes('project')) {\n      return \"Laxman has built impressive projects including CAMSLENS (Enterprise AI platform processing 80,000+ documents monthly), an AI-powered email automation system with 95% accuracy, and a real-time stock exchange platform supporting 100+ concurrent users.\";\n    }\n    \n    if (q.includes('skill') || q.includes('technology')) {\n      return \"Laxman is proficient in Java (Spring Boot), Python (Flask, FastAPI, ML libraries), JavaScript (React, Node.js), and cloud platforms (Google Cloud, AWS). He specializes in AI/ML with experience in Vertex AI, PyTorch, and computer vision technologies.\";\n    }\n    \n    if (q.includes('education') || q.includes('study')) {\n      return \"Laxman completed his dual degree (B.Tech + M.Tech) in Computer Science from IIT Delhi (2018-2024). He also served as a Teaching Assistant, mentoring over 300 undergraduate students in core CS concepts.\";\n    }\n    \n    if (q.includes('current') || q.includes('now') || q.includes('role')) {\n      return \"Currently, Laxman works as a Software Development Engineer at CAMS in Chennai, where he develops the CAMSLENS Enterprise GenAI platform and implements cutting-edge AI solutions for financial document processing.\";\n    }\n    \n    return \"Laxman is a talented Software Development Engineer at CAMS with strong expertise in AI/ML and full-stack development. He has built multiple enterprise-level projects and brings valuable experience from IIT Delhi. Would you like to know more about his specific projects or technical skills?\";\n  };\n\n  // Extract content from AI response (move this before handleUserMessage)\n  const extractContent = (obj, depth = 0) => {\n    if (depth > 5) return null;\n    \n    if (typeof obj === 'string') return obj;\n    if (!obj) return null;\n    \n    const patterns = [\n      'content',\n      'message.content',\n      'result.message.content',\n      'choices[0].message.content',\n      'text',\n      'response',\n      'answer',\n      'reply'\n    ];\n    \n    for (const pattern of patterns) {\n      const value = pattern.split('.').reduce((acc, key) => {\n        if (key.includes('[')) {\n          const [arrayKey, index] = key.split('[');\n          const idx = parseInt(index.replace(']', ''));\n          return acc?.[arrayKey]?.[idx];\n        }\n        return acc?.[key];\n      }, obj);\n      \n      if (value && typeof value === 'string') {\n        return value;\n      }\n    }\n    \n    for (const key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        const extracted = extractContent(obj[key], depth + 1);\n        if (extracted) return extracted;\n      }\n    }\n    \n    return null;\n  };\n\n  // Handle user message (use useCallback to memoize)\n  const handleUserMessage = React.useCallback(async (value) => {\n    if (!value.trim() || !isPuterReady) return;\n    \n    console.log('Processing question:', value);\n    setLoading(true);\n    setResponse('');\n    setError('');\n    setShowTypewriter(false);\n    setLastQuestion(value);\n    \n    // Add user message to history\n    const userMessage = {\n      type: 'user',\n      message: value,\n      timestamp: Date.now()\n    };\n    setChatHistory(prev => [...prev, userMessage]);\n    \n    try {\n      const contextPrompt = `You are Laxman's portfolio assistant. Answer this question about Laxman based on his background:\n\n${LAXMAN_PORTFOLIO_DATA}\n\nGuidelines:\n- Always respond in a professional, friendly, and confident tone.\n- Keep answers concise: 2–3 sentences (50–120 words depending on question).\n- If asked about projects, highlight impact, tech stack, and achievements.\n- If asked about skills, give a practical, use-case oriented explanation.\n\nQuestion: ${value}`;\n      \n      console.log('Sending AI request...');\n      \n      const aiResponse = await window.puter.ai.chat(contextPrompt, {\n        model: 'gpt-4o-mini',\n        max_tokens: 200,\n        temperature: 0.7\n      });\n      \n      console.log('Full AI Response:', aiResponse);\n      \n      const extractedContent = extractContent(aiResponse);\n      \n      if (extractedContent && extractedContent.trim()) {\n        console.log('✅ Successfully extracted content:', extractedContent);\n        setRawResponse(extractedContent);\n        setShowTypewriter(true);\n        setCurrentResponseId(Date.now());\n        \n        // Add AI response to history\n        const aiMessage = {\n          type: 'ai',\n          message: extractedContent,\n          timestamp: Date.now()\n        };\n        setChatHistory(prev => [...prev, aiMessage]);\n      } else {\n        console.error('Could not extract content from:', aiResponse);\n        const fallbackResponse = getFallbackResponse(value);\n        setRawResponse(fallbackResponse);\n        setShowTypewriter(true);\n        setCurrentResponseId(Date.now());\n        \n        // Add fallback response to history\n        const aiMessage = {\n          type: 'ai',\n          message: fallbackResponse,\n          timestamp: Date.now()\n        };\n        setChatHistory(prev => [...prev, aiMessage]);\n      }\n      \n    } catch (err) {\n      console.error('AI Error:', err);\n      \n      const fallbackResponse = getFallbackResponse(value);\n      setRawResponse(fallbackResponse);\n      setShowTypewriter(true);\n      setCurrentResponseId(Date.now());\n      \n      // Add fallback response to history\n      const aiMessage = {\n        type: 'ai',\n        message: fallbackResponse,\n        timestamp: Date.now()\n      };\n      setChatHistory(prev => [...prev, aiMessage]);\n    } finally {\n      setLoading(false);\n    }\n  }, [isPuterReady]); // Add isPuterReady as dependency\n\n  // FIXED: Handle initial question with proper dependencies and timing\n  useEffect(() => {\n    if (initialQuestion && \n        initialQuestion.trim() && \n        isPuterReady && \n        !hasProcessedInitialQuestion) {\n      \n      console.log('🚀 Auto-processing initial question:', initialQuestion);\n      setInputValue(initialQuestion); // Set the input value\n      setHasProcessedInitialQuestion(true); // Prevent multiple processing\n      \n      // Small delay to ensure everything is ready\n      const timeoutId = setTimeout(() => {\n        handleUserMessage(initialQuestion.trim());\n      }, 500);\n\n      return () => clearTimeout(timeoutId); // Cleanup timeout\n    }\n  }, [initialQuestion, isPuterReady, hasProcessedInitialQuestion, handleUserMessage]);\n\n  // Keyboard shortcuts\n  useEffect(() => {\n    const handleKeyPress = (e) => {\n      // Ctrl/Cmd + K to focus input\n      if ((e.ctrlKey || e.metaKey) && e.key === 'k') {\n        e.preventDefault();\n        inputRef.current?.focus();\n      }\n      \n      // Escape to clear input\n      if (e.key === 'Escape' && document.activeElement === inputRef.current) {\n        setInputValue(''); // Use setInputValue instead of inputRef.current.value\n      }\n      \n      // Ctrl/Cmd + L to clear history\n      if ((e.ctrlKey || e.metaKey) && e.key === 'l') {\n        e.preventDefault();\n        setChatHistory([]);\n      }\n      \n      // Ctrl/Cmd + E to export chat\n      if ((e.ctrlKey || e.metaKey) && e.key === 'e') {\n        e.preventDefault();\n        exportChat();\n      }\n      \n      // Ctrl/Cmd + H to toggle history\n      if ((e.ctrlKey || e.metaKey) && e.key === 'h') {\n        e.preventDefault();\n        setShowHistory(prev => !prev);\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [chatHistory]);\n\n  // Export chat function\n  const exportChat = () => {\n    if (chatHistory.length === 0) {\n      alert('No chat history to export');\n      return;\n    }\n\n    const chatText = `Laxman's Portfolio AI Assistant Chat Export\\n` +\n      `Date: ${new Date().toLocaleString()}\\n` +\n      `${'='.repeat(50)}\\n\\n` +\n      chatHistory.map(item => \n        `${item.type === 'user' ? '👤 You' : '🤖 AI'}: ${item.message}\\n` +\n        `Time: ${new Date(item.timestamp).toLocaleTimeString()}\\n` +\n        `${'-'.repeat(30)}\\n`\n      ).join('\\n');\n    \n    const blob = new Blob([chatText], { type: 'text/plain' });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `laxman-portfolio-chat-${Date.now()}.txt`;\n    a.click();\n    window.URL.revokeObjectURL(url);\n  };\n\n  // Clear chat history\n  const clearHistory = () => {\n    if (chatHistory.length > 0 && window.confirm('Are you sure you want to clear chat history?')) {\n      setChatHistory([]);\n      setResponse('');\n      setError('');\n      setHasProcessedInitialQuestion(false); // Reset initial question processing\n    }\n  };\n\n  const handleKeyDown = async (e) => {\n    if (e.key === 'Enter' && inputValue.trim()) {\n      await handleUserMessage(inputValue.trim());\n      setInputValue(''); // Clear the controlled input\n    }\n  };\n\n  const handleVoiceResult = (transcript) => {\n    setInputValue(transcript); // Set input value first\n    handleUserMessage(transcript);\n  };\n\n  const handleSuggestionClick = (suggestion) => {\n    setInputValue(suggestion); // Set input value first\n    handleUserMessage(suggestion);\n  };\n\n  const onTypewriterComplete = () => {\n    setResponse(rawResponse);\n    setShowTypewriter(false);\n  };\n\n  return (\n    <AIContainer>\n      <HeaderContainer>\n        <div>\n          <h4 style={{ margin: '0 0 5px 0', color: '#FFFFFF' }}>\n            🤖 Ask me anything about Laxman!\n          </h4>\n          <p style={{ margin: '0', fontSize: '14px', color: '#FFFFFF' }}>\n            I know all about him.\n          </p>\n        </div>\n        <ControlButtons>\n          <IconButton \n            onClick={() => setShowHistory(!showHistory)}\n            title=\"Toggle chat history (Ctrl+H)\"\n          >\n            💬\n            {chatHistory.length > 0 && <Badge>{chatHistory.length}</Badge>}\n          </IconButton>\n          <IconButton \n            onClick={exportChat}\n            disabled={chatHistory.length === 0}\n            title=\"Export chat (Ctrl+E)\"\n          >\n            📥\n          </IconButton>\n          <IconButton \n            onClick={clearHistory}\n            disabled={chatHistory.length === 0}\n            title=\"Clear history (Ctrl+L)\"\n          >\n            🗑️\n          </IconButton>\n        </ControlButtons>\n      </HeaderContainer>\n      \n      {showHistory && <ChatHistory messages={chatHistory} />}\n      \n      <InputContainer>\n        <AIInput\n          ref={inputRef}\n          type=\"text\"\n          value={inputValue}\n          onChange={(e) => setInputValue(e.target.value)}\n          placeholder={\n            initialQuestion && !hasProcessedInitialQuestion \n              ? `Processing: \"${initialQuestion}\"` \n              : \"Try: 'Who is Laxman?' or use voice input 🎤\"\n          }\n          disabled={!isPuterReady || loading}\n          onKeyDown={handleKeyDown}\n          hasShortcut={true}\n        />\n        <VoiceInput \n          onResult={handleVoiceResult}\n          disabled={!isPuterReady || loading}\n        />\n      </InputContainer>\n            \n      {loading && <Typing />}\n      \n      {showTypewriter && rawResponse && (\n        <AnimatedResponse>\n          <TypewriterText \n            text={rawResponse} \n            onComplete={onTypewriterComplete}\n            speed={25}\n          />\n        </AnimatedResponse>\n      )}\n      \n      {response && !loading && !showTypewriter && (\n        <AnimatedResponse>\n          {response}\n          <ResponseRating responseId={currentResponseId} />\n        </AnimatedResponse>\n      )}\n      \n      {error && !loading && (\n        <ErrorMessage>\n          {error}\n        </ErrorMessage>\n      )}\n      \n      {!loading && (response || error) && (\n        <>\n          <QuickActions lastQuestion={lastQuestion} />\n          <SmartSuggestions \n            lastQuestion={lastQuestion} \n            onSuggestionClick={handleSuggestionClick} \n          />\n        </>\n      )}\n      \n      {!isPuterReady && (\n        <div style={{ \n          marginTop: '15px', \n          padding: '12px', \n          background: 'rgba(59, 130, 246, 0.1)', \n          borderRadius: '8px', \n          color: '#1D4ED8',\n          textAlign: 'center'\n        }}>\n          🔄 Loading AI assistant...\n        </div>\n      )}\n      \n      <KeyboardShortcuts \n        isOpen={showShortcuts} \n        onClose={() => setShowShortcuts(false)} \n      />\n      \n      <style jsx>{`\n        @keyframes blink {\n          0%, 50% { opacity: 1; }\n          51%, 100% { opacity: 0; }\n        }\n      `}</style>\n    </AIContainer>\n  );\n};\n\nexport default AIAssistant;","\n\nimport React, { useState, useEffect } from 'react';\nimport Lottie from \"lottie-react\";\nimport chatbotLottie from './chatbot_lottie.json';\nimport ChatBot from 'react-simple-chatbot';\nimport { ThemeProvider } from 'styled-components';\nimport Siri from './Siri'; // Import the Siri component\nimport styled, { keyframes } from 'styled-components';\nimport AIAssistant from './AIAssistant'; // Import the AI component\n\n\nconst isMobile = window.innerWidth <= 480;\n// --- Animations for a \"Wow Experience\" ---\nconst slideInUp = keyframes`\n  from {\n    transform: translateY(20px);\n    opacity: 0;\n  }\n  to {\n    transform: translateY(0);\n    opacity: 1;\n  }\n`;\n\n// --- MODIFIED ---: A more subtle, breathing shadow effect for the idle state\nconst pulse = keyframes`\n  0% { box-shadow: 0 6px 16px rgba(79, 70, 229, 0.3); }\n  50% { box-shadow: 0 8px 24px rgba(79, 70, 229, 0.5); }\n  100% { box-shadow: 0 6px 16px rgba(79, 70, 229, 0.3); }\n`;\n\n// --- MODIFIED ---: A slower, more graceful floating animation for the idle state\nconst float = keyframes`\n  0% { transform: translateY(0); }\n  50% { transform: translateY(-8px); }\n  100% { transform: translateY(0); }\n`;\n\n// --- NEW ---: A more energetic bounce animation for the hover state\nconst bounce = keyframes`\n  0%, 100% {  \n    transform: translateY(0);\n  }\n  50% {\n    transform: translateY(-15px);\n  }\n`;\n\n// Add popUp animation keyframe before OnlineStatus\nconst popUp = keyframes`\n  0% {\n    transform: scale(0);\n    opacity: 0;\n  }\n  40% {\n    transform: scale(1.1);\n  }\n  60% {\n    transform: scale(0.9);\n  }\n  100% {\n    transform: scale(1);\n    opacity: 1;\n  }\n`;\n\n// Online Status Component (moved to top, before it's used)\nconst OnlineStatus = styled.div`\n  position: fixed;\n  bottom: 30px;\n  right: 95px;\n  background: rgba(255, 255, 255, 0.95);\n  padding: 6px 15px;\n  border-radius: 20px;\n  font-size: 14px;\n  color: #4F46E5;\n  box-shadow: 0 2px 8px rgba(79, 70, 229, 0.15);\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  z-index: 998;\n  \n  /* Chain the animations with optimized timing */\n  animation: ${popUp} 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards,\n             ${float} 3s ease-in-out infinite 0.4s;\n  \n  /* Reverse the order of dot and text to keep dot on right side */\n  flex-direction: row-reverse;\n\n  @media screen and (max-width: 480px) {\n    bottom: 25px;\n    right: 85px;\n    padding: 4px 12px;\n    font-size: 13px;\n  }\n\n  &::before {\n    content: '';\n    width: 6px;\n    height: 6px;\n    background: #22C55E;\n    border-radius: 50%;\n    display: inline-block;\n    animation: pulse 2s infinite;\n  }\n\n  @keyframes pulse {\n    0% { opacity: 0.5; transform: scale(0.95); }\n    50% { opacity: 1; transform: scale(1); }\n    100% { opacity: 0.5; transform: scale(0.95); }\n  }\n`;\n\n// Adding new animations\nconst ripple = keyframes`\n  0% { transform: scale(0.8); opacity: 0.6; }\n  50% { transform: scale(1.5); opacity: 0.2; }\n  100% { transform: scale(0.8); opacity: 0.6; }\n`;\n\n// Adding Welcome Screen Components\nconst WelcomeScreen = styled.div`\n  position: fixed;\n  top: 0; left: 0;\n  width: 100vw; height: 100vh;\n  background: linear-gradient(to bottom right, #fdfbfb, #ebedee);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  z-index: 2000;\n  animation: ${slideInUp} 0.6s ease;\n`;\n\nconst WelcomeText = styled.h2`\n  font-size: 24px;\n  margin-top: 20px;\n  color: #333;\n  text-align: center;\n`;\n\nconst StartButton = styled.button`\n  margin-top: 30px;\n  padding: 12px 24px;\n  font-size: 16px;\n  background: linear-gradient(135deg, #4F46E5, #7C3AED);\n  color: white;\n  border: none;\n  border-radius: 30px;\n  cursor: pointer;\n  box-shadow: 0 6px 16px rgba(0, 0, 0, 0.2);\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: scale(1.05);\n    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.3);\n  }\n`;\n\n// NEW: Sound Toggle Button Component\nconst SoundToggleButton = styled.button`\n  margin-top: 15px;\n  margin-left: 15px;\n  padding: 10px 20px;\n  font-size: 14px;\n  background: ${props => props.soundEnabled ? 'linear-gradient(135deg, #22C55E, #16A34A)' : 'linear-gradient(135deg, #EF4444, #DC2626)'};\n  color: white;\n  border: none;\n  border-radius: 25px;\n  cursor: pointer;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  &:hover {\n    transform: scale(1.05);\n    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.25);\n  }\n`;\n\n// NEW: Welcome Buttons Container\nconst WelcomeButtonsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n\n  @media screen and (max-width: 480px) {\n    flex-direction: column;\n    gap: 15px;\n  }\n`;\n\n// NEW: In-Chat Sound Toggle\nconst InChatSoundToggle = styled.button`\n  position: absolute;\n  top: 10px;\n  left: 10px;\n  background: ${props => props.soundEnabled ? '#22C55E' : '#EF4444'};\n  color: white;\n  border: none;\n  padding: 5px 10px;\n  border-radius: 15px;\n  font-size: 12px;\n  cursor: pointer;\n  z-index: 1001;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  gap: 4px;\n\n  &:hover {\n    transform: translateY(-1px);\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);\n  }\n`;\n\nconst RippleEffect = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  background: ${props => props.theme.accentBright || '#4F46E5'};\n  opacity: 0.1;\n`;\n\nconst ButtonContent = styled.div`\n  position: relative;\n  z-index: 2;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  font-size: 28px;\n  \n  ${props => props.isOpen && `\n    animation: none;\n    transform: rotate(0);\n  `}\n`;\n\n// --- MODIFIED ---: Updated FloatingButton for the best experience\nconst FloatingButton = styled.button`\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  width: 65px;\n  height: 65px;\n  border-radius: 50%;\n  background: linear-gradient(135deg, #4F46E5, #7C3AED);\n  color: white;\n  border: none;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.3s ease;\n  overflow: visible;\n\n  /* Default idle animation */\n  animation: ${float} 4s ease-in-out infinite;\n\n  /* The shadow is now the primary pulsing element */\n  box-shadow: 0 6px 16px rgba(79, 70, 229, 0.3);\n  animation: ${pulse} 2.5s ease-in-out infinite, ${float} 4s ease-in-out infinite;\n\n  /* On hover, override the idle animation with the bounce */\n  &:hover {\n    animation: ${bounce} 0.8s ease;\n    box-shadow: 0 12px 28px rgba(79, 70, 229, 0.6);\n  }\n\n  &:active {\n    transform: scale(0.95);\n    transition: transform 0.1s ease;\n  }\n`;\n\n// --- MODIFIED ---: Improved button for Siri component\nconst SiriButton = styled.button`\n  position: fixed;\n  bottom: 20px;\n  left: 20px; /* Positioned on the left to avoid collision */\n  width: auto;\n  padding: 10px 20px;\n  height: 65px;\n  border-radius: 35px;\n  background: linear-gradient(135deg, #00BFFF, #1E90FF); /* Reversed gradient for a different feel */\n  color: white;\n  border: none;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px; /* Added gap for icon and text */\n  font-size: 18px; /* Slightly larger font */\n  font-weight: bold;\n  box-shadow: 0 8px 20px rgba(30, 144, 255, 0.35);\n  animation: ${float} 4s ease-in-out infinite; /* Using only float for a calmer animation */\n  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\n  z-index: 999;\n\n  &:hover {\n    transform: translateY(-5px) scale(1.05);\n    box-shadow: 0 12px 28px rgba(30, 144, 255, 0.5);\n  }\n\n  @media screen and (max-width: 480px) {\n    height: 55px; /* Smaller height for mobile */\n    padding: 8px 16px;\n    font-size: 14px;\n    left: 15px;\n  }\n`;\n\n// --- MODIFIED FOR GLASSMORPHISM ---\nconst ChatbotContainer = styled.div`\n  position: fixed;\n  bottom: 100px;\n  right: 20px;\n  z-index: 1000;\n  width: 450px;  /* Increased from 400px */\n  min-height: 500px;\n  animation: ${slideInUp} 0.5s ease-in-out;\n  \n  /* Key properties for the glass effect */\n  background: rgba(255, 255, 255, 0.6);\n  backdrop-filter: blur(15px);\n  -webkit-backdrop-filter: blur(15px);\n  \n  border-radius: 15px;\n  border: 1px solid rgba(255, 255, 255, 0.18);\n  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);\n  overflow: visible; /* Changed from hidden to ensure mic is visible */\n\n  /* Add mobile responsiveness */\n  @media screen and (max-width: 480px) {\n    width: 95%;    /* Increased from 90% */\n    right: 2.5%;   /* Adjusted for new width */\n    left: 2.5%;    /* Adjusted for new width */\n    bottom: 80px;\n    min-height: 450px;\n  }\n\n  /* Add styles to ensure chat bubbles don't get cut off */\n  .rsc-ts-bubble {\n    max-width: 95% !important;\n    white-space: pre-wrap !important;\n  }\n\n  .rsc-cs-message {\n    max-width: 100% !important;\n  }\n`;\n\n// iOS Speech Enable Button\nconst IOSSpeechButton = styled.button`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  background: #4F46E5;\n  color: white;\n  border: none;\n  padding: 5px 10px;\n  border-radius: 15px;\n  font-size: 12px;\n  cursor: pointer;\n  z-index: 1001;\n  box-shadow: 0 2px 8px rgba(79, 70, 229, 0.3);\n  transition: all 0.3s ease;\n\n  &:hover {\n    background: #3730a3;\n    transform: translateY(-1px);\n  }\n`;\n\n// Add WelcomeContainer for the full-screen welcome message\nconst WelcomeContainer = styled.div`\n  width: 100%;\n  height: 500px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background: linear-gradient(135deg, rgba(255,255,255,0.1), rgba(255,255,255,0.05));\n  padding: 20px;\n\n  @media screen and (max-width: 480px) {\n    height: 450px;\n    padding: 15px;\n  }\n`;\n\n// Theme with Gradient Header\nconst botTheme = {\n  background: 'transparent',\n  fontFamily: 'inherit',\n  headerBgColor: 'linear-gradient(90deg, #00529B, #00284D)',\n  headerFontColor: '#fff',\n  headerFontSize: '16px',\n  botBubbleColor: '#00529B',\n  botFontColor: '#fff',\n  userBubbleColor: '#fff',\n  userFontColor: '#4a4a4a',\n};\n\n// Animated SVG Avatars\nconst botEmojiSVG = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\">\n  <defs>\n    <linearGradient id=\"botGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n      <stop offset=\"0%\" style=\"stop-color:#4F46E5;stop-opacity:1\" />\n      <stop offset=\"100%\" style=\"stop-color:#7C3AED;stop-opacity:1\" />\n    </linearGradient>\n    <filter id=\"glow\">\n      <feGaussianBlur stdDeviation=\"1\" result=\"coloredBlur\"/>\n      <feMerge>\n        <feMergeNode in=\"coloredBlur\"/>\n        <feMergeNode in=\"SourceGraphic\"/>\n      </feMerge>\n    </filter>\n  </defs>\n  <style>\n    .bot-head { animation: float 3s ease-in-out infinite; }\n    .bot-eye { animation: blink 4s infinite; }\n    .bot-antenna { animation: antenna 2s ease-in-out infinite; }\n    @keyframes float {\n      0%, 100% { transform: translateY(0); }\n      50% { transform: translateY(-2px); }\n    }\n    @keyframes blink {\n      0%, 45%, 55%, 100% { transform: scaleY(1); }\n      50% { transform: scaleY(0.1); }\n    }\n    @keyframes antenna {\n      0%, 100% { transform: rotate(-5deg); }\n      50% { transform: rotate(5deg); }\n    }\n  </style>\n  <g class=\"bot-head\" fill=\"url(#botGradient)\" filter=\"url(#glow)\">\n    <rect x=\"8\" y=\"15\" width=\"24\" height=\"20\" rx=\"8\"/>\n    <circle cx=\"20\" cy=\"13\" r=\"8\"/>\n    <line class=\"bot-antenna\" x1=\"20\" y1=\"5\" x2=\"20\" y2=\"2\" stroke=\"url(#botGradient)\" stroke-width=\"2\" stroke-linecap=\"round\"/>\n  </g>\n  <g class=\"bot-eye\" fill=\"#FFFFFF\">\n    <circle cx=\"15\" cy=\"18\" r=\"2\"/>\n    <circle cx=\"25\" cy=\"18\" r=\"2\"/>\n  </g>\n  <path class=\"bot-mouth\" d=\"M14 26 Q20 30 26 26\" stroke=\"#FFFFFF\" stroke-width=\"1.5\" fill=\"none\"/>\n</svg>`;\nconst botAvatarUrl = `data:image/svg+xml;charset=utf-8,${encodeURIComponent(botEmojiSVG)}`;\nconst userEmojiSVG = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\"><text x=\"5\" y=\"30\" font-family=\"sans-serif\" font-size=\"28\">👤</text></svg>`;\nconst userAvatarUrl = `data:image/svg+xml;charset=utf-8,${encodeURIComponent(userEmojiSVG)}`;\n\n// --- Custom Interactive Components ---\nconst Typing = () => (\n  <div style={{ display: 'flex', alignItems: 'center', marginLeft: '6px' }}>\n    <div className=\"typing-indicator\">\n      <span></span>\n      <span></span>\n      <span></span>\n    </div>\n  </div>\n);\n\nconst ProjectCard = ({ name, description, imageUrl, link }) => (\n  <div style={{ width: '100%', padding: '10px', fontFamily: 'inherit' }}>\n    {imageUrl && <img src={imageUrl} alt={name} style={{ width: '100%', borderRadius: '8px' }} />}\n    <h4 style={{ margin: '10px 0 5px 0', color: '#00284D' }}>{name}</h4>\n    <p style={{ margin: '0 0 10px 0', fontSize: '14px' }}>{description}</p>\n    <a href={link} target=\"_blank\" rel=\"noopener noreferrer\" style={{\n      display: 'block', textAlign: 'center', padding: '8px',\n      backgroundColor: '#00529B', color: 'white', borderRadius: '5px',\n      textDecoration: 'none', fontWeight: 'bold'\n    }}>View Project</a>\n  </div>\n);\n\n// --- NEW: Resume Component ---\nconst ResumeCard = () => (\n  <div style={{ \n    width: '100%', \n    padding: '15px', \n    fontFamily: 'inherit',\n    textAlign: 'center',\n    background: 'linear-gradient(135deg, rgba(79, 70, 229, 0.1), rgba(124, 58, 237, 0.1))',\n    borderRadius: '10px',\n    margin: '10px 0'\n  }}>\n    <div style={{ fontSize: '40px', marginBottom: '10px' }}>📄</div>\n    <h4 style={{ margin: '10px 0 5px 0', color: '#00284D' }}>Laxman's Resume</h4>\n    <p style={{ margin: '0 0 15px 0', fontSize: '14px', color: '#666' }}></p>\n    <a \n      href=\"https://drive.google.com/file/d/1aKH71pAlFOGhlEqr3gnJ6A8BFhdkcUrP/view?usp=sharing\" \n      target=\"_blank\" \n      rel=\"noopener noreferrer\" \n      style={{\n        display: 'inline-block', \n        padding: '10px 20px',\n        backgroundColor: '#00529B', \n        color: 'white', \n        borderRadius: '25px',\n        textDecoration: 'none', \n        fontWeight: 'bold',\n        transition: 'all 0.3s ease',\n        boxShadow: '0 4px 12px rgba(0, 82, 155, 0.3)'\n      }}\n      onMouseOver={(e) => {\n        e.target.style.backgroundColor = '#003d73';\n        e.target.style.transform = 'translateY(-2px)';\n      }}\n      onMouseOut={(e) => {\n        e.target.style.backgroundColor = '#00529B';\n        e.target.style.transform = 'translateY(0)';\n      }}\n    >\n      📄 View Resume\n    </a>\n  </div>\n);\n\n// --- THE MAIN COMPONENT ---\nfunction PortfolioChatBot({ theme }) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedVoice, setSelectedVoice] = useState(null);\n  const [showWelcome, setShowWelcome] = useState(true);\n  const [isIOSInitialized, setIsIOSInitialized] = useState(false);\n  const [speechEnabled, setSpeechEnabled] = useState(false);\n  const [soundEnabled, setSoundEnabled] = useState(false); // UPDATED: Changed to false by default\n  const [showSiri, setShowSiri] = useState(false); // State for Siri UI\n  const [userQuestion, setUserQuestion] = useState(''); // NEW: Store user's typed question\n\n  // iOS Detection\n  const isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) || \n                (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1);\n\n  // UPDATED: Enhanced checkUserInput function that stores the question\n  const checkUserInput = ({ value, steps }) => {\n    const lowerCaseValue = value.toLowerCase();\n    \n    // Store the user's question for AI fallback\n    setUserQuestion(value);\n    \n    // Check for keywords first\n    if (lowerCaseValue.includes('project')) return 'project_options';\n    if (lowerCaseValue.includes('skill') || lowerCaseValue.includes('tech')) return 'skills';\n    if (lowerCaseValue.includes('contact') || lowerCaseValue.includes('email')) return 'contact';\n    if (lowerCaseValue.includes('education') || lowerCaseValue.includes('degree') || lowerCaseValue.includes('iit')) return 'education';\n    if (lowerCaseValue.includes('work') || lowerCaseValue.includes('experience') || lowerCaseValue.includes('job') || lowerCaseValue.includes('intern')) return 'experience_intro';\n    if (lowerCaseValue.includes('certification') || lowerCaseValue.includes('certificate')) return 'certifications_info';\n    if (lowerCaseValue.includes('creator') || lowerCaseValue.includes('who made you')) return 'creator_info';\n    if (lowerCaseValue.includes('resume') || lowerCaseValue.includes('cv')) return 'resume_info';\n    \n    // If no keyword match, go to AI with the stored question\n    return 'ai_fallback';\n  };\n\n  // NEW: Create AIAssistant with pre-filled question\n  const AIAssistantWithQuestion = ({ question }) => (\n    <AIAssistant initialQuestion={question} />\n  );\n\n  // UPDATED: Conversation steps with improved AI integration\n  const steps = [\n    {\n      id: 'welcome',\n      message: 'Hi there! I\\'m Laxman\\'s portfolio assistant.',\n      trigger: 'intro'\n    },\n    { id: 'intro', message: \"I can tell you about his skills, projects, and professional experience. What's on your mind?\", trigger: 'options', delay: 1500 },\n    {\n      id: 'options',\n      options: [\n        { value: 'background', label: 'Tell me about Laxman', trigger: 'typing_background' },\n        { value: 'resume', label: 'Show his Resume📄', trigger: 'typing_resume' },\n        { value: 'ai_chat', label: '🤖 Ask AI anything!', trigger: 'ai_chat' },\n        { value: 'experience', label: '🖥️Experience & Certifications', trigger: 'experience_intro' },\n        { value: 'skills', label: 'What are his skills?', trigger: 'typing_skills' },\n        { value: 'projects', label: 'Show me his projects⚡', trigger: 'project_options' },\n        { value: 'contact', label: '✉️How can I contact him?', trigger: 'typing_contact' },\n        { value: 'creator', label: 'Who made you?😜', trigger: 'creator_info' },\n      ],\n    },\n\n    // Typing indicators\n    { id: 'typing_background', component: <Typing />, asMessage: true, trigger: 'background' },\n    { id: 'typing_resume', component: <Typing />, asMessage: true, trigger: 'resume_info' },\n    { id: 'typing_skills', component: <Typing />, asMessage: true, trigger: 'skills' },\n    { id: 'typing_contact', component: <Typing />, asMessage: true, trigger: 'contact' },\n\n    // AI Chat Integration\n    { \n      id: 'ai_chat', \n      component: <AIAssistant />, \n      asMessage: true, \n      trigger: 'ask-more' \n    },\n    \n    // UPDATED: AI Fallback with pre-filled question\n    { \n      id: 'ai_fallback', \n      message: `Got it! Let me have AI help answer: \"${userQuestion}\"`, \n      trigger: 'ai_fallback_component',\n      delay: 1000\n    },\n    { \n      id: 'ai_fallback_component', \n      component: <AIAssistantWithQuestion question={userQuestion} />, \n      asMessage: true, \n      trigger: 'ask-more' \n    },\n\n    // Resume Path\n    { \n      id: 'resume_info', \n      component: <ResumeCard />, \n      asMessage: true, \n      trigger: 'ask-more' \n    },\n\n    // Background & Education Path\n    { id: 'background', message: \"Laxman is a skilled Software Developer and AI Enthusiast, currently working at CAMS Mutual Funds. He's a proud alumnus of IIT Delhi, holding both a Bachelor's and a Master's degree in Computer Science and Engineering.\", trigger: 'education', delay: 3000 },\n    { id: 'education', message: \"His education at IIT Delhi (2018-2023) provided a strong foundation in Data Structures, AI/ML, and Security. He complemented this with hands-on NLP projects and numerous certifications.\", trigger: 'ask-more' },\n\n    // Skills Path\n    { id: 'skills', message: 'Laxman has expertise across three main domains: Full Stack Development (using the MERN stack), Data Science & AI (with a focus on Gen AI, LLMs, and Computer Vision & NLP), and Cloud Infrastructure (Google Cloud Platform, Docker, and CI/CD).', trigger: 'skill_details', delay: 3200 },\n    { id: 'skill_details', options: [ { value: 'ai_experience', label: 'More on his AI/ML work', trigger: 'ai_experience' }, { value: 'fullstack_details', label: 'Details on Full Stack', trigger: 'fullstack_details' }, { value: 'main_menu', label: 'Back to main menu', trigger: 'options' }, ] },\n    { id: 'ai_experience', message: \"Absolutely. He has developed over 17 AI projects. Key examples include a camsLens Enterprise GenAI platform, AI powered Email Automation, Driver Drowsiness Detector using OpenCV and the RAVI project at IIT Delhi, which used MS Azure for image analysis. He's proficient with TensorFlow and Keras.\", trigger: 'ask-more' },\n    { id: 'fullstack_details', message: \"He excels at building end-to-end applications. For example, he built 'NexGenGaming,' a full-stack e-commerce site with React, Node.js, and MongoDB. He's also developed mobile apps with React Native.\", trigger: 'ask-more' },\n    \n    // Experience & Certifications Path\n    { id: 'experience_intro', message: \"Laxman has a solid mix of professional experience. What would you like to know about?\", trigger: 'experience_options' },\n    { \n      id: 'experience_options', \n      options: [\n        { value: 'current_role', label: 'Current Role (CAMS)', trigger: 'current_role_info' },\n        { value: 'past_work', label: 'Past Work (RAVI)', trigger: 'past_work_info' },\n        { value: 'internships', label: 'Internships', trigger: 'internships_info' },\n        { value: 'certifications', label: 'Certifications', trigger: 'certifications_info'},\n        { value: 'main_menu', label: 'Back to main menu', trigger: 'options' },\n      ]\n    },\n    { id: 'current_role_info', message: \"He is currently a Full-time Software Developer at CAMS Mutual Funds in Chennai, a role he started in June 2024.\", trigger: 'ask-more' },\n    { id: 'past_work_info', message: \"He worked for a year as a Software Engineer on the RAVI project at IIT Delhi, creating a 'Reading Assistant for the Visually Impaired.'\", trigger: 'ask-more'},\n    { id: 'internships_info', message: \"He has completed several prestigious virtual internships with companies like Walmart, Goldman Sachs, and JP Morgan Chase, focusing on advanced software engineering and front-end development.\", trigger: 'ask-more' },\n    { id: 'certifications_info', message: \"He holds key certifications including 'AWS Certificate' from Amazon, 'Complete Data Science & Machine Learning Bootcamp' from TheAppBrewery, and an LMS development certificate from Startup India.\", trigger: 'ask-more' },\n\n    // Projects Path\n    { id: 'project_options', message: \"He has over 34 projects! Here are a few highlights. Which one interests you?\", trigger: 'project_list' },\n    {\n      id: 'project_list',\n      options: [\n        { value: 'p1_details', label: 'NexGenGaming E-Commerce', trigger: 'typing_p1' },\n        { value: 'p2_details', label: 'IPO Monitoring System', trigger: 'typing_p2' },\n        { value: 'p3_details', label: 'MSG-to-PDF Converter', trigger: 'typing_p3' },\n        { value: 'main_menu', label: 'Back to main menu', trigger: 'options' },\n      ],\n    },\n    { id: 'typing_p1', component: <Typing />, asMessage: true, trigger: 'p1_card' },\n    { \n      id: 'p1_card', \n      component: ( <ProjectCard name=\"NexGenGaming - E-Commerce Platform\" description=\"A full-stack gaming store built with React, Node.js, and MongoDB. It features user auth, order management, and delivery tracking.\" imageUrl=\"https://i.imgur.com/f7j1f9o.png\" link=\"https://gaming-ecommerce-fronted.vercel.app/\" /> ), \n      asMessage: true, \n      trigger: 'ask-more' \n    },\n    { id: 'typing_p2', component: <Typing />, asMessage: true, trigger: 'p2_card' },\n    { \n      id: 'p2_card', \n      component: ( <ProjectCard name=\"IPO Monitoring & Notifier\" description=\"A real-time system that monitors IPO Grey Market Premiums using Python, OCR, and automated data processing to send notifications.\" imageUrl=\"https://i.imgur.com/y3A9Z8o.png\" link=\"https://ipo-monitor-gmp.streamlit.app/Dashboard\" /> ), \n      asMessage: true, \n      trigger: 'ask-more' \n    },\n    { id: 'typing_p3', component: <Typing />, asMessage: true, trigger: 'p3_card' },\n    { \n      id: 'p3_card', \n      component: ( <ProjectCard name=\"MSG-to-PDF Converter\" description=\"An automated workflow tool built with Python to convert over 20,000 financial emails from .MSG to structured PDF files for a major client.\" imageUrl=\"https://i.imgur.com/qFb2z3e.png\" link=\"https://msg-to-pdf-converter-cams.streamlit.app/\" /> ), \n      asMessage: true, \n      trigger: 'ask-more' \n    },\n    \n    // Contact & Other Paths\n    { id: 'contact', component: ( <div> You can reach Laxman through any of these channels: <ul> <li style={{marginBottom: '8px'}}>📧 Email: <a href=\"mailto:laxmankethavath5@gmail.com\">laxmankethavath5@gmail.com</a></li> <li style={{marginBottom: '8px'}}>🔗 LinkedIn: <a href=\"https://www.linkedin.com/in/k-laxman-44913a156/\" target=\"_blank\" rel=\"noopener noreferrer\">k-laxman-44913a156</a></li> <li>🐙 GitHub: <a href=\"https://github.com/Laxman824\" target=\"_blank\" rel=\"noopener noreferrer\">Laxman824</a></li> </ul> </div> ), asMessage: true, trigger: 'ask-more' },\n    { id: 'creator_info', message: 'I was designed and brought to Life by Laxman!', trigger: 'ask-more' },\n    \n    // Standard Closing/Looping Paths\n    { id: 'ask-more', message: 'Can I help with anything else?', trigger: 'ask-more-options', delay: 1500 },\n    { \n      id: 'ask-more-options', \n      options: [ \n        { value: 'yes', label: 'Yes, please!', trigger: 'options' }, \n        { value: 'ask_anything', label: 'Let me type my question', trigger: 'ask_anything_prompt' }, \n        { value: 'ai_help', label: '🤖 Ask AI directly', trigger: 'ai_chat' },\n        { value: 'no', label: 'No, that\\'s all for now.', trigger: 'end-conversation' }, \n      ] \n    },\n    \n    // UPDATED: Better prompt for user input\n    { \n      id: 'ask_anything_prompt', \n      message: 'Perfect! Type your question and I\\'ll either answer directly or get AI to help you:', \n      trigger: 'user_free_text' \n    },\n    { id: 'user_free_text', user: true, trigger: checkUserInput },\n    \n    // Fallback for unrecognized (though this shouldn't be reached with AI fallback)\n    { \n      id: 'unrecognized', \n      message: \"I'm not sure how to answer that, but let me get AI to help!\", \n      trigger: 'ai_fallback_component' \n    },\n    \n    { id: 'end-conversation', message: 'Great! Thanks for stopping by. Feel free to reach out to Laxman directly. Have a wonderful day!', end: true },\n  ];\n\n  // Enhanced useEffect for voice loading and iOS initialization\n  useEffect(() => {\n    const synth = window.speechSynthesis;\n    \n    // Function to load voices\n    const loadVoices = () => {\n      const voices = synth.getVoices();\n      const preferredVoices = [\"Google US English\", \"Samantha\", \"Microsoft Zira Desktop - English (United States)\", \"Daniel\"];\n      const voice = voices.find(v => preferredVoices.includes(v.name)) || voices.find(v => v.lang.startsWith('en-US'));\n      setSelectedVoice(voice || voices[0]);\n    };\n\n    // iOS-specific initialization function\n    const initializeIOSSpeech = () => {\n      if (isIOSInitialized) return;\n      \n      const silentUtterance = new SpeechSynthesisUtterance('');\n      silentUtterance.volume = 0;\n      silentUtterance.rate = 1;\n      silentUtterance.pitch = 1;\n      \n      synth.cancel();\n      synth.speak(silentUtterance);\n      setIsIOSInitialized(true);\n      setSpeechEnabled(true);\n    };\n\n    if (synth.getVoices().length > 0) {\n      loadVoices();\n    } else {\n      synth.onvoiceschanged = loadVoices;\n    }\n\n    if (isIOS) {\n      const handleUserInteraction = () => {\n        initializeIOSSpeech();\n        document.removeEventListener('touchstart', handleUserInteraction);\n        document.removeEventListener('click', handleUserInteraction);\n      };\n\n      document.addEventListener('touchstart', handleUserInteraction, { passive: true });\n      document.addEventListener('click', handleUserInteraction);\n      \n      return () => {\n        document.removeEventListener('touchstart', handleUserInteraction);\n        document.removeEventListener('click', handleUserInteraction);\n      };\n    } else {\n      setIsIOSInitialized(true);\n      setSpeechEnabled(true);\n    }\n  }, [isIOSInitialized, isIOS]);\n\n  // Enhanced speech configuration with user sound preference\n  const speechConfig = {\n    enable: speechEnabled && selectedVoice && soundEnabled,\n    lang: 'en-US',\n    rate: 0.9,\n    pitch: 1.1,\n    voice: selectedVoice,\n    autoStart: !isIOS && soundEnabled,\n  };\n\n  // Manual iOS speech enabler\n  const enableIOSSpeech = () => {\n    const synth = window.speechSynthesis;\n    const utterance = new SpeechSynthesisUtterance(\"Speech enabled for iOS\");\n    utterance.volume = 0.1;\n    utterance.rate = 0.9;\n    utterance.pitch = 1.1;\n    \n    synth.cancel();\n    synth.speak(utterance);\n    \n    setIsIOSInitialized(true);\n    setSpeechEnabled(true);\n  };\n\n  // Toggle sound function\n  const toggleSound = () => {\n    setSoundEnabled(prev => !prev);\n    if (!soundEnabled && window.speechSynthesis) {\n      // If enabling sound, cancel any current speech\n      window.speechSynthesis.cancel();\n    }\n  };\n\n  const handleToggleChat = () => {\n    if (isOpen && window.speechSynthesis) {\n      window.speechSynthesis.cancel();\n    }\n    setIsOpen(prevIsOpen => !prevIsOpen);\n    if (!isOpen) {\n      setShowWelcome(true);\n    }\n  };\n\n  return (\n    <>\n      <style>\n        {`.typing-indicator { display: inline-block; } .typing-indicator span { height: 8px; width: 8px; float: left; margin: 0 1px; background-color: #9E9EA1; display: block; border-radius: 50%; opacity: 0.4; animation: loadingFade 1s infinite; } .typing-indicator span:nth-of-type(2) { animation-delay: 0.2s; } .typing-indicator span:nth-of-type(3) { animation-delay: 0.4s; } @keyframes loadingFade { 0% { opacity: 0.4; } 50% { opacity: 1; } 100% { opacity: 0.4; } }`}\n      </style>\n\n      {!isOpen && <OnlineStatus>Chat with me!</OnlineStatus>}\n      {!showSiri && <SiriButton onClick={() => setShowSiri(true)}>Voice with AI 🎙️</SiriButton>}\n      \n      <FloatingButton \n        onClick={handleToggleChat}\n        theme={theme}\n        aria-label={isOpen ? \"Close chat\" : \"Open chat with portfolio assistant\"}\n      >\n        <RippleEffect theme={theme} />\n        <ButtonContent>\n          {isOpen ? (\n            <span style={{ fontSize: '24px' }}>✕</span>\n          ) : (\n            <Lottie \n              animationData={chatbotLottie}\n              loop={true}\n              style={{ width: 45, height: 45 }}\n            />\n          )}\n        </ButtonContent>\n      </FloatingButton>\n\n      {isOpen && (\n        <ChatbotContainer>\n          <ThemeProvider theme={botTheme}>\n            {/* In-Chat Sound Toggle - Always visible when chat is open */}\n            <InChatSoundToggle \n              onClick={toggleSound} \n              soundEnabled={soundEnabled}\n              title={soundEnabled ? \"Turn sound off\" : \"Turn sound on\"}\n            >\n              {soundEnabled ? '🔊' : '🔇'}\n              {soundEnabled ? 'ON' : 'OFF'}\n            </InChatSoundToggle>\n\n            {/* iOS Speech Enable Button - only show if needed */}\n            {isIOS && !speechEnabled && (\n              <IOSSpeechButton onClick={enableIOSSpeech}>\n                🔊 Enable Voice\n              </IOSSpeechButton>\n            )}\n            \n            {selectedVoice && (\n              <>\n                {showWelcome ? (\n                  <WelcomeContainer>\n                    <Lottie \n                      animationData={chatbotLottie} \n                      loop={true} \n                      style={{ \n                        width: window.innerWidth <= 480 ? 140 : 180, \n                        height: window.innerWidth <= 480 ? 140 : 180 \n                      }} \n                    />\n                    <WelcomeText>Hi there! I'm Laxman's portfolio assistant.</WelcomeText>\n                    \n                    {/* Welcome Buttons Container with Sound Toggle */}\n                    <WelcomeButtonsContainer>\n                      <StartButton onClick={() => setShowWelcome(false)}>\n                        Start Chat\n                      </StartButton>\n                      <SoundToggleButton \n                        onClick={toggleSound}\n                        soundEnabled={soundEnabled}\n                        title={soundEnabled ? \"Turn sound off\" : \"Turn sound on\"}\n                      >\n                        {soundEnabled ? '🔊' : '🔇'}\n                        {soundEnabled ? 'Sound On' : 'Sound Off'}\n                      </SoundToggleButton>\n                    </WelcomeButtonsContainer>\n                  </WelcomeContainer>\n                ) : (\n                  <ChatBot\n                    steps={steps}\n                    headerTitle=\"Portfolio Assistant\"\n                    botAvatar={botAvatarUrl}\n                    userAvatar={userAvatarUrl}\n                    width=\"100%\"\n                    height=\"500px\"\n                    style={{\n                      background: 'transparent',\n                      boxShadow: 'none',\n                    }}\n                    speechSynthesis={speechConfig}\n                  />\n                )}\n              </>\n            )}\n          </ThemeProvider>\n        </ChatbotContainer>\n      )}\n\n      {showSiri && <Siri onClose={() => setShowSiri(false)} isMobile={isMobile} />}\n    </>\n  );\n}\n\nexport default PortfolioChatBot;"],"names":["ambientPulse","keyframes","float","holographicGlow","particleFloat","orbitalRotation","neuralPulse","voiceVisualization","listeningWaves","speakingPulse","thinkingMatrix","slideIn","slideOut","spin","bounceIn","fadeOut","neuralConnectionPulse","VoiceContainer","styled","props","isMobile","isKeyboardOpen","isClosing","ParticleField","Particle","size","color","duration","delay","left","VoiceAvatar","state","disabled","css","VoiceWaves","VoiceButton","active","InterimText","show","NeuralNetwork","BrowserNotice","type","ConnectionIndicator","status","CloseButton","VoiceStatus","VoiceControls","ButtonRow","ButtonLabel","HelpHint","VoiceAssistant","onClose","assistantState","setAssistantState","useState","connectionStatus","setConnectionStatus","isAutoMode","setIsAutoMode","interimTranscript","setInterimTranscript","showHelp","setShowHelp","isVisible","setIsVisible","setIsClosing","notice","setNotice","hasPermission","setHasPermission","retryCount","setRetryCount","deviceInfo","setDeviceInfo","setIsKeyboardOpen","voiceIntensity","setVoiceIntensity","recognitionRef","useRef","synthRef","silenceTimeoutRef","isProcessingRef","finalTranscriptRef","audioContextRef","autoModeRef","noticeTimeoutRef","initialViewportHeight","window","innerHeight","animationFrameRef","particles","useMemo","Array","from","length","_","i","id","Math","random","floor","useEffect","userAgent","navigator","toLowerCase","platform","test","isIOS","maxTouchPoints","isAndroid","isChrome","isFirefox","isSafari","isEdge","hasTouch","isStandalone","standalone","matchMedia","matches","supports","CSS","supportsBackdropFilter","hasHardwareAcceleration","DeviceOrientationEvent","viewport","document","querySelector","setAttribute","handleResize","currentHeight","heightDifference","current","handleOrientationChange","setTimeout","addEventListener","removeEventListener","showNotice","useCallback","title","content","clearTimeout","prev","checkBrowserCompatibility","isSecureContext","requestMicrophonePermission","async","stream","mediaDevices","getUserMedia","audio","echoCancellation","noiseSuppression","autoGainControl","getTracks","forEach","track","stop","error","console","playAudioCue","audioContext","AudioContext","webkitAudioContext","resume","oscillator","createOscillator","gainNode","createGain","connect","destination","volume","frequency","setValueAtTime","currentTime","exponentialRampToValueAtTime","gain","start","warn","extractContent","obj","depth","trim","result","message","patterns","pattern","value","split","reduce","acc","key","includes","arrayKey","index","idx","parseInt","replace","e","getVoiceFallback","input","voiceResponses","input_lower","getAIResponse","maxWords","contextPrompt","userInput","aiResponse","puter","ai","chat","model","max_tokens","temperature","stopAll","speechSynthesis","cancel","cancelAnimationFrame","startListening","SpeechRecognition","webkitSpeechRecognition","recognition","continuous","interimResults","lang","maxAlternatives","onstart","log","onresult","event","interimText","resultIndex","results","transcript","isFinal","timeoutDuration","finalResult","processFinalSpeech","onerror","onend","remainingText","speakResponse","text","cleanText","utterance","SpeechSynthesisUtterance","rate","pitch","setVoice","voices","getVoices","preferredVoice","find","voice","name","speak","onvoiceschanged","speaking","finalText","toggleAutoMode","newState","testTTS","testText","closeChat","checkServices","timer","statusText","subtitle","getVoiceStatus","isDisabled","className","map","particle","style","top","width","transform","onClick","testUtterance","height","opacity","textAlign","loadingFade","slideInUp","pulse","voicePulse","fadeIn","AIContainer","HeaderContainer","ControlButtons","IconButton","Badge","ChatHistoryContainer","ChatMessage","InputContainer","AIInput","hasShortcut","isListening","TypingContainer","TypingDot","AnimatedResponse","RatingContainer","RatingButton","SuggestionsContainer","SuggestionChip","ActionButton","variant","ErrorMessage","KeyboardShortcutsModal","Overlay","Typing","marginRight","fontWeight","TypewriterText","onComplete","speed","displayText","setDisplayText","currentIndex","setCurrentIndex","timeout","animation","marginLeft","ResponseRating","responseId","rating","setRating","handleRating","fontSize","ChatHistory","messages","messagesEndRef","scrollIntoView","behavior","msg","Date","timestamp","toLocaleTimeString","ref","SmartSuggestions","lastQuestion","onSuggestionClick","suggestions","question","q","getSuggestions","margin","suggestion","QuickActions","actions","icon","label","action","open","getActions","marginTop","VoiceInput","onResult","setIsListening","isSupported","setIsSupported","KeyboardShortcuts","isOpen","triggerNextStep","initialQuestion","loading","setLoading","response","setResponse","setError","isPuterReady","setPuterReady","setLastQuestion","inputValue","setInputValue","showTypewriter","setShowTypewriter","rawResponse","setRawResponse","chatHistory","setChatHistory","showHistory","setShowHistory","showShortcuts","setShowShortcuts","currentResponseId","setCurrentResponseId","hasProcessedInitialQuestion","setHasProcessedInitialQuestion","inputRef","checkPuter","getFallbackResponse","hasOwnProperty","extracted","handleUserMessage","React","userMessage","now","extractedContent","aiMessage","fallbackResponse","err","timeoutId","handleKeyPress","ctrlKey","metaKey","preventDefault","focus","activeElement","exportChat","alert","chatText","toLocaleString","repeat","item","join","blob","Blob","url","URL","createObjectURL","a","createElement","href","download","click","revokeObjectURL","confirm","onChange","target","placeholder","onKeyDown","padding","background","borderRadius","jsx","innerWidth","bounce","popUp","OnlineStatus","WelcomeText","StartButton","SoundToggleButton","soundEnabled","WelcomeButtonsContainer","InChatSoundToggle","RippleEffect","theme","accentBright","ButtonContent","FloatingButton","SiriButton","ChatbotContainer","IOSSpeechButton","WelcomeContainer","botTheme","fontFamily","headerBgColor","headerFontColor","headerFontSize","botBubbleColor","botFontColor","userBubbleColor","userFontColor","botAvatarUrl","encodeURIComponent","userAvatarUrl","display","alignItems","ProjectCard","description","imageUrl","link","src","alt","rel","backgroundColor","textDecoration","ResumeCard","marginBottom","transition","boxShadow","onMouseOver","onMouseOut","setIsOpen","selectedVoice","setSelectedVoice","showWelcome","setShowWelcome","isIOSInitialized","setIsIOSInitialized","speechEnabled","setSpeechEnabled","setSoundEnabled","showSiri","setShowSiri","userQuestion","setUserQuestion","AIAssistantWithQuestion","steps","trigger","options","component","asMessage","user","lowerCaseValue","end","synth","loadVoices","preferredVoices","v","startsWith","handleUserInteraction","silentUtterance","initializeIOSSpeech","passive","speechConfig","enable","autoStart","toggleSound","prevIsOpen","animationData","chatbotLottie","loop","ThemeProvider","headerTitle","botAvatar","userAvatar"],"sourceRoot":""}